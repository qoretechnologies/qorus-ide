{"class":[{"name":"AnotherProcessor","data":{"type":"class","name":"AnotherProcessor","desc":"1","lang":"qore","version":"1","processor":{},"base-class-name":"AbstractDataProcessor","code":"AnotherProcessor-1.qclass","yaml_file":"/workspace/qorus-vscode/test_project/AnotherProcessor-1.qclass.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"AnotherProcessor-1.qclass"},"hasDraft":false,"isDraft":false},{"name":"ConfigItems","data":{"type":"class","name":"ConfigItems","desc":"ConfigItems","lang":"python","version":"1","class-connectors":[{"name":"Connector1","type":"input","method":"asg","input-provider":{"type":"type","name":"qore","can_manage_fields":true,"descriptions":["type entry group","Qore data type \"hash<auto>\""],"path":"/hash"}}],"code":"ConfigItems-1.qclass.py","config-items":[{"name":"CFG","default_value":"test","description":"asg","config_group":1}],"yaml_file":"/workspace/qorus-vscode/test_project/ConfigItems-1.qclass.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"ConfigItems-1.qclass.py"},"hasDraft":false,"isDraft":false},{"name":"DifferentConfigItems","data":{"type":"class","name":"DifferentConfigItems","desc":"asg","lang":"python","version":"1","code":"DifferentConfigItems-1.qclass.py","config-items":[{"name":"SomeConfigItem","default_value":"asgf","description":"asg","config_group":"asg"}],"yaml_file":"/workspace/qorus-vscode/test_project/DifferentConfigItems-1.qclass.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"DifferentConfigItems-1.qclass.py"},"hasDraft":false,"isDraft":false},{"name":"EventConnector","data":{"type":"class","name":"EventConnector","desc":"test","lang":"qore","version":"1","class-connectors":[{"name":"Connector1","type":"event","method":"test"}],"code":"EventConnector-1.qclass","yaml_file":"/workspace/qorus-vscode/test_project/EventConnector-1.qclass.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"EventConnector-1.qclass"},"hasDraft":false,"isDraft":false},{"name":"MoreConfigItems","data":{"type":"class","name":"MoreConfigItems","desc":"asg","lang":"python","version":"1.0","code":"MoreConfigItems-1.0.qclass.py","config-items":[{"name":"CFG","default_value":"Test","description":"asg","config_group":"asg"}],"yaml_file":"/workspace/qorus-vscode/test_project/MoreConfigItems-1.0.qclass.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"MoreConfigItems-1.0.qclass.py"},"hasDraft":false,"isDraft":false},{"name":"ProcesorTest","data":{"type":"class","name":"ProcesorTest","desc":"asg","lang":"qore","version":"asg","processor":{},"base-class-name":"AbstractDataProcessor","code":"ProcesorTest-asg.qclass","yaml_file":"/workspace/qorus-vscode/test_project/ProcesorTest-asg.qclass.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"ProcesorTest-asg.qclass"},"hasDraft":false,"isDraft":false}],"connection":[],"errors":[],"event":[],"fsm":[{"name":"AutoLayoutTest","data":{"type":"fsm","name":"AutoLayoutTest","desc":"test","states":{"1":{"position":{"x":77.453125,"y":81.5},"initial":false,"name":"State 1","desc":"","type":"if","id":"JLZM3DCsn","condition":"test"},"2":{"position":{"x":148.453125,"y":80.5},"initial":false,"name":"State 2","desc":"","type":"if","id":"OOIqL7sFv","condition":"asgasg","transitions":[{"state":"1","branch":"true","language":"qore"}]},"3":{"position":{"x":321.453125,"y":79.5},"initial":false,"name":"State 3","desc":"","type":"if","id":"fDFCucvPw","condition":"agasg"},"4":{"position":{"x":233.453125,"y":80.5},"initial":false,"name":"State 4","desc":"","type":"if","id":"rCBVBvIXB","condition":"asgasgasg"},"5":{"position":{"x":507.453125,"y":79.5},"initial":false,"name":"State 5","desc":"","type":"if","id":"FJiup_doX","condition":"asgasgasg"},"6":{"position":{"x":596.453125,"y":79.5},"initial":false,"name":"State 6","desc":"","type":"if","id":"Kb6eFVj-7","condition":"asgasgasg"},"7":{"position":{"x":688.453125,"y":79.5},"initial":false,"name":"State 7","desc":"","type":"if","id":"HYOEIDhtR","condition":"qweqweqwe"},"8":{"position":{"x":450.453125,"y":81.5},"initial":false,"name":"State 8","desc":"","type":"if","id":"lDoISN0Dr","condition":"qewqweqwe"},"9":{"position":{"x":720.453125,"y":81.5},"initial":false,"name":"State 9","desc":"","type":"if","id":"seAqW4ZmE","condition":"12312312"},"10":{"position":{"x":76.453125,"y":80.5},"initial":false,"name":"State 10","desc":"","type":"if","id":"Jhupbb5uL","condition":"qweqweqwe"},"11":{"position":{"x":436.453125,"y":81.5},"initial":false,"name":"State 11","desc":"","type":"if","id":"mA5y2ncMq","condition":"qweqweasgasg"},"12":{"position":{"x":823.453125,"y":78.5},"initial":false,"name":"State 12","desc":"","type":"if","id":"ljFO715BD","condition":"asgasgas"},"13":{"position":{"x":418.453125,"y":82.5},"initial":false,"name":"State 13","desc":"","type":"if","id":"aMWhkQAf1","condition":"xzbxzbxzbxzb"},"14":{"position":{"x":225.453125,"y":81.5},"initial":false,"name":"State 14","desc":"","type":"if","id":"9LzvNLJtB","condition":"asgasgasgsag"},"15":{"position":{"x":606.453125,"y":79.5},"initial":false,"name":"State 15","desc":"","type":"if","id":"DzTO9A8JD","condition":"asgasgasgasg"},"16":{"position":{"x":109.453125,"y":79.5},"initial":false,"name":"State 16","desc":"","type":"if","id":"-5jn2bM4F","condition":"asgasgasgasg"},"17":{"position":{"x":638.453125,"y":478.5},"initial":false,"name":"State 17","desc":"","type":"if","id":"R9Pvg0AQK","condition":"asgasgasg"}},"yaml_file":"/workspace/qorus-vscode/test_project/AutoLayoutTest.qfsm.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false},{"name":"AutoLayoutTest 2","data":{"type":"fsm","name":"AutoLayoutTest 2","desc":"test","states":{"1":{"position":{"x":77.453125,"y":81.5},"initial":false,"name":"State 1","desc":"","type":"if","id":"JLZM3DCsn","condition":"test"},"2":{"position":{"x":148.453125,"y":80.5},"initial":false,"name":"State 2","desc":"","type":"if","id":"OOIqL7sFv","condition":"asgasg","transitions":[{"state":"1","branch":"true","language":"qore"}]},"3":{"position":{"x":321.453125,"y":79.5},"initial":false,"name":"State 3","desc":"","type":"if","id":"fDFCucvPw","condition":"agasg"},"4":{"position":{"x":233.453125,"y":80.5},"initial":false,"name":"State 4","desc":"","type":"if","id":"rCBVBvIXB","condition":"asgasgasg"},"5":{"position":{"x":507.453125,"y":79.5},"initial":false,"name":"State 5","desc":"","type":"if","id":"FJiup_doX","condition":"asgasgasg"},"6":{"position":{"x":596.453125,"y":79.5},"initial":false,"name":"State 6","desc":"","type":"if","id":"Kb6eFVj-7","condition":"asgasgasg"},"7":{"position":{"x":688.453125,"y":79.5},"initial":false,"name":"State 7","desc":"","type":"if","id":"HYOEIDhtR","condition":"qweqweqwe"},"8":{"position":{"x":450.453125,"y":81.5},"initial":false,"name":"State 8","desc":"","type":"if","id":"lDoISN0Dr","condition":"qewqweqwe"},"9":{"position":{"x":720.453125,"y":81.5},"initial":false,"name":"State 9","desc":"","type":"if","id":"seAqW4ZmE","condition":"12312312"},"10":{"position":{"x":76.453125,"y":80.5},"initial":false,"name":"State 10","desc":"","type":"if","id":"Jhupbb5uL","condition":"qweqweqwe"},"11":{"position":{"x":436.453125,"y":81.5},"initial":false,"name":"State 11","desc":"","type":"if","id":"mA5y2ncMq","condition":"qweqweasgasg"},"12":{"position":{"x":823.453125,"y":78.5},"initial":false,"name":"State 12","desc":"","type":"if","id":"ljFO715BD","condition":"asgasgas"},"13":{"position":{"x":418.453125,"y":82.5},"initial":false,"name":"State 13","desc":"","type":"if","id":"aMWhkQAf1","condition":"xzbxzbxzbxzb"},"14":{"position":{"x":225.453125,"y":81.5},"initial":false,"name":"State 14","desc":"","type":"if","id":"9LzvNLJtB","condition":"asgasgasgsag"},"15":{"position":{"x":606.453125,"y":79.5},"initial":false,"name":"State 15","desc":"","type":"if","id":"DzTO9A8JD","condition":"asgasgasgasg"},"16":{"position":{"x":109.453125,"y":79.5},"initial":false,"name":"State 16","desc":"","type":"if","id":"-5jn2bM4F","condition":"asgasgasgasg"},"17":{"position":{"x":638.453125,"y":478.5},"initial":false,"name":"State 17","desc":"","type":"if","id":"R9Pvg0AQK","condition":"asgasgasg"},"18":{"position":{"x":77.453125,"y":161.5},"initial":false,"name":"State 18","desc":"","type":"if","id":"asd1","condition":"test"},"19":{"position":{"x":148.453125,"y":160.5},"initial":false,"name":"State 19","desc":"","type":"if","id":"asd2","condition":"asgasg","transitions":[{"state":"1","branch":"true","language":"qore"}]},"20":{"position":{"x":321.453125,"y":159.5},"initial":false,"name":"State 20","desc":"","type":"if","id":"asd3","condition":"agasg"},"21":{"position":{"x":233.453125,"y":160.5},"initial":false,"name":"State 21","desc":"","type":"if","id":"asd4","condition":"asgasgasg"},"22":{"position":{"x":507.453125,"y":79.5},"initial":false,"name":"State 22","desc":"","type":"if","id":"asd5","condition":"asgasgasg"},"23":{"position":{"x":596.453125,"y":79.5},"initial":false,"name":"State 23","desc":"","type":"if","id":"asd6","condition":"asgasgasg"},"24":{"position":{"x":688.453125,"y":159.5},"initial":false,"name":"State 24","desc":"","type":"if","id":"asd7","condition":"qweqweqwe"},"25":{"position":{"x":450.453125,"y":81.5},"initial":false,"name":"State 25","desc":"","type":"if","id":"asd8","condition":"qewqweqwe"},"26":{"position":{"x":720.453125,"y":81.5},"initial":false,"name":"State 26","desc":"","type":"if","id":"asd9","condition":"12312312"},"27":{"position":{"x":76.453125,"y":80.5},"initial":false,"name":"State 27","desc":"","type":"if","id":"asd10","condition":"qweqweqwe"}},"yaml_file":"/workspace/qorus-vscode/test_project/AutoLayoutTest2.qfsm.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false},{"name":"MessageStateTest","data":{"type":"fsm","name":"MessageStateTest","desc":"kek","states":{"1":{"position":{"x":127,"y":257.5},"initial":false,"name":"State 1","desc":"","type":"state","id":"I2BXCOrfCiT","action":{"type":"send-message","value":{"type":"factory","name":"wsclient","supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","descriptions":[null,"WebSocket client to URL \"wss://sandbox:<masked>@sandbox.qoretechnologies.com:443/apievents\""],"path":"","options":{"url":{"type":"string","value":"wss://sandbox:sandbox@sandbox.qoretechnologies.com/apievents"}},"message_id":"ping","message":{"type":"*data","value":"test"}}}},"2":{"position":{"x":648,"y":282.5},"initial":false,"name":"State 2","desc":"","type":"state","id":"VWUDOhL5r80","action":{"type":"mapper","value":"test:1.0"}},"3":{"position":{"x":271,"y":506.5},"initial":false,"name":"State 3","desc":"","type":"if","id":"MaICIpiyO","condition":"hjgyjg","transitions":[{"state":"1","branch":"true","language":"qore"},{"state":"2","branch":"true","language":"qore"}]}},"yaml_file":"/workspace/qorus-vscode/test_project/MessageStateTest.qfsm.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false},{"name":"MultipleVariablesFSMTest","data":{"type":"fsm","name":"MultipleVariablesFSMTest","desc":"Test with multiple variables","transient":{"RootVariableProvider":{"name":"RootVariableProvider","value":{"type":"datasource","name":"omquser","transaction_management":true,"record_requires_search_options":false,"path":"/bb_local","supports_read":true,"supports_update":true,"supports_create":true,"supports_delete":true,"supports_messages":"NONE","descriptions":["Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries","Record-based data provider for db table `public.bb_local`; supports create, read/search, update, delete, upsert, and bulk operations"]},"type":"data-provider","variableType":"transient"}},"var":{"VarTest":{"name":"VarTest","value":{"type":"factory","name":"wsclient","transaction_management":false,"path":"","options":{"url":{"type":"string","value":"Test"}},"optionsChanged":false,"supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","record_requires_search_options":false,"descriptions":["Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries","WebSocket client to URL \"ws://Test/\""],"message_id":"ping","message":{"type":"data","value":"pong"}},"type":"data-provider","desc":"Var test","variableType":"var"}},"states":{"1":{"position":{"x":157,"y":126.5},"initial":false,"name":"State 1","desc":"","type":"state","id":"KsLFP0eU2","action":{"type":"var-action","value":{"var_type":"transient","var_name":"RootVariableProvider","action_type":"search"}}},"2":{"position":{"x":208,"y":326.5},"initial":false,"name":"State 2","desc":"","type":"block","block-type":"while","id":"70-tc5OyU","transient":{"WhileVariableProvider":{"name":"WhileVariableProvider","value":{"type":"datasource","name":"omquser","transaction_management":true,"record_requires_search_options":false,"path":"/erp_order_import","supports_request":false,"supports_read":true,"supports_update":true,"supports_create":true,"supports_delete":true,"supports_messages":"NONE","descriptions":["Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries","Record-based data provider for db table `public.erp_order_import`; supports create, read/search, update, delete, upsert, and bulk operations"]},"type":"data-provider","variableType":"transient"}},"block-config":{},"states":{"1":{"position":{"x":112,"y":57.5},"initial":false,"name":"State 2.State 1","desc":"","type":"state","id":"G5l_XPLEd","action":{"type":"var-action","value":{"var_type":"transient","var_name":"RootVariableProvider","action_type":"search-single"}}},"2":{"position":{"x":110,"y":237.5},"initial":false,"name":"State 2.State 2","desc":"","type":"state","id":"PGlZi7h6J","action":{"type":"var-action","value":{"var_type":"transient","var_name":"WhileVariableProvider","action_type":"search"}}},"3":{"position":{"x":115,"y":415.5},"initial":false,"name":"State 2.State 3","desc":"","type":"block","block-type":"for","id":"6AqkSItvA","transient":{"DeepVariable":{"name":"DeepVariable","value":{"type":"datasource","name":"omquser","transaction_management":true,"record_requires_search_options":false,"path":"/inventory_example","supports_read":true,"supports_update":true,"supports_create":true,"supports_delete":true,"supports_messages":"NONE","descriptions":["Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries","Record-based data provider for db table `public.inventory_example`; supports create, read/search, update, delete, upsert, and bulk operations"]},"type":"data-provider","variableType":"transient"}},"block-config":{},"var":{"DeepPersistentTest":{"name":"DeepPersistentTest","value":{"type":"factory","name":"wsclient","transaction_management":false,"path":"","options":{"url":{"type":"string","value":"asg"}},"optionsChanged":false,"supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","record_requires_search_options":false,"descriptions":["WebSocket client to URL \"ws://asg/\""]},"type":"data-provider","variableType":"var"}},"states":{"1":{"position":{"x":131,"y":97.5},"initial":false,"name":"State 2.State 3.State 1","desc":"","type":"state","id":"lw-m5eAIf","action":{"type":"var-action","value":{"var_type":"transient","var_name":"WhileVariableProvider","action_type":"search"}}},"2":{"position":{"x":137,"y":268.5},"initial":false,"name":"State 2.State 3.State 2","desc":"","type":"state","id":"jubgfxB8U","action":{"type":"var-action","value":{"var_type":"transient","var_name":"RootVariableProvider","action_type":"search-single"}}},"3":{"position":{"x":138,"y":443.5},"initial":false,"name":"State 2.State 3.State 3","desc":"","type":"state","id":"h9wikD8XQ","action":{"type":"var-action","value":{"var_type":"transient","var_name":"RootVariableProvider","action_type":"transaction","transaction_action":"begin-transaction"}}},"4":{"position":{"x":476,"y":264.5},"initial":false,"name":"State 2.State 3.State 4","desc":"","type":"state","id":"VAppIEARY","action":{"type":"var-action","value":{"var_type":"transient","var_name":"DeepVariable","action_type":"transaction","transaction_action":"rollback"}}},"5":{"position":{"x":473,"y":94.5},"initial":false,"name":"State 2.State 3.State 5","desc":"","type":"state","id":"a7x4V_-3_","action":{"type":"var-action","value":{"var_type":"var","var_name":"DeepPersistentTest","action_type":"send-message","message":{"type":"data","value":"ping"},"message_id":"pong","options":{"url":{"type":"string","value":"asg"}}}}},"6":{"position":{"x":466,"y":443.5},"initial":false,"name":"State 2.State 3.State 6","desc":"","type":"block","block-type":"foreach","id":"KmIak5rqo","states":{"1":{"position":{"x":78,"y":78.5},"initial":false,"name":"State 2.State 3.State 6.State 1","desc":"","type":"state","id":"p1zA0JSKA","action":{"type":"var-action","value":{"var_type":"transient","var_name":"RootVariableProvider","action_type":"search"}}}}}}},"4":{"position":{"x":432,"y":251.5},"initial":false,"name":"State 2.State 4","desc":"","type":"state","id":"haq3rEZYT","action":{"type":"mapper","value":"test:1.0"}}}}},"yaml_file":"/workspace/qorus-vscode/test_project/MultipleVariablesFSMTest.qfsm.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false},{"name":"OndewoIntentHandler","data":{"type":"fsm","name":"OndewoIntentHandler","desc":"ONDEWO intent handler","groups":["ondewo"],"states":{"1":{"position":{"x":47,"y":42},"initial":true,"name":"Save Intent Info","desc":"","type":"state","id":"djsGWd6mm","action":{"type":"connector","value":{"class":"BBM_OutputData","connector":"writeOutputData"}},"execution_order":1,"transitions":[{"state":"2","language":"qore"}],"config-items":[{"name":"output-data-hash","value":{"$local:*":"$transient:intent"},"parent":{"interface-type":"class","interface-name":"BBM_OutputData","interface-version":"1.0"},"is_value_templated_string":false}]},"2":{"position":{"x":291,"y":40},"initial":false,"name":"Log Intent Info","desc":"","type":"state","id":"uVE6AvAs2","action":{"type":"connector","value":{"class":"BBM_LogMessage","connector":"logMessage"}},"transitions":[{"state":"3","language":"qore"}],"config-items":[{"name":"log-message-level","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"}},{"name":"log-message-string","value":"intent: %y","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"}},{"name":"log-message-args","value":"$transient:intent","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"},"is_value_templated_string":true}]},"3":{"position":{"x":95,"y":128},"initial":false,"name":"Intent: Close Ticket?","desc":"","type":"if","id":"9emxEKc7U","condition":"\"$transient:intent.intent\" == \"i.500.problem_solved_yes.close_ticket_yes\"","transitions":[{"state":"4","branch":"true","language":"qore"},{"state":"5","branch":"false","language":"qore"}]},"4":{"position":{"x":280,"y":144},"initial":false,"name":"Set Ticket Resolved","desc":"","type":"state","id":"s-_C4YEEY","action":{"type":"connector","value":{"class":"BBM_DataProviderRecordUpdate","connector":"DataProvider Record Update From Config"}},"config-items":[{"name":"dataprovider-update-provider-path","value":"connection/snrests-demo/tables/incident","parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}},{"name":"dataprovider-update-set","value":{"state":6},"parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}},{"name":"dataprovider-update-where","value":{"number":"INC0010002"},"parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}},{"name":"dataprovider-update-search-options","parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}},{"name":"dataprovider-update-mapper","parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}},{"name":"dataprovider-update-output-data","parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}},{"name":"dataprovider-update-retries","parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}},{"name":"dataprovider-update-retry-delay","parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}},{"name":"dataprovider-update-retry-errors","parent":{"interface-type":"class","interface-name":"BBM_DataProviderRecordUpdate","interface-version":"1.0"}}]},"5":{"position":{"x":97,"y":272},"initial":false,"name":"Intent: Update Ticket Info","desc":"","type":"if","id":"osVQiBjQQ","condition":"False","transitions":[{"state":"6","branch":"true","language":"qore"},{"state":"7","branch":"false","language":"qore"}]},"6":{"position":{"x":283,"y":287},"initial":false,"name":"Update Ticket Info","desc":"","type":"state","id":"bTfehPXQv","action":{"type":"connector","value":{"class":"BBM_LogMessage","connector":"logMessage"}},"config-items":[{"name":"log-message-level","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"}},{"name":"log-message-string","value":"update ticket","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"}},{"name":"log-message-args","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"}}]},"7":{"position":{"x":99,"y":413},"initial":false,"name":"Intent: Call Back Later?","desc":"","type":"if","id":"Azfjehe0W","condition":"False","transitions":[{"state":"8","branch":"true","language":"qore"}]},"8":{"position":{"x":291,"y":427},"initial":false,"name":"Schedule Followup","desc":"","type":"state","id":"HX4xORKRh","action":{"type":"connector","value":{"class":"BBM_LogMessage","connector":"logMessage"}},"config-items":[{"name":"log-message-level","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"}},{"name":"log-message-string","value":"schedule followup","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"}},{"name":"log-message-args","parent":{"interface-type":"class","interface-name":"BBM_LogMessage","interface-version":"1.0"}}]}},"yaml_file":"/workspace/qorus-vscode/test_project/TestFSM.qfsm.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false},{"name":"TransactionBlockTest","data":{"type":"fsm","name":"TransactionBlockTest","desc":"kek","globalvar":{"variable_0":{"name":"variable_0","value":{"type":"factory","name":"wsclient","transaction_management":false,"path":"","options":{"url":{"type":"string","value":"asg"}},"optionsChanged":false,"supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","supports_observable":true,"record_requires_search_options":false,"descriptions":["WebSocket client to URL \"ws://asg/\""]},"type":"data-provider","desc":"tsst","variableType":"globalvar"}},"states":{"1":{"position":{"x":241,"y":205.5},"initial":false,"name":"State 1","desc":"","type":"block","block-type":"transaction","id":"H542Qir6n","block-config":{"data-provider":{"type":"data-provider","value":{"type":"factory","name":"db","transaction_management":true,"path":"/bb_local","options":{"datasource":{"type":"string","value":"omquser"}},"optionsChanged":false,"record_requires_search_options":false,"supports_read":true,"supports_update":true,"supports_create":true,"supports_delete":true,"supports_messages":"NONE","supports_observable":false,"descriptions":["Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries","Record-based data provider for db table `public.bb_local`; supports create, read/search, update, delete, upsert, and bulk operations"]}}},"autovar":{"trans":{"type":"data-provider","desc":"the data provider for the transaction","value":{"supports_read":true,"supports_create":true,"supports_update":true,"supports_upsert":true,"supports_delete":true,"supports_native_search":true,"supports_bulk_read":true,"supports_bulk_create":true,"supports_bulk_upsert":true,"supports_request":false,"supports_children":false,"transaction_management":true,"has_record":true,"record_requires_search_options":false,"supports_child_create":false,"supports_child_delete":false,"supports_add_field":true,"supports_update_field":true,"supports_delete_field":true,"supports_schema":false,"supports_search_expressions":true,"supports_observable":false,"supports_messages":"NONE","children_can_support_apis":false,"children_can_support_records":false,"children_can_support_observers":false,"children_can_support_messages":false,"children_can_support_transactions":false,"search_logic_capabilities":3,"type":"factory","constructor_options":{"datasource":{"type":["string","object<AbstractDatasource>"],"required":false,"desc":"the datasource connection string or an abstract datasource object; in case a connection string is given, then the \"table\" option also needs to be given as a string","sensitive":false,"type_info":[{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null},{"name":"object<AbstractDatasource>","desc":"Qore data type \"object<AbstractDatasource>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"object<AbstractDatasource>","mandatory":true,"types_accepted":["AbstractDatasource"],"types_returned":["AbstractDatasource"],"fields":{},"can_manage_fields":false,"tags":null}]},"table":{"type":["string","object<AbstractTable>"],"required":true,"desc":"the table name or table object; if a table string is provided, then the \"datasource\" option must also be provided","sensitive":false,"type_info":[{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null},{"name":"object<AbstractTable>","desc":"Qore data type \"object<AbstractTable>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"object<AbstractTable>","mandatory":true,"types_accepted":["AbstractTable"],"types_returned":["AbstractTable"],"fields":{},"can_manage_fields":false,"tags":null}]}},"create_options":{"returning":{"type":["auto"],"required":false,"desc":"a string (giving the output name) or a hash describing the return parameters for an insert; a hash will have the following keys: 'key': (required) the column name to return, and 'type' (optional) the data type for the output placeholder buffer (ex: 'number')","sensitive":false,"type_info":[{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}]}},"upsert_options":{"upsert_strategy":{"type":["string"],"required":false,"desc":"providers the upsert strategy; 'UpsertInsertFirst': try to insert first, if it fails, try updating; 'UpsertUpdateFirst': try to update first, if it fails, try inserting; 'UpsertSelectFirst': try to select first, if it fails, insert, if it succeeds, update if necessary; 'UpsertInsertOnly': only insert, never update, 'UpsertUpdateOnly': only update, never insert; 'UpsertAuto' (the default) use the most efficient upsert for the underlying DB","sensitive":false,"type_info":[{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}]},"omit_update":{"type":["softlist<string>"],"required":false,"desc":"allows for an asymmetrical upsert where a set of column values is inserted, but a smaller set is updated in case the unique key values are present in the target table; the value of this option should be set to the columns to omit in the update clause","sensitive":false,"type_info":[{"name":"softlist<string>","desc":"Qore data type \"softlist<string>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"list<string>","mandatory":true,"types_accepted":["list<string>","list","nothing"],"types_returned":["list<string>"],"fields":{},"can_manage_fields":false,"tags":null}]}},"search_options":{"columns":{"type":["auto"],"required":false,"desc":"column argument for the select expression","sensitive":false,"type_info":[{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}]},"limit":{"type":["int"],"required":false,"desc":"the maximum number of records to return","sensitive":false,"type_info":[{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}]},"offset":{"type":["int"],"required":false,"desc":"the offset number in records to return","sensitive":false,"type_info":[{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}]},"groupby":{"type":["softlist<auto>"],"required":false,"desc":"group by argument for the select expression","sensitive":false,"type_info":[{"name":"softlist<auto>","desc":"Qore data type \"softlist<auto>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"list<auto>","mandatory":true,"types_accepted":["list<auto>","nothing","auto"],"types_returned":["list<auto>"],"fields":{},"can_manage_fields":false,"tags":null}]},"having":{"type":["hash<auto>"],"required":false,"desc":"having argument for the select expression","sensitive":false,"type_info":[{"name":"hash<auto>","desc":"Qore data type \"hash<auto>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"hash<auto>","mandatory":true,"types_accepted":["hash<auto>"],"types_returned":["hash<auto>"],"fields":{},"can_manage_fields":true,"tags":null}]},"orderby":{"type":["softlist<string>"],"required":false,"desc":"order by argument for the select expression","sensitive":false,"type_info":[{"name":"softlist<string>","desc":"Qore data type \"softlist<string>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"list<string>","mandatory":true,"types_accepted":["list<string>","list","nothing"],"types_returned":["list<string>"],"fields":{},"can_manage_fields":false,"tags":null}]},"forupdate":{"type":["softbool"],"required":false,"desc":"uses FOR UPDATE with the query to lock records selected","sensitive":false,"type_info":[{"name":"softbool","desc":"Qore data type \"softbool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool","float","int","integer","string","date","number","null"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}]},"requires_result":{"type":["bool"],"required":false,"desc":"If True, then an operation that returns no result or affects no records results in an error","default_value":false}},"expressions":{"AND":{"type":1,"label":"AND","name":"and (&&)","desc":"logical AND operation supporting logic short-circuiting","symbol":"&&","role":3,"args":[{"type_code":"any","type":"bool"}],"return_type":"bool","varargs":true,"arg_type_info":[{"type_code":"any","type":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"OR":{"type":1,"label":"OR","name":"or (||)","desc":"logical OR operation supporting logic short-circuiting","symbol":"||","role":3,"args":[{"type_code":"any","type":"bool"}],"return_type":"bool","varargs":true,"arg_type_info":[{"type_code":"any","type":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"like":{"type":1,"label":"like","name":"like","desc":"The value to bind as the 'like' value (ex: '%some string%')","symbol":"like","role":3,"args":[{"type_code":"any","type":"string"},{"type_code":"value","type":"string"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"value","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"<":{"type":1,"label":"<","name":"less than (<)","desc":"a value for less than comparisons; if the field value is less than the argument, then the operation returns true; the type of the value should correspond to the field type","symbol":"<","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"<=":{"type":1,"label":"<=","name":"less than or equals (<=)","desc":"a value for less than or equals comparisons; if the field value is less than or equal to the argument, then the operation returns true; the type of the value should correspond to the field type","symbol":"<=","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},">":{"type":1,"label":">","name":"greater than (>)","desc":"a value for less than comparisons; if the field value is less than the argument, then the operation returns true; the type of the value should correspond to the field type","symbol":">","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},">=":{"type":1,"label":">=","name":"greater than or equals (>=)","desc":"a value for greater than or equals comparisons; if the field value is greater than or equal to the argument, then the operation returns true; the type of the value should correspond to the field type","symbol":">=","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"!=":{"type":1,"label":"!=","name":"not equals (!=)","desc":"a value for not-equals comparisons; the type of the value should correspond to the field type","symbol":"!=","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"=":{"type":1,"label":"=","name":"equals (=)","desc":"a value for equality comparisons; the type of the value should correspond to the field type","symbol":"==","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"between":{"type":1,"label":"between","name":"between","desc":"A list with two elements giving the lower and upper bounds of the field value; the list element value types must be equal to the field's type","symbol":"between","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"in":{"type":1,"label":"in","name":"in","desc":"A list giving possible values of the field;  if the field's value matches any of the values in the list, then the operation returns true; element value types must be equal to the field's type","symbol":"in","role":3,"args":[{"type_code":"any","type":"auto"}],"return_type":"bool","varargs":true,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"not":{"type":1,"label":"not","name":"logical not (!)","desc":"This operator reverses the logcal value of the operator expression given as an argument","symbol":"!","role":3,"args":[{"type_code":"any","type":"bool"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"substr":{"type":1,"label":"substr","name":"substr","desc":"returns a substring from a string; args: string, int start char, [int length]","symbol":"substr","role":3,"args":[{"type_code":"any","type":"string"},{"type_code":"value","type":"int"},{"type_code":"value","type":"*int"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"value","type":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"value","type":{"name":"*int","desc":"Qore data type \"*int\"","supported_options":null,"options":null,"base_type":"int","mandatory":false,"types_accepted":["int","integer","nothing","null"],"types_returned":["int","integer","nothing"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"in_select":{"type":1,"label":"in_select","name":"in_select","desc":"check if a value is in a sub-select; args: value, table name for the subselect, subselect query hash","symbol":"in_select","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"value","type":"string"},{"type_code":"value","type":"hash<auto>"}],"return_type":"bool","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"value","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"value","type":{"name":"hash<auto>","desc":"Qore data type \"hash<auto>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"hash<auto>","mandatory":true,"types_accepted":["hash<auto>"],"types_returned":["hash<auto>"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"bool","desc":"Qore data type \"bool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}},"as":{"type":1,"label":"as","name":"as","desc":"aliases a result; args: expression or value, string label","symbol":"as","role":2,"args":[{"type_code":"any","type":"auto"},{"type_code":"value","type":"string"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"value","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"prepend":{"type":1,"label":"prepend","name":"prepend","desc":"prepends a string to another string; args: string to be prepended, string to prepend to the first string","symbol":"prepend","role":3,"args":[{"type_code":"any","type":"string"},{"type_code":"any","type":"string"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"any","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"append":{"type":1,"label":"append","name":"append","desc":"appends or catenates a string to another string; args: string to be appended, string to append or concatenate to the first string","symbol":"append","role":3,"args":[{"type_code":"any","type":"string"},{"type_code":"any","type":"string"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"any","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"upper":{"type":1,"label":"upper","name":"upper","desc":"converts a string to all upper case; arg: string","symbol":"upper","role":3,"args":[{"type_code":"any","type":"string"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"lower":{"type":1,"label":"lower","name":"lower","desc":"converts a string to all lower case; arg: string","symbol":"lower","role":3,"args":[{"type_code":"any","type":"string"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"distinct":{"type":1,"label":"distinct","name":"distinct","desc":"indicates that only records with distinct values of the given field should be returned","symbol":"distinct","role":2,"args":[{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"min":{"type":1,"label":"min","name":"min","desc":"Returns the minimum value in the group","symbol":"min","role":2,"args":[{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"max":{"type":1,"label":"max","name":"max","desc":"Returns the maximum value in the group","symbol":"max","role":2,"args":[{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"avg":{"type":1,"label":"avg","name":"avg","desc":"Returns the average of the given values in the group","symbol":"avg","role":2,"args":[{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"sum":{"type":1,"label":"sum","name":"sum","desc":"Returns the sum of the given values","symbol":"sum","role":2,"args":[{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"count":{"type":1,"label":"count","name":"count","desc":"Count the number of rows in the group","symbol":"count","role":2,"args":[{"type_code":"any","type":"auto"}],"return_type":"int","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},"minus":{"type":1,"label":"minus","name":"minus","desc":"Subtracts one number from another","symbol":"minus","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"plus":{"type":1,"label":"plus","name":"plus","desc":"Adds two numbers","symbol":"plus","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"divide":{"type":1,"label":"divide","name":"divide","desc":"Divides one number by another","symbol":"divide","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"multiply":{"type":1,"label":"multiply","name":"multiply","desc":"Multiplies two numbers","symbol":"multiply","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"coalesce":{"type":1,"label":"coalesce","name":"coalesce","desc":"Returns the value of the first expression with a value","symbol":"coalesce","role":3,"args":[{"type_code":"any","type":"auto"}],"return_type":"auto","varargs":true,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"length":{"type":1,"label":"length","name":"length","desc":"Returns the length of the argument","symbol":"length","role":3,"args":[{"type_code":"any","type":"auto"}],"return_type":"int","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},"seq":{"type":1,"label":"seq","name":"seq","desc":"returns the next value in the given sequence; args: sequence name","symbol":"seq","role":3,"args":[{"type_code":"value","type":"string"}],"return_type":"int","varargs":false,"arg_type_info":[{"type_code":"value","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},"seq_currval":{"type":1,"label":"seq_currval","name":"seq_currval","desc":"returns the current value in the given sequence; args: sequence name","symbol":"seq_currval","role":3,"args":[{"type_code":"value","type":"string"}],"return_type":"int","varargs":false,"arg_type_info":[{"type_code":"value","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},"over":{"type":1,"label":"over","name":"over","desc":"returns the output of the SQL window given by the arguments; args: *string partiion by, *string order by","symbol":"over","role":2,"args":[{"type_code":"field reference","type":"auto"},{"type_code":"value","type":"*string"},{"type_code":"value","type":"*string"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"field reference","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"value","type":{"name":"*string","desc":"Qore data type \"*string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"},"string.empty_to_nothing":{"type":"bool","desc":"if an empty string should be converted to no value"}},"options":null,"base_type":"string","mandatory":false,"types_accepted":["string","nothing","null"],"types_returned":["string","nothing"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"value","type":{"name":"*string","desc":"Qore data type \"*string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"},"string.empty_to_nothing":{"type":"bool","desc":"if an empty string should be converted to no value"}},"options":null,"base_type":"string","mandatory":false,"types_accepted":["string","nothing","null"],"types_returned":["string","nothing"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"dense_rank":{"type":1,"label":"dense_rank","name":"dense_rank","desc":"Returns the rank of a row in an ordered group of rows as a number","symbol":"dense_rank","role":2,"args":[],"return_type":"auto","varargs":false,"arg_type_info":[],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"first_value":{"type":1,"label":"first_value","name":"first_value","desc":"Returns the first value in an ordered group of rows","symbol":"first_value","role":2,"args":[{"type_code":"field reference","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"field reference","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"last_value":{"type":1,"label":"last_value","name":"last_value","desc":"Returns the last value in an ordered group of rows","symbol":"last_value","role":2,"args":[{"type_code":"field reference","type":"auto"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"field reference","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"ntile":{"type":1,"label":"ntile","name":"ntile","desc":"Returns the group number of an ordered group of rows","symbol":"ntile","role":2,"args":[{"type_code":"value","type":"int"}],"return_type":"int","varargs":false,"arg_type_info":[{"type_code":"value","type":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},"percent_rank":{"type":1,"label":"percent_rank","name":"percent_rank","desc":"Returns the percent rank of a row in an ordered group of rows","symbol":"percent_rank","role":2,"args":[],"return_type":"int","varargs":false,"arg_type_info":[],"return_type_info":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},"rank":{"type":1,"label":"percent_rank","name":"percent_rank","desc":"Returns the row number of a row in an ordered group of rows","symbol":"percent_rank","role":2,"args":[],"return_type":"int","varargs":false,"arg_type_info":[],"return_type_info":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},"row_number":{"type":1,"label":"row_number","name":"row_number","desc":"Returns the row number of a result set","symbol":"row_number","role":2,"args":[],"return_type":"int","varargs":false,"arg_type_info":[],"return_type_info":{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}},"cast":{"type":1,"label":"cast","name":"cast","desc":"cast operator","symbol":"cast","role":3,"args":[{"type_code":"any","type":"auto"},{"type_code":"value","type":"string"},{"type_code":"value","type":"*int"},{"type_code":"value","type":"*int"}],"return_type":"auto","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},{"type_code":"value","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"value","type":{"name":"*int","desc":"Qore data type \"*int\"","supported_options":null,"options":null,"base_type":"int","mandatory":false,"types_accepted":["int","integer","nothing","null"],"types_returned":["int","integer","nothing"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"value","type":{"name":"*int","desc":"Qore data type \"*int\"","supported_options":null,"options":null,"base_type":"int","mandatory":false,"types_accepted":["int","integer","nothing","null"],"types_returned":["int","integer","nothing"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}},"year":{"type":1,"label":"year","name":"year","desc":"returns the year component of a date as a string (ex: `2022`)","symbol":"year","role":3,"args":[{"type_code":"any","type":"date"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"date","desc":"Qore data type \"date\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"date","mandatory":true,"types_accepted":["date"],"types_returned":["date"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"year_month":{"type":1,"label":"year_month","name":"year_month","desc":"returns the year and month components of a date as a string (ex: `2022-06`)","symbol":"year_month","role":3,"args":[{"type_code":"any","type":"date"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"date","desc":"Qore data type \"date\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"date","mandatory":true,"types_accepted":["date"],"types_returned":["date"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"year_day":{"type":1,"label":"year_day","name":"year_day","desc":"returns the year, month, and day components of a date as a string (ex: `2022-06-29`)","symbol":"year_day","role":3,"args":[{"type_code":"any","type":"date"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"date","desc":"Qore data type \"date\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"date","mandatory":true,"types_accepted":["date"],"types_returned":["date"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"year_hour":{"type":1,"label":"year_hour","name":"year_hour","desc":"returns the year, month, day, and hour components of a date as a string (ex: `2022-06-29 15`)","symbol":"year_hour","role":3,"args":[{"type_code":"any","type":"date"}],"return_type":"string","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"date","desc":"Qore data type \"date\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"date","mandatory":true,"types_accepted":["date"],"types_returned":["date"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}},"truncate_date":{"type":1,"label":"truncate_date","name":"truncate_date","desc":"truncates the given date to the given resolution; args: date, string code: Y: year, M: month, D: day, H: hour, m: minute, S: second","symbol":"truncate_date","role":3,"args":[{"type_code":"any","type":"date"},{"type_code":"value","type":"string"}],"return_type":"date","varargs":false,"arg_type_info":[{"type_code":"any","type":{"name":"date","desc":"Qore data type \"date\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"date","mandatory":true,"types_accepted":["date"],"types_returned":["date"],"fields":{},"can_manage_fields":false,"tags":null}},{"type_code":"value","type":{"name":"string","desc":"Qore data type \"string\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"},"string.encoding":{"type":"string","desc":"the output encoding when writing to the type"},"string.max_size_chars":{"type":"integer","desc":"the maximum length of the string in characters"}},"options":null,"base_type":"string","mandatory":true,"types_accepted":["string"],"types_returned":["string"],"fields":{},"can_manage_fields":false,"tags":null}}],"return_type_info":{"name":"date","desc":"Qore data type \"date\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"date","mandatory":true,"types_accepted":["date"],"types_returned":["date"],"fields":{},"can_manage_fields":false,"tags":null}}},"children":null,"name":"db","desc":"Record-based data provider for db table `public.bb_local`; supports create, read/search, update, delete, upsert, and bulk operations","path":"/bb_local","options":{"datasource":{"type":"string","value":"omquser"}}},"variableType":"autovar","readOnly":true}},"states":{"1":{"position":{"x":144,"y":275.5},"initial":false,"name":"State 1.State 1","desc":"","type":"state","id":"p5lN4sJLi","action":{"type":"var-action","value":{"var_type":"autovar","var_name":"trans","action_type":"transaction","search_options":{"columns":{"type":["auto"],"required":false,"desc":"column argument for the select expression","sensitive":false,"type_info":[{"name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null}]},"limit":{"type":["int"],"required":false,"desc":"the maximum number of records to return","sensitive":false,"type_info":[{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}]},"offset":{"type":["int"],"required":false,"desc":"the offset number in records to return","sensitive":false,"type_info":[{"name":"int","desc":"Qore data type \"int\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"int","mandatory":true,"types_accepted":["int","integer"],"types_returned":["int","integer"],"fields":{},"can_manage_fields":false,"tags":null}]},"groupby":{"type":["softlist<auto>"],"required":false,"desc":"group by argument for the select expression","sensitive":false,"type_info":[{"name":"softlist<auto>","desc":"Qore data type \"softlist<auto>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"list<auto>","mandatory":true,"types_accepted":["list<auto>","nothing","auto"],"types_returned":["list<auto>"],"fields":{},"can_manage_fields":false,"tags":null}]},"having":{"type":["hash<auto>"],"required":false,"desc":"having argument for the select expression","sensitive":false,"type_info":[{"name":"hash<auto>","desc":"Qore data type \"hash<auto>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"hash<auto>","mandatory":true,"types_accepted":["hash<auto>"],"types_returned":["hash<auto>"],"fields":{},"can_manage_fields":true,"tags":null}]},"orderby":{"type":["softlist<string>"],"required":false,"desc":"order by argument for the select expression","sensitive":false,"type_info":[{"name":"softlist<string>","desc":"Qore data type \"softlist<string>\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"list<string>","mandatory":true,"types_accepted":["list<string>","list","nothing"],"types_returned":["list<string>"],"fields":{},"can_manage_fields":false,"tags":null}]},"forupdate":{"type":["softbool"],"required":false,"desc":"uses FOR UPDATE with the query to lock records selected","sensitive":false,"type_info":[{"name":"softbool","desc":"Qore data type \"softbool\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":null,"base_type":"bool","mandatory":true,"types_accepted":["bool","float","int","integer","string","date","number","null"],"types_returned":["bool"],"fields":{},"can_manage_fields":false,"tags":null}]},"requires_result":{"type":["bool"],"required":false,"desc":"If True, then an operation that returns no result or affects no records results in an error","default_value":false}},"options":{"datasource":{"type":"string","value":"omquser"}},"transaction_action":"begin-transaction"}},"transitions":[{"state":"2","language":"qore"}]},"2":{"position":{"x":634,"y":254.5},"initial":false,"name":"State 1.State 2","desc":"","type":"state","id":"6DmGBEhKY0t","action":{"type":"var-action","value":{"var_type":"globalvar","var_name":"variable_0","action_type":"send-message","message":{"type":"data","value":"asg"},"message_id":"ping","options":{"url":{"type":"string","value":"asg"}}}}}}}},"yaml_file":"/workspace/qorus-vscode/test_project/TransactionBlockTest.qfsm.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false},{"name":"Variables","data":{"type":"fsm","name":"Variables","desc":"FSM with variables","transient":{"FirstVariable":{"name":"FirstVariable","value":{"type":"datasource","name":"omquser","transaction_management":true,"record_requires_search_options":false,"path":"/bb_local","supports_request":false,"supports_read":true,"supports_update":true,"supports_create":true,"supports_delete":true,"supports_messages":"NONE","descriptions":["Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries","Record-based data provider for db table `public.bb_local`; supports create, read/search, update, delete, upsert, and bulk operations"]},"type":"data-provider","desc":"This is a first variable","variableType":"transient"},"SecondVariable":{"name":"SecondVariable","value":{"type":"factory","name":"wsclient","transaction_management":false,"path":"","options":{"url":{"type":"string","value":"test"}},"optionsChanged":false,"supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","record_requires_search_options":false,"descriptions":["WebSocket client to URL \"ws://test/\""],"message_id":"ping","message":{"type":"data","value":"pong"}},"type":"data-provider","variableType":"transient"}},"states":{"1":{"position":{"x":156,"y":85.5},"initial":false,"name":"State 1","desc":"","type":"state","id":"QQ1vIxMkG","action":{"type":"var-action","value":{"var_type":"transient","var_name":"FirstVariable","action_type":"search"}},"transitions":[{"state":"2","language":"qore"},{"state":"3","language":"qore"}]},"2":{"position":{"x":155,"y":314.5},"initial":false,"name":"State 2","desc":"","type":"state","id":"rew5msGOnvs6","action":{"type":"var-action","value":{"var_type":"transient","var_name":"SecondVariable","action_type":"send-message","message":{"type":"data","value":"pong"},"message_id":"ping","options":{"url":{"type":"string","value":"test"}}}},"transitions":[{"state":"3","language":"qore"}]},"3":{"position":{"x":515,"y":205.5},"initial":false,"name":"State 3","desc":"","type":"state","id":"_fVYW_uhr","action":{"type":"var-action","value":{"var_type":"transient","var_name":"FirstVariable","action_type":"transaction","transaction_action":"commit"}}}},"yaml_file":"/workspace/qorus-vscode/test_project/Variables.qfsm.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false},{"name":"issue-3979","data":{"type":"fsm","name":"issue-3979","desc":"test for transaction block states","groups":["regression","test"],"states":{"1":{"position":{"x":74,"y":43.5},"initial":false,"name":"Transaction block","desc":"transaction block test","type":"block","id":"RdIUgSDY_","block-config":{"data_provider":{"type":"datasource","name":"omquser","supports_read":true,"supports_update":true,"supports_create":true,"supports_delete":true,"supports_messages":"NONE","transaction_management":true,"descriptions":["Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries","Record-based data provider for db table `public.test_table_1`; supports create, read/search, update, delete, upsert, and bulk operations"],"path":"/test_table_1"}},"block-type":"transaction","transitions":[{"state":"4","language":"qore"}],"states":{"2":{"position":{"x":121.796875,"y":53.09375},"initial":false,"name":"Insert Row","desc":"insert data in the target table","type":"state","id":"9eCBOtAmh","action":{"type":"var-action","value":{"var_type":"autovar","var_name":"trans","action_type":"create","create_args_freeform":[{"col_1":1,"col_2":"a"}]}},"transitions":[{"state":"3","language":"qore"}]},"3":{"position":{"x":73,"y":261.5},"initial":false,"name":"Verify Transaction in Progress","desc":"verify that rows are not in the target table","type":"state","id":"UOGwhUWsi","action":{"type":"apicall","value":{"type":"factory","name":"qorus-api","is_api_call":true,"supports_request":true,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"descriptions":["Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Data provider providing child request-response data providers representing supported utility APIs in Qorus","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported utility APIs in Qorus","Data provider providing a list of existing services in Qorus","Request/response data provider: throws an `FSM-CONTINUE` exception to execute a continue in a loop in a finite state machine flow.\n\nThis API call only has an effect when executed internally in Qorus.\n\nThis API call does not return any response.","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Data provider providing a list of existing services in Qorus","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Top-level Qorus API service data provider; request/response (API) data providers are provided as children","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Top-level Qorus API service data provider; request/response (API) data providers are provided as children","Request/response data provider: call the given method in service `157` with the given arguments and return the result"],"path":"/services/list/issue-3978/call-method","use_args":true,"args":{"type":"hash","value":{"method":{"type":"string","value":"checkNoRow"}}}}}}}},"4":{"position":{"x":24,"y":215.5},"initial":false,"name":"Verify New Data","desc":"verify that the new rows are in the table","type":"state","id":"cD4BiNcXp","action":{"type":"apicall","value":{"type":"factory","name":"qorus-api","is_api_call":true,"supports_request":true,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"descriptions":["Top-level Qorus API data provider; request/response (API) data providers are provided as children","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported utility APIs in Qorus","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported utility APIs in Qorus","Request/response data provider: throws an `FSM-CONTINUE` exception to execute a continue in a loop in a finite state machine flow.\n\nThis API call only has an effect when executed internally in Qorus.\n\nThis API call does not return any response.","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Top-level Qorus API service data provider; request/response (API) data providers are provided as children","Top-level Qorus API data provider; request/response (API) data providers are provided as children","Data provider providing child request-response data providers representing supported service APIs in Qorus","Data provider providing a list of existing services in Qorus","Top-level Qorus API service data provider; request/response (API) data providers are provided as children","Request/response data provider: call the given method in service `157` with the given arguments and return the result"],"path":"/services/list/issue-3978/call-method","use_args":true,"args":{"type":"hash","value":{"method":{"type":"string","value":"checkRow"}}}}}}},"yaml_file":"/workspace/qorus-vscode/test_project/Issue3949.qfsm.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false}],"group":[],"job":[{"name":"asgRenamed","data":{"type":"job","name":"asgRenamed","desc":"asg","lang":"qore","base-class-name":"QorusJob","class-name":"Asg","schedule":{"minutes":"*","hours":"*","days":"*","months":"*","dow":"*"},"version":"123","code":"asgRenamed-123.qjob","yaml_file":"/workspace/qorus-vscode/test_project/asgRenamed-123.qjob.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"asgRenamed-123.qjob"},"hasDraft":false,"isDraft":false},{"name":"asgasgasgRenamed","data":{"type":"job","name":"asgasgasgRenamed","desc":"qwe","lang":"qore","base-class-name":"QorusJob","class-name":"Asgasgasg","schedule":{"minutes":"*","hours":"*","days":"*","months":"*","dow":"*"},"version":"213","code":"asgasgasg-213.qjob","yaml_file":"/workspace/qorus-vscode/test_project/asgasgasg-213.qjob.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"asgasgasg-213.qjob"},"hasDraft":false,"isDraft":false},{"name":"maybeNewJob","data":{"type":"job","name":"maybeNewJob","desc":"asg","lang":"qore","base-class-name":"QorusJob","class-name":"MaybeNewJob","schedule":{"minutes":"*","hours":"*","days":"*","months":"*","dow":"*"},"version":"1","code":"maybeNewJob-1.qjob","yaml_file":"/workspace/qorus-vscode/test_project/maybeNewJob-1.qjob.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"maybeNewJob-1.qjob"},"hasDraft":false,"isDraft":false},{"name":"test","data":{"type":"job","name":"test","desc":"asg","lang":"qore","base-class-name":"QorusJob","class-name":"Test","schedule":{"minutes":"*","hours":"*","days":"*","months":"*","dow":"*"},"version":"1","code":"test-1.qjob","yaml_file":"/workspace/qorus-vscode/test_project/test-1.qjob.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"test-1.qjob"},"hasDraft":false,"isDraft":false}],"mapper":[{"name":"test:1","data":{"type":"mapper","name":"test","desc":"asg","mappertype":"Mapper","version":"1","fields":{"provider":{"name":"provider"}},"options":{"mapper-input":{"type":"datasource","name":"omq","transaction_management":true,"record_requires_search_options":false,"path":"/external_user_storage","supports_read":true,"supports_update":true,"supports_create":true,"supports_delete":true,"supports_messages":"NONE","supports_observable":false,"descriptions":["Data provider for database `pgsql:omq@omq%rippy`; use the search API with the `sql` and `args` arguments to execute record-based queries","Record-based data provider for db table `public.external_user_storage`; supports create, read/search, update, delete, upsert, and bulk operations"],"custom-fields":{}},"mapper-output":{"type":"datasource","name":"omq","transaction_management":true,"record_requires_search_options":false,"path":"/external_user_storage","supports_read":true,"supports_update":true,"supports_create":true,"supports_delete":true,"supports_messages":"NONE","supports_observable":false,"descriptions":["Data provider for database `pgsql:omq@omq%rippy`; use the search API with the `sql` and `args` arguments to execute record-based queries","Record-based data provider for db table `public.external_user_storage`; supports create, read/search, update, delete, upsert, and bulk operations"],"custom-fields":{}}},"yaml_file":"/workspace/qorus-vscode/test_project/test-1.qmapper.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false},{"name":"test:1.0","data":{"type":"mapper","name":"test","desc":"test","mappertype":"Mapper","version":"1.0","fields":{"test2":{"name":"test"}},"options":{"mapper-input":{"type":"type","name":"qore","can_manage_fields":true,"descriptions":["type entry group","Qore data type \"hash<auto>\""],"path":"/hash","custom-fields":{"test":{"name":"test","desc":"test","type":{"typename":"any","name":"auto","desc":"Qore data type \"auto\"","supported_options":null,"options":null,"base_type":"auto","mandatory":false,"types_accepted":["any"],"types_returned":["any"],"fields":{},"can_manage_fields":true,"tags":null},"isCustom":true,"canBeNull":false,"firstCustomInHierarchy":true,"isChild":false,"level":0,"path":"test","parentPath":false}}},"mapper-output":{"type":"type","name":"qore","can_manage_fields":true,"descriptions":["type entry group","Qore data type \"hash<auto>\""],"path":"/hash","custom-fields":{"test2":{"name":"test2","desc":"test2","type":{"typename":"binary","name":"binary","desc":"Qore data type \"binary\"","supported_options":{"qore.no_null":{"type":"bool","desc":"if True then NULL is not supported on input if NOTHING is also not accepted"}},"options":{"qore.no_null":true},"base_type":"binary","mandatory":true,"types_accepted":["binary"],"types_returned":["binary"],"fields":{},"can_manage_fields":false,"tags":null},"isCustom":true,"canBeNull":false,"firstCustomInHierarchy":true,"isChild":false,"level":0,"path":"test2","parentPath":false}}}},"yaml_file":"/workspace/qorus-vscode/test_project/test-1.0.qmapper.yaml","target_dir":"/workspace/qorus-vscode/test_project"},"hasDraft":false,"isDraft":false}],"mapper-code":[],"pipeline":[],"queue":[],"service":[{"name":"EventsTest","data":{"type":"service","name":"EventsTest","desc":"ajksghjkashgkj ","lang":"python","base-class-name":"QorusService","class-name":"EventsTest","version":"1.0","event-handlers":[{"type":"factory","name":"wsclient","transaction_management":false,"path":"","options":{"url":{"type":"string","value":"test"}},"optionsChanged":false,"supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","supports_observable":true,"record_requires_search_options":false,"descriptions":["WebSocket client to URL \"ws://test/\""],"handlers":{"ws-closed-event":{"type":"method","value":"init"}}}],"servicetype":"USER","code":"EventsTest-1.0.qsd.py","methods":[{"name":"init","desc":"init"}],"yaml_file":"/workspace/qorus-vscode/test_project/EventsTest-1.0.qsd.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"EventsTest-1.0.qsd.py"},"hasDraft":false,"isDraft":false},{"name":"EventsTest2","data":{"type":"service","name":"EventsTest2","desc":"asg","lang":"python","base-class-name":"QorusService","class-name":"EventsTest2","version":"asg","event-handlers":[{"type":"factory","name":"wsclient","transaction_management":false,"path":"","options":{"url":{"type":"string","value":"test"}},"optionsChanged":false,"supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","supports_observable":true,"record_requires_search_options":false,"descriptions":["WebSocket client to URL \"ws://test/\""],"handlers":{"ws-closed-event":{"type":"method","value":"init"}}}],"servicetype":"USER","code":"EventsTest2-asg.qsd.py","methods":[{"name":"init","desc":"init"}],"yaml_file":"/workspace/qorus-vscode/test_project/EventsTest2-asg.qsd.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"EventsTest2-asg.qsd.py"},"hasDraft":false,"isDraft":false},{"name":"Test","data":{"type":"service","name":"Test","desc":"Events test","lang":"python","base-class-name":"QorusService","class-name":"Test","version":"1","event-handlers":[{"type":"factory","name":"wsclient","transaction_management":false,"path":"","options":{"url":{"type":"string","value":"asg"}},"optionsChanged":false,"supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","supports_observable":true,"record_requires_search_options":false,"descriptions":["WebSocket client to URL \"ws://asg/\""],"handlers":{"ws-closed-event":{"type":"fsm","value":"Variables"},"ws-pong-event":{"type":"method","value":"method"}}},{"type":"factory","name":"wsclient","transaction_management":false,"path":"","options":{"url":{"type":"string","value":"asgasgasg"}},"optionsChanged":false,"supports_request":false,"supports_read":false,"supports_update":false,"supports_create":false,"supports_delete":false,"supports_messages":"ASYNC","supports_observable":true,"record_requires_search_options":false,"descriptions":["WebSocket client to URL \"ws://asgasgasg/\""],"handlers":{"ws-data-event":{"type":"fsm","value":"AutoLayoutTest"}}}],"servicetype":"USER","code":"Test-1.qsd.py","methods":[{"name":"init","desc":"init"}],"yaml_file":"/workspace/qorus-vscode/test_project/Test-1.qsd.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"Test-1.qsd.py"},"hasDraft":false,"isDraft":false}],"step":[{"name":"asgqwe:1","data":{"type":"step","name":"asgqwe","desc":"asg","lang":"qore","base-class-name":"QorusNormalStep","class-name":"Asgqwe","version":"1","steptype":"NORMAL","code":"asgqwe-1.qstep","yaml_file":"/workspace/qorus-vscode/test_project/asgqwe-1.qstep.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"asgqwe-1.qstep"},"hasDraft":false,"isDraft":false},{"name":"asgqweRenamed:1","data":{"type":"step","name":"asgqweRenamed","desc":"asg","lang":"qore","base-class-name":"QorusNormalStep","class-name":"Asgqwe","version":"1","steptype":"NORMAL","code":"asgqweRenamed-1.qstep","yaml_file":"/workspace/qorus-vscode/test_project/asgqweRenamed-1.qstep.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"asgqweRenamed-1.qstep"},"hasDraft":false,"isDraft":false},{"name":"newStepRenamed:1","data":{"type":"step","name":"newStepRenamed","desc":"asg","lang":"qore","base-class-name":"QorusNormalStep","class-name":"NewStep","version":"1","steptype":"NORMAL","code":"newStepRenamed-1.qstep","yaml_file":"/workspace/qorus-vscode/test_project/newStepRenamed-1.qstep.yaml","target_dir":"/workspace/qorus-vscode/test_project","target_file":"newStepRenamed-1.qstep"},"hasDraft":false,"isDraft":false}],"type":[],"value-map":[],"workflow":[],"schema-modules":[],"scripts":[],"tests":[]}