%new-style
%require-types
%strict-args
%enable-all-warnings

class CrmAccountChangeEventToOrder inherits QorusService {
    private {
        ####### GENERATED SECTION! DON'T EDIT! ########
        ClassConnections_CrmAccountChangeEventToOrder class_connections();
        ############ GENERATED SECTION END ############
    }

    init() {
    }
}

####### GENERATED SECTION! DON'T EDIT! ########
class ClassConnections_CrmAccountChangeEventToOrder inherits Observer { # has to inherit Observer because there is an event-based connector
    private {
        # map of prefixed class names to class instances
        hash<auto> class_map;
    }

    constructor() {
        class_map = {
            "BBM_SalesforceStreamBase": new BBM_SalesforceStreamBase(),
            "BBM_CreateOrder": new BBM_CreateOrder(),
        };

        # register observers
        callClassWithPrefixMethod("BBM_SalesforceStreamBase", "registerObserver", self);
    }

    auto callClassWithPrefixMethod(string prefixed_class, string method) {
        UserApi::logDebug("ClassConnections_CrmAccountChangeEventToOrder: callClassWithPrefixMethod: method: %s, class: %y", method, prefixed_class);
        return call_object_method_args(class_map{prefixed_class}, method, argv);
    }

    # @override Observer's update()
    update(string id, hash<auto> params) {
        if (id == "BBM_SalesforceStreamBase::messageCallbackImpl") {
            Connection_1(params);
        }
    }

    auto Connection_1(auto params) {
        auto mapper;
        UserApi::logDebug("Connection_1 called with data: %y", params);

        mapper = UserApi::getMapper("crm-account-change-event-to-order-mapper");
        params = mapper.mapAuto(params);

        UserApi::logDebug("calling createOrder: %y", params);
        return callClassWithPrefixMethod("BBM_CreateOrder", "createWorkflowOrderConnector", params);
    }
}
############ GENERATED SECTION END ############
