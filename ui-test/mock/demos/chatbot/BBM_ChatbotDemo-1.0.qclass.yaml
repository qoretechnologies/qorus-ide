# This is a generated file, don't edit!
type: class
name: BBM_ChatbotDemo
desc: Chatbot Demo Class
author:
  - Qore Technologies, s.r.o.
class-connectors:
  - name: init
    method: init
    type: input-output
  - name: processInput
    method: processInput
    type: input-output
lang: python
version: "1.0"
code: BBM_ChatbotDemo-1.0.qclass.py
config-items:
  - name: chatbot-demo-intents
    config_group: Chatbot Demo Main
    description: The location of the JSON file with intents
  - name: chatbot-demo-model
    config_group: Chatbot Demo Main
    description: The location of the chatbot model file
    strictly_local: true
  - name: chatbot-demo-actions
    default_value:
        {}
    config_group: Chatbot Demo Main
    description: >-
        Chatbot demo action hash; format: `tag`: `<action>`
    
    
        Actions have the following format:
    
        - `fsm:<name>` launch the given Finite State Machine (must be valid for the
        service)
    
        - `response`: return one of the valid responses
    
    
        **NOTE**: the default action for any tag is to send a valid response
    strictly_local: true
    type: hash
  - name: chatbot-demo-threshold
    default_value:
        0.5
    config_group: Chatbot Demo Main
    description: The error threshold under which requests are not understood to be matched
    strictly_local: true
    type: float
  - name: chatbot-demo-hard-actions
    default_value:
        {}
    config_group: Chatbot Demo Main
    description: >-
        The hard action hash is a hash of actions for specific literal imputs not
        processed by the AI system; these inputs are checked first before submitting
        for AI intent matching.
    
    
        If the input matches exactly (case-insensitive), then the given action is
        executed.
    
    
        Hash keys are case-insensitive input strings, values are strings with the
        following format:
    
        - `fsm:<name>`: launch the given Finite State Machine (must be a valid FSM
        for the current interface)
    
        - any other string; return the given string as a response
    strictly_local: true
    type: "*hash"
