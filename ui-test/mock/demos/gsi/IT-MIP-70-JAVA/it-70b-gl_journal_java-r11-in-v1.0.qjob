# -*- mode: qore; indent-tabs-mode: nil -*-

# name: it-70b-gl_journal_java-r11-in
# class-name: It70bGlJournalR11In
# version: 1.0
# desc: Import gl journals - R11 - starter
# author: Petr Vanek (Qore Technologies, sro)
# schedule: 30 * * * *
# define-group: IT: H3G IT interfaces
# groups: IT
%require-types
%new-style

class It70bGlJournalR11In inherits QorusJob {
    bool checkData() {
        string mseplit = getConfigItemValue("msepl-it");
        string ebs11i = getConfigItemValue("ebs11i");

        DbRemote db(mseplit, ebs11i);
        on_success db.commit();
        on_error db.rollback();

        hash<auto> sh = (
            "where" : (
                "int_status" : "N",
                "source_system" : "R11",
                "message_type" : "R11_JOURNALS",
                "record_count" : op_ne(NULL),
            ),
            "limit": 1,
        );
        string t = getConfigItemValue("header-table-name");
        bool ret = exists db.select_row(t, sh);
        if (ret){
            logInfo("Found free headers to process");
        } else{
            logInfo("No data to process");
            warn("NO-HEADER-DATA", "no Header in %s with status 'N' and source_system 'R11' and message_type "
                "'R11_JOURNALS' and record_count not NULL",  t);
        }
        return ret;
    }

    run() {
        bool check = checkData();
        *int wfiid = check ? createMasterOrder("IT-70B-GL_JOURNAL_JAVA-R11-IN") : NOTHING;
        saveInfo({"wfiid": wfiid});
    }

    private *softint createMasterOrder(string wfname, *hash<auto> order_hash, string status = OMQ::StatReady) {
        # check READY or IN PROGRESS in the beginning
        *hash<auto> wfinfo = omqservice.system.omqmap.rlookupworkflow(wfname);
        softint wfid = wfinfo{wfinfo.lastversion}.workflowid;
        int age_days = getConfigItemValue("wf-order-age");
        list<auto> wfiids = omqservice.system.info.getWorkflowInstances(wfid, ('READY', 'IN-PROGRESS', 'SCHEDULED'), now() - days(age_days), 1);
        if (wfiids.size()) {
            log(LL_INFO, "Skipping wf order creation because there is at least one WFI in READY or IN-PROGRESS");
            return;
        }

        log(LL_INFO, "Creating %s order instance", wfname);
        order_hash.staticdata."created-by" = "create_master_order";
        return createOrder(wfname, NOTHING, order_hash, status);
    }

    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {
        return {
            "wf-order-age": <ConfigItemInfo>{
                "type": "int",
                "description": "The age of existing orders to check as a number of days",
                "default_value": 2,
            },
            "header-table-name": <ConfigItemInfo>{
                "description": "The R11 header table name",
                "default_value": "h3g_it_gl_int_header",
                "strictly_local": True,
            },
            "msepl-it": <ConfigItemInfo>{
                "description": "the mSEPL IT remote connection name",
                "default_value": "msepl-it",
            },
            "ebs11i": <ConfigItemInfo>{
                "description": "the EBS 11i connection name",
                "default_value": "ebs11i",
            },
        };
    }
}
# END
