# -*- mode: qore; indent-tabs-mode: nil -*-

# name: iot-stadium-floodlights-order-mapper
# version: 1.0
# desc: maps IoT stadium light change requests to order data
# type: Mapper
# author: Qore Technologies, s.r.o.
# parse-options: PO_NEW_STYLE
# define-group: iot-demo: IoT demo interfaces
# groups: iot-demo

OPTION: input: (
    "request_id": {
        "desc": "the unique ID for the request",
    },
    "device_id": {
        "desc": "the device ID of the light to be replaced",
    },
    "stadium_id": {
        "desc": "the ID of the stadium where the light can be found",
    },
)

OPTION: output: (
    "staticdata": {
        "type": "hash",
        "desc": "the initial static data for the order",
        "mand": True,
    },
    "dynamicdata": {
        "type": "hash",
        "desc": "the initial dynamic data for the order",
    },
    "global_unique_key": {
        "type": "hash",
        "desc": "a hash giving one or more unique order keys for the order (across all workflows regardless of "
            "workflowid, name, or version); keys are order key names and values are the string key values; if this "
            "key already exists for any order in the system, then the order creation will fail with a "
            "DUPLICATE-ORDER-KEY error; the hash key must be a valid order key, and the value is the unique key "
            "value; this value will also be created as an order key",
    },
    "workflow_specific_unique_key": {
        "type": "hash",
        "desc": "a hash giving one or more unique order keys for the particular workflowid (which matches a "
            "unique name and workflow version); keys are order key names and values are the string key values; if "
            "any of the keys given already exists for an order with the target workflowid, then the order "
            "creation will fail with a DUPLICATE-ORDER-KEY error; the hash key must be a valid order key, and the "
            "value is the unique key value; this value will also be created as an order key",
    },
    "workflow_unique_key": {
        "type": "hash",
        "desc": "a hash giving one or more unique order keys for the particular workflow by name only (across all "
            "workflows with the same name regardless of version); keys are order key names and values are the string "
            "key values; if this key already exists for a workflow order with the same name, then the order creation "
            "will fail with a DUPLICATE-ORDER-KEY error; the hash key must be a valid order key, and the value is the "
            "unique key value; this value will also be created as an order key",
    },
    "orderkeys": {
        "type": "hash",
        "desc": "a hash of order keys for the order",
    },
)

FIELD: staticdata: {
    "name": "device_id",
    "code": hash<auto> sub (auto _, hash<auto> rec) {
        return {
            "input_data": rec,
        };
    }
}
FIELD: workflow_unique_key: {
    "name": "request_id",
    "code": *hash<auto> sub (auto request_id, hash<auto> rec) {
        # ensures order is created once for unique values
        return request_id.val()
            ? {"request_id": request_id}
            : NOTHING;
    }
}
FIELD: orderkeys: {
    "code": hash<auto> sub (auto _, hash<auto> rec) {
        return rec{"stadium_id", "device_id"};
    }
}
# END
