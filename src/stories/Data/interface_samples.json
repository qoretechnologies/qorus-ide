{
  "class": [
    {
      "request_id": "2KSOpt31v5rTypz",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 1,
          "type": "class",
          "desc": "## Summary\n\nBinds a subworkflow in a subworkflow step.\n\nThis building block uses the input data for binding; for a building block that binds based on configuration, see `BBM_BindSubworkflowStatic`\n\nThis building block is useful only in limited use cases; `BBM_BindSubworkflowStatic` can do everything this building block can do and more; it's recommended to use `BBM_BindSubworkflowStatic` instead.\n\n**NOTE**:  This building block's functionality has been superceded by an API (request - response) data provider; it's recommended to use the `util/workflow/bind-subworkflow` API data provider in the `qorus-api` factory instead\n\n## Connectors\n\n### Input/Output Connector `bindSubworkflow`\n\nBinds the subworkflow based on the input data; configuration is only used to identify the workflow and to specify output data handling.",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\n#! for bind subworkflow options\nhashdecl BindSubworkflowOptionInfo {\n    #! the workflow name\n    string workflow = UserApi::getConfigItemValue(\"bind-subworkflow-name\");\n    #! the optional workflow version\n    *string version = UserApi::getConfigItemValue(\"bind-subworkflow-version\");\n}\n\n#! Binds a subworkflow order in a subworkflow step according to input data and configuration\n/** Configuration items:\n    - \\c bind-subworkflow-name: the name of the workflow to create the order for\n    - \\c bind-subworkflow-version: the optional version of the workflow, if not set, then an order will be created for\n      the latest version of the workflow\n    - \\c bind-subworkflow-output-data: a hash describing where output data should be written\n\n    Connector types:\n    - \\c input: \\c qoretechnologies/building-blocks/bind-subworkflow/request\n    - \\c output: \\c qoretechnologies/building-blocks/bind-subworkflow/response\n*/\nclass BBM_BindSubworkflow {\n    public {\n        const OutputItem = \"bind-subworkflow-output-data\";\n    }\n\n    #! Bind subworkflow order method suitable for use as an input/output connector\n    /** @param order_data the input order data; should have type\n        \\c qoretechnologies/building-blocks/bind-subworkflow/request\n\n        @return of type \\c qoretechnologies/building-blocks/bind-subworkflow/response with the following keys:\n        - skipped (bool): @ref True if the bind operation was skipped, @ref False if not\n        - workflow_instanceid (*int): the workflow instance ID if the bind operation was performed (i.e. \\a skipped is @ref False)\n    */\n    static hash<auto> bindSubworkflow(*hash<auto> order_data) {\n        return BBM_BindSubworkflow::bindSubworkflowIntern(order_data, <BindSubworkflowOptionInfo>{});\n    }\n\n    #! Bind subworkflow order\n    /** @param order_data the input order data; should have type\n        \\c qoretechnologies/building-blocks/bind-subworkflow/request\n\n        @return of type \\c qoretechnologies/building-blocks/bind-subworkflow/response with the following keys:\n        - skipped (bool): @ref True if the bind operation was skipped, @ref False if not\n        - workflow_instanceid (int): the workflow instance ID if the bind operation was performed; if \\a skipped is\n          @ref True, then this value will be \\c -1\n    */\n    static hash<auto> bindSubworkflowIntern(*hash<auto> order_data, hash<BindSubworkflowOptionInfo> opts) {\n        string wfdesc = opts.workflow;\n        if (opts.version) {\n            wfdesc += sprintf(\" v%s\", opts.version);\n        }\n\n        if (!order_data) {\n            throw \"BIND-SUBWORKFLOW-ERROR\", \"missing order data hash argument\";\n        }\n\n        hash<auto> rv;\n        if (remove order_data.skip) {\n            UserApi::logInfo(\"skipping subworkflow bind operation for %s\", wfdesc);\n            QorusSubworkflowStep::skipSubworkflow();\n            rv = {\n                \"skipped\": True,\n                \"workflow_instanceid\": -1,\n            };\n        } else {\n            rv = {\n                \"skipped\": False,\n                \"workflow_instanceid\": QorusSubworkflowStep::bindSubworkflow({\n                    \"name\": opts.workflow,\n                    \"version\": opts.version,\n                }, order_data).workflow_instanceid.toInt(),\n            };\n        }\n        UserApi::logInfo(\"bound %s order instance id: %d\", wfdesc, rv.workflow_instanceid);\n\n        # save output data if configured\n        *hash<auto> output_data = UserApi::getConfigItemValue(OutputItem, NOTHING, False);\n        if (output_data) {\n            UserApi::updateOutputData(rv, output_data);\n        }\n        return rv;\n    }\n}\n",
          "name": "BBM_BindSubworkflow",
          "display_name": "BBM Bind Subworkflow",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "class-connectors": [
            {
              "name": "bindSubworkflow",
              "type": "input-output",
              "method": "bindSubworkflow",
              "output-provider": {
                "type": "type",
                "name": "qoretechnologies",
                "can_manage_fields": false,
                "path": "/building-blocks/bind-subworkflow/response"
              },
              "input-provider": {
                "type": "type",
                "name": "qoretechnologies",
                "can_manage_fields": false,
                "path": "/building-blocks/bind-subworkflow/request"
              }
            }
          ],
          "configItems": [
            {
              "name": "bind-subworkflow-name",
              "description": "the name of the subworkflow",
              "config_group": "Bind Subworkflow Order",
              "type": "workflow",
              "strictly_local": true
            },
            {
              "name": "bind-subworkflow-version",
              "description": "the version of the subworkflow; if not set (the default), the latest version will be used",
              "config_group": "Bind Subworkflow Order",
              "type": "*string",
              "strictly_local": true
            },
            {
              "name": "bind-subworkflow-output-data",
              "description": "the configuration of output data for `UserApi::updateOutputData()`; the output data will include a `workflow_instanceid` key with the ID created for the new workflow order (if the operation was not skipped) and a `skipped` key with a boolean value indicating if the bind operation was skipped",
              "config_group": "Bind Subworkflow Order Post Processing",
              "type": "*hash",
              "strictly_local": true
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 1"
    },
    {
      "request_id": "IYhrzncXvlge50t",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 10,
          "type": "class",
          "desc": "## Summary\n\nClass for executing a synchronous workflow order from configuration.\n\n**NOTE**:  This building block's functionality has been superceded by an API (request - response) data provider; it's recommended to use the `workflows/exec-sync` API data provider in the `qorus-api` factory instead\n\n## Connectors\n\n### Input/Output Connector `execSyncWorkflowStatic`\n\nCreates and executes a workflow order synchronously from the configuration data.\n\nThe input data is available as `$local:input` for all config items resolved  with this connector (in internal calls to `UserApi::expandTemplatedValue()).\n",
          "lang": "qore",
          "source": "# -*- mode: qore; indent-tabs-mode: nil -*-\n\n%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\n#! creates a workflow order from the input data according to the configuration\n/** supports atomic workflow order creation through handling \\c DUPLICATE-ORDER-KEY exceptions thrown by\n    @ref UserApi::createOrder()\n\n    Configuration items:\n    - \\c create-workflow-order-mapper: the mapper used to create the static order data for the order; the mapper\n      returns the value used for the @ref UserApi::createOrder() \\a params option giving the new workflow order\n      information\n    - \\c create-workflow-name: the name of the workflow to create the order for\n    - \\c create-workflow-version: the optional version of the workflow, if not set, then an order will be created for\n      the latest version of the workflow\n    - \\c create-workflow-duplicate-handling: set to determine how duplicate errors are handled; set to \\c \"SUCCESS\" to\n      enable the @ref BBM_ExecSyncWorkflow::createWorkflowOrder() method to return the workflow_instanceid in case a single\n      workflow_instanceid matches, set to \\c \"DUPLICATE\" to throw a \\c DUPLICATE-ORDER-KEY exception in all cases if\n      duplicates are found\n\n      @note No comparison of the order data is made in case of duplications; it is assumed that the data is identical\n\n    Connector types:\n    - \\c input: \\c qoretechnologies/qorus-api/workflows/create-order/request\n    - \\c output: \\c qoretechnologies/building-blocks/exec-sync-workflow/response\n*/\nclass BBM_ExecSyncWorkflowStatic inherits BBM_CreateOrderStatic {\n    #! create order method suitable for use as an input/output connector, independent of input data\n    /** @param input available in the \\a input key of local context data (i.e. <tt>$local:input</tt> when looking up\n        config item values)\n\n        @return a single hash with connector output type \\c qoretechnologies/building-blocks/exec-sync-workflow/response;\n        the hash has the following keys:\n        - \\c workflow_instanceid the workflow instance ID of the order created\n        - \\c duplicate: a boolean flag: \\c True if the order already existed (config item\n          \\c create-workflow-duplicate-handling = \\c SUCCESS), \\c False if not\n        - \\c status: the order status\n        - \\c dynamicdata: any dynamic data in the order\n        - \\c error: the last error code added to the order, if any\n        - \\c description: the error description for the last error added to the order, if any\n        - \\c info: the info hash for the last error added to the order, if any\n    */\n    static hash<auto> execSyncWorkflowStatic(auto input) {\n        hash<auto> local_context = {\"input\": input};\n        hash<auto> order_data = map {$1.key: UserApi::getConfigItemValue($1.value, local_context)},\n            OrderMap.pairIterator();\n        map remove order_data{$1.key}, order_data.pairIterator(), !exists $1.value;\n        # log request but do not log any sensitive data\n        UserApi::logInfo(\"order data from context: %N\",\n            order_data + (order_data.sensitive_data ? {\"sensitive_data\": \"<masked>\"} : NOTHING));\n\n        bool dup = False;\n        hash<auto> rv = doWorkflowIntern(order_data, <CreateOrderOptionInfo>{}, \\dup, True);\n        rv.duplicate = dup;\n        return rv;\n    }\n}\n",
          "name": "BBM_ExecSyncWorkflowStatic",
          "display_name": "BBM Exec Sync Workflow Static",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "class-connectors": [
            {
              "name": "execSyncWorkflowStatic",
              "method": "execSyncWorkflowStatic",
              "output-provider": {
                "can_manage_fields": false,
                "name": "qoretechnologies",
                "path": "/building-blocks/exec-sync-workflow/response",
                "type": "type"
              },
              "type": "input-output"
            }
          ],
          "configItems": [
            {
              "name": "create-workflow-order-mapper",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-version",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-duplicate-handling",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-output-data",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-order-status",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-staticdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-sensitivedata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-dynamicdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-tempdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-external-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-order-keys",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-specific-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-global-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-parent-workflow-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-priority",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-scheduled",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_CreateOrderStatic",
                "interface-version": "1.0"
              }
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 10"
    },
    {
      "request_id": "wffUG8d8Vgv9Jvy",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 100,
          "type": "class",
          "desc": "Java processor test",
          "lang": "java",
          "source": "\nimport qoremod.DataProvider.AbstractDataProcessor;\n\nimport org.qore.jni.Hash;\nimport org.qore.jni.QoreException;\nimport org.qore.jni.QoreClosureMarkerImpl;\n\nimport qore.OMQ.UserApi.UserApi;\n\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\nclass Issue3485JavaProcessor1 extends AbstractDataProcessor {\n    public String pfx;\n    public Hash crec;\n    public boolean raise_error = false;\n\n    Issue3485JavaProcessor1() throws Throwable {\n        pfx = (String)UserApi.getConfigItemValue(\"pfx\");\n        crec = (Hash)UserApi.getConfigItemValue(\"crec\");\n        raise_error = (Boolean)UserApi.getConfigItemValue(\"raise_error\");\n        UserApi.logInfo(\"Issue3485JavaProcessor1 got config pfx: %y crec: %y raise_error: %y\", pfx, crec, raise_error);\n    }\n\n    protected void submitImpl(QoreClosureMarkerImpl enqueue, Object data) throws Throwable {\n        UserApi.logInfo(\"Issue3485JavaProcessor1 was called: %y\", data);\n        if (raise_error) {\n            raise_error = false;\n            throw new QoreException(\"ERROR\", \"error\");\n        }\n        Hash rec;\n        if (data == null) {\n            rec = new Hash() {\n                {\n                    put(\"test1\", \"one\");\n                    put(\"test2\", \"two\");\n                }\n            };\n        } else {\n            rec = (Hash)data;\n        }\n        Map new_rec = rec.entrySet().stream().collect(\n            Collectors.toMap(e -> pfx + \"-\" + e.getKey(), Map.Entry::getValue)\n        );\n        UserApi.logInfo(\"1 output: %y\", new_rec);\n        enqueue.call(new_rec);\n    }\n\n    protected boolean supportsBulkApiImpl() {\n        return false;\n    }\n}\n",
          "name": "Issue3485JavaProcessor1",
          "display_name": "Issue3485 Java Processor1",
          "short_desc": "Java processor test",
          "version": "1.0",
          "processor": {},
          "author": ["Qore Technologies, s.r.o."],
          "configItems": [
            {
              "name": "pfx",
              "description": "prefix",
              "config_group": "Pipeline 1 Config",
              "type": "string",
              "strictly_local": true
            },
            {
              "name": "crec",
              "description": "Constant record",
              "config_group": "Pipeline 1 Config",
              "type": "*hash",
              "default_value": {},
              "strictly_local": true
            },
            {
              "name": "raise_error",
              "description": "Raise error flag",
              "config_group": "Pipeline 1 Config",
              "type": "bool",
              "default_value": false,
              "strictly_local": true
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 100"
    },
    {
      "request_id": "l7iqHbNlRXQOEoX",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 153,
          "type": "class",
          "desc": "Qore test step class",
          "lang": "qore",
          "source": "%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\nclass QoreDevModulesTestStep3 inherits TestAsyncStep, QoreTest {\n    primaryImpl() {\n        assertTrue(True);\n        skipAsyncStep();\n    }\n}\n",
          "name": "QoreDevModulesTestStep3",
          "display_name": "Qore Dev Modules Test Step3",
          "short_desc": "Qore test step class",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 153"
    },
    {
      "request_id": "s2wsgDDeJrqc3nE",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 175,
          "type": "class",
          "desc": "Simple worklfow step example",
          "lang": "qore",
          "source": "\n%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3233Step2 inherits Issue3233BaseStep {\n    primary() {\n        log(LL_INFO, \"Issue3233Step2 was called\");\n    }\n}\n",
          "name": "Issue3233Step2",
          "display_name": "Issue3233 Step2",
          "short_desc": "Simple worklfow step example",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 175"
    },
    {
      "request_id": "PNpzVI6AebIcKKB",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 92,
          "type": "class",
          "desc": "Qore test class",
          "lang": "qore",
          "source": "%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\npublic class QoreTest {\n    static assertEq(auto expects, auto actual, *string label) {\n        QoreTest::assertIntern(\"assertEq\", expects, actual, label);\n    }\n\n    static assertTrue(bool b, *string label) {\n        QoreTest::assertIntern(\"assertTrue\", True, b, label);\n    }\n\n    static assertFalse(bool b, *string label) {\n        QoreTest::assertIntern(\"assertFalse\", False, b, label);\n    }\n\n    static assertNothing(auto v, *string label) {\n        QoreTest::assertIntern(\"assertNothing\", NOTHING, v, label);\n    }\n\n    static assertThrows(string err, code code) {\n        try {\n            call_function_args(code, argv);\n            QoreTest::assertIntern(\"assertThrows\", sprintf(\"expected exception: %y\", err), \"no exception thrown\");\n        } catch (hash<auto> ex) {\n            QoreTest::assertIntern(\"assertThrows\", err, ex.err);\n        }\n    }\n\n    static assertIntern(string method, auto expects, auto actual, *string label, int stack_offset = 4) {\n        string desc = sprintf(\"%s: assertEq() \", QoreTest::getSourceLocation(stack_offset));\n        if (expects === actual) {\n            desc += \"OK\";\n            if (label) {\n                desc += sprintf(\" (%s)\", label);\n            }\n            UserApi::logInfo(desc);\n            return;\n        }\n\n        desc += sprintf(\"expected %y; got %y\", expects, actual);\n        if (label) {\n            desc += sprintf(\" (%s)\", label);\n        }\n        throw \"ERROR\", desc;\n    }\n\n    static string getSourceLocation(int stack_offset) {\n        hash<auto> h = UserApi::get_thread_call_stack()[stack_offset];\n        return sprintf(\"%s:%d\", h.file, h.line + h.offset);\n    }\n}\n",
          "name": "QoreTest",
          "display_name": "Qore Test",
          "short_desc": "Qore test class",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 92"
    },
    {
      "request_id": "2nTB2nI3lpK8eIn",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 8,
          "type": "class",
          "desc": "## Summary\n\nDeletes a file from the filesystem\n\n**NOTE**:  This building block's functionality has been superceded by an API (request - response) data provider; it's recommended to use the `delete` API data provider in the `file` factory instead\n\n## Connectors\n\n### Input/Output Connector `deleteFilePath`\n\nDeletes the file identified by the `delete-file-path` config item.\n\nLocal data used when resolving config items for this connector is the input argument data for the connector available as `$local:input`.",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BBM_DeleteFilePath {\n    #! Connector to delete a file on the filesystem\n    /** @param input available in the \\a input key of local context data (i.e. <tt>$local:input</tt> when looking up\n        config item values)\n\n        @return the path deleted (if any) or @ref NOTHING if no file was deleted\n    */\n    *string deleteFilePath(auto input) {\n        hash<auto> local_context = {\"input\": input};\n        string path = UserApi::getConfigItemValue(\"delete-file-path\", local_context);\n        *hash<StatInfo> info = hstat(path);\n        if (!info) {\n            if (UserApi::getConfigItemValue(\"delete-file-ignore-missing\", local_context)) {\n                UserApi::logInfo(\"delete path %y: path does not exist; ignoring and continuing\", path);\n                return;\n            }\n            UserApi::logInfo(\"delete path %y: path does not exist; raising an error\", path);\n            throw \"FILE-DELETE-ERROR\", sprintf(\"%s: no such file or directory\", path);\n        }\n        if (unlink(path)) {\n            UserApi::logInfo(\"delete path %y: %s\", path, strerror());\n            throw \"FILE-DELETE-ERROR\", sprintf(\"delete path %y: %s\", path, strerror());\n        } else {\n            UserApi::logInfo(\"delete path %y: OK\", path);\n        }\n        return path;\n    }\n}\n",
          "name": "BBM_DeleteFilePath",
          "display_name": "BBM Delete File Path",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "class-connectors": [
            {
              "name": "deleteFilePath",
              "method": "deleteFilePath",
              "type": "input-output"
            }
          ],
          "configItems": [
            {
              "name": "delete-file-path",
              "description": "A path to a file on the filesystem to be deleted",
              "config_group": "Delete File Path",
              "type": "string",
              "strictly_local": true
            },
            {
              "name": "delete-file-ignore-missing",
              "description": "If `true` then a missing file is not an error",
              "config_group": "Delete File Path",
              "type": "bool",
              "default_value": true,
              "strictly_local": true,
              "default_value_true_type": "bool"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 8"
    },
    {
      "request_id": "Y6ks1bt3EiQyZjC",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 12,
          "type": "class",
          "desc": "## Summary\n\nReturns data from configuration data\n\n**NOTE**:  This building block's functionality has been superceded by an API (request - response) data provider; it's recommended to use the `util/get-data` API data provider in the `qorus-api` factory instead\n\n## Connectors\n\n### Input/Output Connector `getData`\n\nReturns the value of the `get-data` config item.\n\nInput data is available as `$local:input` for all config items resolved with this connector (in internal calls to `UserApi::expandTemplatedValue()`).\n\n### Input/Output Connector `getDataAsList`\n\nReturns the value of the `get-data` config item, converted to a single-element list if necessary.\n\nInput data is available as `$local:input` for all config items resolved with this connector (in internal calls to `UserApi::expandTemplatedValue()`).",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BBM_GetData {\n    #! Connector to return arbitrary data in connectors\n    /** @param input available in the \\a input key of local context data (i.e. <tt>$local:input</tt> when looking up\n        config item values)\n\n        @return the value of the `get-data` config item\n    */\n    auto getData(auto input) {\n        hash<auto> local_context = {\"input\": input};\n        auto rv = UserApi::getConfigItemValue(\"get-data\", local_context);\n        UserApi::logInfo(\"get data connector returning: %y\", rv);\n        return rv;\n    }\n\n    #! Connector to return arbitrary data as a list in connectors\n    /** @param input available in the \\a input key of local context data (i.e. <tt>$local:input</tt> when looking up\n        config item values)\n\n        @return the value of the `get-data` config item, converted to a single=-element list if necessary\n    */\n    list<auto> getDataAsList(auto input) {\n        hash<auto> local_context = {\"input\": input};\n        softlist<auto> rv = UserApi::getConfigItemValue(\"get-data\", local_context);\n        UserApi::logInfo(\"get data connector returning: %y\", rv);\n        return rv;\n    }\n}\n",
          "name": "BBM_GetData",
          "display_name": "BBM Get Data",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "class-connectors": [
            {
              "name": "getData",
              "method": "getData",
              "type": "input-output"
            },
            {
              "name": "getDataAsList",
              "type": "input-output",
              "method": "getDataAsList"
            }
          ],
          "configItems": [
            {
              "name": "get-data",
              "description": "This value will be passed to `UserApi::expandTemplatedValue()`, and that value will be returned",
              "config_group": "Get Data",
              "type": "any",
              "strictly_local": true
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 12"
    },
    {
      "request_id": "p2OVe6wKAmGRUSh",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 65,
          "type": "class",
          "desc": "## Summary\n\nBase class for REST handler services\n\nThere are no connectors; this class is driven entirely by configuration.",
          "lang": "qore",
          "source": "# -*- mode: qore; indent-tabs-mode: nil -*-\n\n%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\n# import the Swagger module for Swagger / OpenAPI 2.0 REST schema validation\n%requires Swagger\n\n#! The base CORS-handling code\nclass BBM_CorsRest inherits BBM_CorsBase {\n    #! Creates the object\n    constructor() : BBM_CorsBase(\"rest\") {\n    }\n\n    #! Returns a response to the OPTIONS method if CORS is enabled, otherwise returns an error\n    hash<HttpHandlerResponseInfo> options(hash<auto> cx, *hash<auto> ah) {\n        # check if CORS is enabled\n        *hash<auto> hdr = getCorsResponseHeaders(cx);\n        if (hdr) {\n            # return a CORS response\n            return RestHandler::makeResponse(200, NOTHING, hdr);\n        }\n\n        # see if alternate methods would work\n        list<string> hl = map $1.key, RestHandler::Methods.pairIterator(),\n            $1.key != \"OPTIONS\" && self.hasCallableMethod($1.value + cx.rest_method);\n        # if we have alternate methods, return an appropriate 405 Method Not Allowed error\n        if (hl) {\n            string desc = sprintf(\"HTTP method %s is unimplemented in REST class %y (%s)\", cx.hdr.method, name(),\n                self.className());\n            if (cx.orig_method)\n                desc += sprintf(\" REST method %y\", cx.orig_method);\n            string ml = foldl $1 + \",\" + $2, hl;\n            desc += sprintf(\", available methods: %s\", ml);\n            return cast<hash<HttpHandlerResponseInfo>>(\n                HttpServer::AbstractHttpRequestHandler::makeResponse({\"Allow\": ml}, 405, desc)\n            );\n        }\n\n        # otherwise return a 501 Not Implemeneted response\n        return cast<hash<HttpHandlerResponseInfo>>(RestHandler::make501(\"REST class %y (%s) does not \"\n            \"implement method %y\", name(), self.className(), \"options\"));\n    }\n\n    #! Returns the current REST URI path element name\n    abstract string name();\n}\n\n#! The base request handler class\nclass BBM_RestClass inherits AbstractRestClass, BBM_CorsRest {\n    #! helper method that helps acquiring int argument values\n    static *int doGetInt(*hash<auto> ah, string key, *bool optional) {\n        switch (ah{key}.typeCode()) {\n            case NT_NOTHING:\n                if (optional) {\n                    return;\n                }\n                break;\n\n            case NT_STRING:\n                if (ah{key}.intp()) {\n                    return ah{key}.toInt();\n                }\n                break;\n\n            case NT_INT:\n                return ah{key};\n        }\n\n        # will be converted to a 400 Bad Request response\n        throw \"REST-ARG-ERROR\", sprintf(\"missing required int argument %y (got type %y)\", key, ah{key}.type());\n    }\n\n    #! helper method that helps acquiring number argument values\n    static *softnumber doGetNumber(*hash<auto> ah, string key, *bool optional) {\n        switch (ah{key}.typeCode()) {\n            case NT_NOTHING:\n                if (optional) {\n                    return;\n                }\n                break;\n\n            case NT_STRING:\n                if (ah{key}.intp()) {\n                    return ah{key};\n                }\n                break;\n\n            case NT_INT:\n            case NT_FLOAT:\n            case NT_NUMBER:\n                return ah{key};\n        }\n\n        # will be converted to a 400 Bad Request response\n        throw \"REST-ARG-ERROR\", sprintf(\"missing required number argument %y (got type %y)\", key, ah{key}.type());\n    }\n\n    #! helper method that helps acquiring string argument values\n    static *string doGetString(*hash<auto> ah, string key, *bool optional) {\n        switch (ah{key}.typeCode()) {\n            case NT_NOTHING:\n                if (optional) {\n                    return;\n                }\n                break;\n\n            case NT_STRING:\n                return ah{key};\n        }\n\n        # will be converted to a 400 Bad Request response\n        throw \"REST-ARG-ERROR\", sprintf(\"missing required string argument %y (got type %y)\", key, ah{key}.type());\n    }\n}\n\n#! Attribute REST class\nclass BBM_AttributeRestClass inherits BBM_RestClass {\n    public {\n        const DefaultKeyRegexList = (\"name$\", \"id$\");\n        const DefaultName = \"attribute\";\n    }\n\n    private {\n        auto info;\n        string key;\n        softstring name;\n    }\n\n    constructor(auto info, *string key) {\n        self.info = info;\n        setName(info, key);\n    }\n\n    private setName(auto info, *string key) {\n        if (info.strp()) {\n            name = info;\n            if (name.val()) {\n                return;\n            }\n        }\n\n        if (info.typeCode() == NT_HASH) {\n            if (key.val() && info{key}.str()) {\n                name = info{key};\n                if (name.val()) {\n                    return;\n                }\n            }\n\n            string anykey;\n            softstring anyname;\n\n            # if no name is set, try to find an identifier in the hash data\n            foreach hash<auto> i in (info.pairIterator()) {\n                foreach string regex in (DefaultKeyRegexList) {\n                    if (i.value.strp()) {\n                        if (!anyname.val()) {\n                            anykey = i.key;\n                            anyname = i.value;\n                        }\n                        if (Qore::regex(i.key, regex, RE_Caseless)) {\n                            name = i.value;\n                            if (name.val()) {\n                                key = i.key;\n                                return;\n                            }\n                        }\n                    }\n                }\n            }\n\n            # if no name is set, take the value of the first field that can be converted to a string\n            if (anyname.val()) {\n                key = anykey;\n                name = anyname;\n                return;\n            }\n        }\n\n        # if no name is set, set the default name\n        name = DefaultName;\n    }\n\n    *AbstractRestClass subClassImpl(string name, hash<auto> cx, *hash<auto> ah) {\n        if (info.typeCode() == NT_HASH) {\n            if (info.hasKey(name)) {\n                return new BBM_AttributeRestClass(info{name});\n            }\n        } else if (key.val() && info.typeCode() == NT_LIST && info[0].typeCode() == NT_HASH) {\n            # try to find the element requested\n            foreach hash<auto> h in (info) {\n                if (h{key} == name) {\n                    return new BBM_AttributeRestClass(h - key);\n                }\n            }\n        }\n    }\n\n    softstring name() {\n        return name;\n    }\n\n    hash<HttpHandlerResponseInfo> get(hash<auto> cx, *hash<auto> ah) {\n        return RestHandler::makeResponse(200, info);\n    }\n\n    hash<HttpHandlerResponseInfo> put(hash<auto> cx, *hash<auto> ah) {\n        return RestHandler::makeResponse(200, info);\n    }\n}\n\n#! The base REST handler class\nclass BBM_RestHandlerBase inherits AbstractServiceRestHandler, BBM_HttpAuthenticatorBase, BBM_CorsRest {\n    #! Creates the object\n    constructor(AbstractAuthenticator auth = BBM_HttpAuthenticatorBase::getAuthenticator(\"rest-auth-name\",\n            \"rest-auth-cookie\", \"rest-auth-redirect\"))\n            : AbstractServiceRestHandler(\n            ServiceApi::getConfigItemValue(\"rest-root-uri\"),\n            False,\n            auth,\n            BBM_RestHandlerBase::getSwaggerSchema()) {\n    }\n\n    #! Returns the Swagger schema, if any\n    private static *SwaggerSchema getSwaggerSchema() {\n        *string schema = ServiceApi::getConfigItemValue(\"rest-swagger-schema\");\n        if (!schema) {\n            return;\n        }\n        # add \"resource://\" prefix to string if it is not a location\n        if (schema !~ /\\w+:\\/\\//) {\n            schema = \"resource://\" + schema;\n        }\n        return SwaggerLoader::fromString(UserApi::getTextFileFromLocation(schema));\n    }\n\n    hash<HttpResponseInfo> handleRequest(HttpListenerInterface listener, Socket s, hash<auto> cx, hash<auto> hdr, *data b) {\n        hash<HttpResponseInfo> rv = AbstractServiceRestHandler::handleRequest(listener, s, cx, hdr, b);\n        rv.hdr += getCorsResponseHeaders(cx);\n        return rv;\n    }\n\n    removeRootPath(reference<string> path) {\n        *int rm_comp = ServiceApi::getConfigItemValue(\"rest-remove-leading-path-components\");\n        if (!exists rm_comp && url.val()) {\n            rm_comp = url.split(\"/\").size();\n        }\n        if (rm_comp) {\n            list<string> l = path.split(\"/\");\n            int start = 1;\n            if (path !~ /^\\//) {\n                --start;\n            }\n            # leave any URI query in the path\n            if (rm_comp == l.size()) {\n                path =~ s/^[^\\?]*//;\n            } else {\n                splice l, start, rm_comp;\n                path = l.join(\"/\");\n            }\n        }\n    }\n\n    string name() {\n        return \"/\";\n    }\n\n    private hash<HttpHandlerResponseInfo> returnRestException(hash<ExceptionInfo> ex) {\n        if (ex.err =~ /-ARG-ERROR$/) {\n            return <HttpHandlerResponseInfo>{\n                \"code\": 400,\n                \"body\": ex.desc,\n            };\n        }\n        if (ex.err == \"AUTHORIZATION-ERROR\" || ex.err =~ /-ACCESS-ERROR$/) {\n            return <HttpHandlerResponseInfo>{\n                \"code\": 403,\n                \"body\": ex,\n            };\n        }\n        if (ex.err == \"REST-NOT-FOUND-ERROR\") {\n            return <HttpHandlerResponseInfo>{\n                \"code\": 404,\n                \"body\": ex.desc,\n            };\n        }\n        # for all other errors, return the standard \"409 Conflict\" response\n        return RestHandler::returnRestException(ex);\n    }\n}\n\n#! The REST service base class; includes a parametrized handler class as well\nclass BBM_RestServiceBase inherits BBM_HttpServiceGenericBase {\n}\n",
          "name": "BBM_RestServiceBase",
          "display_name": "BBM Rest Service Base",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "configItems": [
            {
              "name": "http-listener-bind-address",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-cert-location",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-cert-format",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-location",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-format",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-password",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-ssl-mode",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-accept-all-certs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-capture-client-certs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-root-uri",
              "description": "The root URI path for the REST service",
              "config_group": "Rest Handler",
              "type": "string",
              "strictly_local": true
            },
            {
              "name": "rest-auth-name",
              "description": "A string identifying the authenticator; the following values are allowed:\n - **`default`**: the default Qorus authenticator; new connections must have valid credentials for Qorus\n - **`default-basic`**: the same as **`default`** except in case of an unauthorized request, a `WWW-Authenticate` header is returned indicating that HTTP basic authentication is required\n - **`permissive`**: no authentication is required; all requests are automatically accepted\n - **`cookie`**: same as `default` with also support for cookie-based authentication; the cookie name is defined with the `rest-auth-cookie` config item",
              "config_group": "Rest Handler",
              "type": "string",
              "default_value": "default",
              "allowed_values": [
                "permissive",
                "default",
                "default-basic",
                "cookie"
              ],
              "strictly_local": true,
              "default_value_true_type": "string"
            },
            {
              "name": "rest-auth-cookie",
              "description": "A string providing the name of the cookie for cookie-based authentication, only used when `rest-auth-name` is `cookie`",
              "config_group": "Rest Handler",
              "type": "string",
              "default_value": "qorus_auth_token",
              "strictly_local": true,
              "default_value_true_type": "string"
            },
            {
              "name": "rest-auth-redirect",
              "description": "A string providing the URL to redirect unauthenticated requests; only used when `rest-auth-name` is `cookie`",
              "config_group": "Rest Handler",
              "type": "*string",
              "strictly_local": true
            },
            {
              "name": "rest-swagger-schema",
              "description": "The location of the Swagger schema for this service; this string will be processed with `UserApi::getTextFileFromLocation()`; if there is no location prefix in the string, then the string will be assumed to be a service resource name and will be automatically prefixed with `resource://`",
              "config_group": "Rest Handler",
              "type": "*string",
              "strictly_local": true
            },
            {
              "name": "rest-remove-leading-path-components",
              "description": "The number of leading path components to strip in new requests before processing (ex: before passing on to a REST validator); if not set the default behavior is to automatically process the path based on `rest-root-uri`; the automatic behavior should cover all practical cases; normally this config item does not need to be set.",
              "config_group": "Rest Handler",
              "type": "*int",
              "strictly_local": true
            },
            {
              "name": "rest-cors-enable",
              "description": "set to `true` to enable CORS",
              "config_group": "Rest Handler CORS",
              "type": "bool",
              "default_value": false,
              "strictly_local": true
            },
            {
              "name": "rest-cors-methods",
              "description": "HTTP methods allowed with CORS; ignored if `rest-cors-enable` is `false`",
              "config_group": "Rest Handler CORS",
              "type": "list",
              "default_value": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS"
              ],
              "strictly_local": true,
              "default_value_true_type": "list"
            },
            {
              "name": "rest-cors-max-age",
              "description": "the value for the `Access-Control-Max-Age` header",
              "config_group": "Rest Handler CORS",
              "type": "int",
              "default_value": 9999999,
              "strictly_local": true,
              "default_value_true_type": "int"
            },
            {
              "name": "rest-cors-headers",
              "description": "values for the `Access-Control-Allow-Headers` header",
              "config_group": "Rest Handler CORS",
              "type": "*list",
              "default_value": [
                "Content-Type",
                "content-type",
                "Content-Language",
                "content-language",
                "Accept",
                "Accept-Language",
                "Authorization"
              ],
              "strictly_local": true,
              "default_value_true_type": "*list"
            },
            {
              "name": "rest-cors-credentials",
              "description": "if `true` then the `Access-Control-Allow-Credentials: true` header is sent",
              "config_group": "Rest Handler CORS",
              "type": "bool",
              "default_value": false,
              "strictly_local": true
            },
            {
              "name": "http-listener-allow-sharing",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 65"
    },
    {
      "request_id": "ffTbRrnXE0EwfAw",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 58,
          "type": "class",
          "desc": "generic class for event-driven file actions on the local filesystem",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\n%requires FsEventPoller\n\n#! Base filesystem event streaming base class\nclass BBM_FsEventBase inherits AbstractDelayedFsEventPoller, Observable, BBM_RegularExpressions {\n    #! Creates the object and starts even streaming\n    constructor() : AbstractDelayedFsEventPoller(UserApi::getConfigItemValue(\"fsevent-root-path\"), BBM_FsEventBase::getOptions()) {\n        initImpl();\n        start();\n    }\n\n    #! Override in child classes for custom initialization code\n    initImpl() {\n        # this method intentionally left empty\n    }\n\n    #! Notify observer of event\n    fileEvent(hash<FsEventInfo> event) {\n        UserApi::logDebug(\"file event: %y\", event);\n        notifyObservers(\"BBM_FsEventBase::fileEvent\", event);\n    }\n\n    #! Builds constructor options from config items\n    static private hash<FsDelayedEventPollerOptionInfo> getOptions() {\n        hash<FsDelayedEventPollerOptionInfo> rv(cast<hash<FsDelayedEventPollerOptionInfo>>({\n            \"log_info\": \\UserApi::logInfo(),\n            \"log_detail\": \\UserApi::logInfo(),\n            \"log_debug\": \\UserApi::logDebug(),\n            \"start_thread\": \\ServiceApi::startThread(),\n            \"actions\": (ADD,),\n            \"recursive\": UserApi::getConfigItemValue(\"fsevent-recursive\"),\n            \"minage\": UserApi::getConfigItemValue(\"fsevent-min-age-secs\"),\n        }));\n\n        string mask_type = UserApi::getConfigItemValue(\"fsevent-mask-type\");\n\n        if (exists (*string val = UserApi::getConfigItemValue(\"fsevent-mask\"))) {\n            if (mask_type == \"GLOB\") {\n                rv.mask = val;\n            } else {\n                rv.regex_mask = val;\n            }\n        }\n\n        if (mask_type == \"REGEX\" && exists (*string val = UserApi::getConfigItemValue(\"fsevent-regex-opts\"))) {\n            rv.reopts = MAP{val};\n        }\n\n        UserApi::logInfo(\"using options: %y\", {\n            \"root_path\": UserApi::getConfigItemValue(\"fsevent-root-path\"),\n        } + (rv - (\"log_info\", \"log_detail\", \"log_debug\", \"start_thread\",)));\n        return rv;\n    }\n}\n",
          "name": "BBM_FsEventBase",
          "display_name": "BBM Fs Event Base",
          "short_desc": "generic class for event-driven file actions on the local filesystem",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "class-connectors": [
            {
              "name": "event",
              "method": "fileEvent",
              "output-provider": {
                "can_manage_fields": false,
                "name": "qore",
                "path": "/fsevents/event",
                "type": "type"
              },
              "type": "event"
            },
            {
              "name": "stop",
              "method": "stop",
              "type": "output"
            }
          ],
          "configItems": [
            {
              "name": "fsevent-root-path",
              "description": "The path to the root directory for filesystem events",
              "config_group": "FsEvent Main",
              "type": "string",
              "strictly_local": true
            },
            {
              "name": "fsevent-mask-type",
              "description": "determines how `fsevent-mask` is interpretedeither:\n- `GLOB`: `fsevent-mask` is a standard glob (ex: `*.txt`)\n- `REGEX`: `fsevent-mask` is a regular expression pattern (ex: `^inventory-[A-J].*\\.txt$`)",
              "config_group": "FsEvent Main",
              "type": "string",
              "default_value": "GLOB",
              "allowed_values": ["GLOB", "REGEX"],
              "strictly_local": true,
              "default_value_true_type": "string"
            },
            {
              "name": "fsevent-mask",
              "description": "The file mask value; `fsevent-mask-type` determines how this mask is interpreted",
              "config_group": "FsEvent Main",
              "type": "string",
              "strictly_local": true
            },
            {
              "name": "fsevent-min-age-secs",
              "description": "The number of seconds to wait after the file's last modified date changes before raising the event for the new file; must be a non-negative integer.",
              "config_group": "FsEvent Main",
              "type": "int",
              "default_value": 0,
              "strictly_local": true
            },
            {
              "name": "fsevent-regex-opts",
              "description": "regular expression options for a regular expression mask; only used if `fsevent-mask-type` is `REGEX`",
              "config_group": "FsEvent Main",
              "type": "string",
              "default_value": "NONE",
              "allowed_values": [
                "NONE",
                "IGNORE-CASE",
                "MULTILINE",
                "IGNORE-CASE and MULTILINE"
              ],
              "strictly_local": true,
              "default_value_true_type": "string"
            },
            {
              "name": "fsevent-recursive",
              "description": "Set to `true` to raise events for files in subdirectories of the root path; `false` means only raise events for files directly in the root directory.",
              "config_group": "FsEvent Main",
              "type": "bool",
              "default_value": false,
              "strictly_local": true
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 58"
    }
  ],
  "connection": [
    {
      "request_id": "21m9PdwxwTxHhSY",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 672,
          "type": "connection",
          "name": "gmail",
          "display_name": "Gmail Connection",
          "short_desc": "Connection to Gmail server",
          "desc": "Connection to Gmail server",
          "url": "gmail://gmail.googleapis.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "json"
            },
            "oauth2_auth_args": {
              "type": "hash",
              "value": "{access_type: \"offline\", prompt: \"consent\"}\n"
            },
            "oauth2_auth_url": {
              "type": "string",
              "value": "https://accounts.google.com/o/oauth2/v2/auth"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_grant_type": {
              "type": "string",
              "value": "authorization_code"
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "cloud"
            },
            "oauth2_token_url": {
              "type": "string",
              "value": "https://oauth2.googleapis.com/token"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "api_profile": {
              "type": "string",
              "value": "gmail"
            },
            "oauth2_alt_token_url": {
              "type": "string",
              "value": "https://api.qoretechnologies.com/qorus-api/token"
            },
            "oauth2_client_id": {
              "type": "string",
              "value": "703826044188-crueh6ftp73nrj021mrft52vn0jveghb.apps.googleusercontent.com"
            },
            "oauth2_client_secret": {
              "type": "string",
              "value": "cloud"
            },
            "oauth2_scopes": {
              "type": "list",
              "value": "[\"https://mail.google.com/\"]\n"
            },
            "oauth2_token_args": {
              "type": "hash",
              "value": "{oauth2_app: \"Gmail\"}\n"
            },
            "ping_headers": {
              "type": "hash",
              "value": "{Accept: \"application/json\"}\n"
            },
            "ping_method": {
              "type": "string",
              "value": "GET"
            },
            "ping_path": {
              "type": "string",
              "value": "/gmail/v1/users/me/settings/language"
            },
            "token": {
              "type": "string",
              "value": "ya29.a0Ad52N3_3FM-hUXliofn0wmGt61W86ym6v0GnJzYsFeX1MX8H4J3R8379r8DNSvvCDd-FH24JEcSPPeRhK5dQwZeJyfSyfvYaBlrfPmqNXwuLXhjJcLYI1VT4c-LXGzjIVJKGCd03kjigyv616aeGDsBWYgvUcMyFkve4vWUaCgYKAYgSARASFQHGX2Mi6g8_EjIOSvX57yg0qrkuYA0174"
            },
            "oauth2_refresh_token": {
              "type": "string",
              "value": "1//09iVu2pjOs2qmCgYIARAAGAkSNwF-L9IrUqauGHkz1KC85VbfiyKejdeRyNYOVE8SlzS4R2N78Pqj1XcFBW9x0GlLzGtMDWcGdBU"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 672"
    },
    {
      "request_id": "UxtVo7ZYznyshFE",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 981,
          "type": "connection",
          "name": "busylight-matthias",
          "display_name": "Busylight-Matthias",
          "short_desc": "Matthias' Busylight",
          "desc": "Connection to MQTT Kuando Busylight server",
          "url": "blssl://eu1.cloud.thethings.network",
          "options": {
            "clean_session": {
              "type": "bool",
              "value": true
            },
            "client_id": {
              "type": "string",
              "value": "QoreMqttClient"
            },
            "connect_timeout": {
              "type": "integer",
              "value": 30
            },
            "encoding": {
              "type": "string",
              "value": "UTF-8"
            },
            "keep_alive_interval": {
              "type": "integer",
              "value": 60
            },
            "max_in_flight": {
              "type": "integer",
              "value": 10
            },
            "message_format": {
              "type": "string",
              "value": "json"
            },
            "disable_automatic_pings": {
              "type": "bool",
              "value": true
            },
            "username": {
              "type": "string",
              "value": "1st-gdc-app@ttn"
            },
            "password": {
              "type": "string",
              "value": "NNSXS.L2F7BKG2744MM4B66VPZPTL2XLVJTPMNSSSNJRI.SNGQABBHGCWGDOOM7RW57DMGSSP72TIGH7IQA4ATDYGOSWOPOCQA"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 981"
    },
    {
      "request_id": "9CAa7OMxtGSynDo",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 965,
          "type": "connection",
          "name": "conn-test",
          "display_name": "Conn Test",
          "short_desc": "testing connection availability",
          "desc": "testing connection availability",
          "url": "http://localhost:1",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 2000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 2000
            }
          },
          "tags": {
            "tag1": {
              "type": "string",
              "value": "IoAZ52LxP2cc37S"
            },
            "tag2": {
              "type": "string",
              "value": "2"
            },
            "tag3": {
              "type": "string",
              "value": "3"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 965"
    },
    {
      "request_id": "O22m1qUidzLRQ5c",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 549,
          "type": "connection",
          "name": "netsuite",
          "display_name": "Netsuite",
          "short_desc": "NetSuite",
          "desc": "NetSuite",
          "url": "netsuite://x",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_auth_url": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_grant_type": {
              "type": "string",
              "value": "authorization_code"
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "cloud"
            },
            "oauth2_scopes": {
              "type": "list",
              "value": "[\"rest_webservices\"]\n"
            },
            "oauth2_token_url": {
              "type": "string",
              "value": "auto"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "oauth2_logout_url": {
              "type": "string",
              "value": "auto"
            },
            "account_id": {
              "type": "string",
              "value": "5717116-sb1"
            },
            "oauth2_client_id": {
              "type": "string",
              "value": "68a32497458a081894e5e8483e7510967a7a4d704bef394f8222c48e6d7c20bb"
            },
            "oauth2_client_secret": {
              "type": "string",
              "value": "f7dfbe9811b5a7334daca3760507dc80ee5b2a7fe9fbfdc36a16c6f29bec9185"
            },
            "token": {
              "type": "string",
              "value": "eyJraWQiOiJjLjU3MTcxMTZfU0IxLjIwMjMtMTEtMDdfMDAtMTYtNTYiLCJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzOzIyNzkiLCJhdWQiOlsiQjM2RkU3NzQtMDZENy00RjU5LUE5MjItNUY3NTNBRTRDNEQ0OzU3MTcxMTZfU0IxIiwiNjhhMzI0OTc0NThhMDgxODk0ZTVlODQ4M2U3NTEwOTY3YTdhNGQ3MDRiZWYzOTRmODIyMmM0OGU2ZDdjMjBiYiJdLCJzY29wZSI6WyJyZXN0X3dlYnNlcnZpY2VzIl0sImlzcyI6Imh0dHBzOi8vc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTY5OTU1NDQ3NiwiZXhwIjoxNjk5NTU4MDc2LCJpYXQiOjE2OTk1NTQ0NzYsImp0aSI6IjU3MTcxMTZfU0IxLmEtYS5mYzhhNWEwYi1iOTFkLTQwMTMtOTQ3MS03NDk1ZDhkNzAxN2JfMTY5OTU1NDQ3NjQ5Mi4xNjk5NTU0NDc2NDkyIn0.qKaiY3vPxLuFt0LuLTo4sxD3N9-t7c_6gL7md5yNKvjmCV_PR5GGOs69CKIJyLGVqY6SR2XRcBBwVJN0ClTzN2eolz_zZNDzHRgemJDX8MO7I7RA7E8GLIiP8_JAd-WthG3W3Fbf_UnzLElOQZ28HgP0HR58BtYcgtTGQVBALUKYgwX1fzyi0Z2bYIO9zsElN_38Fc9h1DRcUPWNf0lEaBA-qnqa-Wyn7dywLUa93pLkJBlbVzrxtt8X_FgKNpaxv2lS2_z5iEKdkoti_pXG6xk_shM6ZmLjnArJiqzywyiGoh5ZVycta4wVOKI4kCh7I0qEo1S4QCXYHsovkIcAd5-u2wWTaOPlb9mqrZPVrFlc-iI47BfqWpavhdcyFIcqBLvD2X3xX8-znEknVgBBafR-uX2lme5RUje2mvU7gFcGYAL--caePBRS1857pJZg6Yv_gXWSjxnp91Qsdg6nbxZfN_hE0mD2d0f_xpf6DEPRFDJffhPIhSf0yzg4rtYJ-aihQ8J49a5u7Jiv7_fgpg7ssijNyb4p43VCx6qKmsCHN1vx1Vu2YmxK_CrFAUWCRWKTTMRIiGJKL7rbG-73s1nJo88Fwx1gQP-NXtrLL8uB_8_jbb5MAMFV6WORUsN0Rp_v2nYEojLqN3qSzGmi2Q5VAXMkoE5Yxv_xFNVVWCw"
            },
            "oauth2_refresh_token": {
              "type": "string",
              "value": "eyJraWQiOiJjLjU3MTcxMTZfU0IxLjIwMjMtMTEtMDdfMDAtMTYtNTYiLCJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzOzIyNzkiLCJhdWQiOlsiQjM2RkU3NzQtMDZENy00RjU5LUE5MjItNUY3NTNBRTRDNEQ0OzU3MTcxMTZfU0IxIiwiNjhhMzI0OTc0NThhMDgxODk0ZTVlODQ4M2U3NTEwOTY3YTdhNGQ3MDRiZWYzOTRmODIyMmM0OGU2ZDdjMjBiYiJdLCJzY29wZSI6WyJyZXN0X3dlYnNlcnZpY2VzIl0sImlzcyI6Imh0dHBzOi8vc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTY5OTU1NDQ3NiwiZXhwIjoxNzAwMTU5Mjc2LCJpYXQiOjE2OTk1NTQ0NzYsImp0aSI6IjU3MTcxMTZfU0IxLnItYS5mYzhhNWEwYi1iOTFkLTQwMTMtOTQ3MS03NDk1ZDhkNzAxN2JfMTY5OTU1NDQ3NjQ5Mi4wIn0.RN2cOCAyGGEORyg__3MmtN5qj_ZDexmU8tjRKW_juSZy0UFzTiqSujLH1CtegSIwQ-ir_AfvBfc2e7VyDp6JNRM2ouSkrasuDfCbYuAeBz6mAWG02zhriWrVy2v6SXF5FdkT3KppE2Dvs1H9l0pSG2gQu6FfH_WqSOGCJcD66BOcm0UatE36Ag4ZjLTvNFGDcsUCpZDvgBtZnC0oRKMwj6xIXvaXbcORPEKj71U0CMRwGvNsF9z76TuPjzFoHFmvkLBCRJbajofoQ_ObJrSQEFYJZ58Inaec7YyLr55b-WJ9jyPHVSCuEU0uf-VL35RTp2Y1-t7F82ZApjToxt6SoCkwOsg_00HmzfvTaDkfTu5zy6pKQ20QehRHtpwbtIRcnnOoG96dyf6zjYkayrsoSbK8zeE-jLg6RPmWyJiCO8vKVrX2cQK0tR_4Op57dbniGIVyxSGw1DDe9KD53OS_aDQ9mU2hqBajnBuBg3jdjcs8YTGoApnKLAm-MDiiy9MhM_2WtZ4ZZXBc7f2a9-3Yy3HKzK4poqLZMH8Ti8ZhAUOuUI5tI6C7_jNubXkEYRK6tRrgNzl8T4Rn-UXq4aBz6fDjcq4WY8qAn1cyI1_h1v6X0XGlnZlPLsEbYMPxfRalYMcewSC9S8EgZu0Klz38qnWf6c6G050sJ6Kdzst1g2s"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 549"
    },
    {
      "request_id": "zp5p5YPheJnL1rO",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 561,
          "type": "connection",
          "name": "mews-cert",
          "display_name": "Mews Cert",
          "short_desc": "Mews certification",
          "desc": "Mews certification",
          "url": "mewsrest://api.mews-demo.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "ping_method": {
              "type": "string",
              "value": "POST"
            },
            "ping_path": {
              "type": "string",
              "value": "configuration/get"
            },
            "ping_headers": {
              "type": "hash",
              "value": "{Accept: \"application/json\"}\n"
            },
            "ping_body": {
              "type": "string",
              "value": "auto"
            },
            "client": {
              "type": "string",
              "value": "Qorus Integration Engine 6.1"
            },
            "access_token": {
              "type": "string",
              "value": "B811B453B8144A73B80CAD6E00805D62-B7899D9C0F3C579C86621146C4C74A2"
            },
            "client_token": {
              "type": "string",
              "value": "9381AB282F844CD9A2F4AD200158E7BC-D27113FA792B0855F87D0F93E9E1D71"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 561"
    },
    {
      "request_id": "HQYSQvzWCxOE1G0",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 594,
          "type": "connection",
          "name": "mews-julius-meinl-prod",
          "display_name": "Mews Julius Meinl Prod",
          "short_desc": "Mews Julius Meinl Production",
          "desc": "Mews Julius Meinl Production",
          "url": "mewsrest://api.mews.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "ping_method": {
              "type": "string",
              "value": "POST"
            },
            "ping_path": {
              "type": "string",
              "value": "configuration/get"
            },
            "ping_headers": {
              "type": "hash",
              "value": "{Accept: \"application/json\"}\n"
            },
            "ping_body": {
              "type": "string",
              "value": "auto"
            },
            "client": {
              "type": "string",
              "value": "Qore 2.0.0"
            },
            "access_token": {
              "type": "string",
              "value": "635945DD5A7546B688F4B0D000EE8DD3-9F230B8A471DAA44FD3368760ABD569"
            },
            "client_token": {
              "type": "string",
              "value": "695CC4B6C044406B8440B0D000ED2E79-497EF4A78881ACD453386EF6757E61B"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 594"
    },
    {
      "request_id": "xsvGs6wM269ljx0",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 323,
          "type": "connection",
          "name": "servicenow",
          "display_name": "Servicenow",
          "short_desc": "ServiceNow",
          "desc": "ServiceNow",
          "url": "snrests://dev81239.service-now.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_auth_url": {
              "type": "string",
              "value": "/oauth_auth.do"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_grant_type": {
              "type": "string",
              "value": "authorization_code"
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_token_url": {
              "type": "string",
              "value": "/oauth_token.do"
            },
            "ping_method": {
              "type": "string",
              "value": "GET"
            },
            "ping_path": {
              "type": "string",
              "value": "table/sys_properties?sysparm_exclude_reference_link=true&sysparm_suppress_pagination_header=true&sysparm_fields=value&sysparm_query=name=mid.version"
            },
            "ping_headers": {
              "type": "hash",
              "value": "{Accept: \"application/json\"}\n"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "api": {
              "type": "string",
              "value": "now"
            },
            "token": {
              "type": "string",
              "value": "ZMvMzjNGNBf7JNey-z1A84z0G2GatFndILrpBq9QR7SGU8dxKOmdi9JkMzIbNmTRORXXznF3CX15Og4mu2L7dQ"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 323"
    },
    {
      "request_id": "qYLr5qG2PNI50L3",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 970,
          "type": "connection",
          "name": "haltian-demo",
          "display_name": "Haltian Demo",
          "short_desc": "Haltian demo connection",
          "desc": "Connection to Haltian Empathic Building server",
          "url": "ebrests://eu-api.empathicbuilding.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "auto"
            },
            "ping_method": {
              "type": "string",
              "value": "GET"
            },
            "ping_path": {
              "type": "string",
              "value": "v1/current_time"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "token": {
              "type": "string",
              "value": "4612f383-2bb1-4386-ad6d-0f7e776ff99a"
            },
            "refresh_token": {
              "type": "string",
              "value": "5c692dc9-36cf-4aa9-b8a6-faaa9313f701"
            },
            "username": {
              "type": "string",
              "value": "matthias-garbe@editor"
            },
            "password": {
              "type": "string",
              "value": "U8kk.AvB4h..BWd"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 970"
    },
    {
      "request_id": "Eqp2hQBCLo0P89k",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 5,
          "type": "connection",
          "name": "fs-regression",
          "display_name": "Fs Regression",
          "short_desc": "shared filesystem in mseplftp directory",
          "desc": "shared filesystem in mseplftp directory",
          "url": "file:///tmp",
          "options": {
            "readonly": {
              "type": "bool",
              "value": false
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 5"
    },
    {
      "request_id": "iLW9DwFjrzkZjjs",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 1,
          "type": "connection",
          "name": "rest-billing-demo",
          "display_name": "Rest Billing Demo",
          "short_desc": "REST billing demo connection",
          "desc": "REST billing demo connection",
          "url": "rests://192.168.16.11:8011/billing-demo",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "auto"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "swagger": {
              "type": "string",
              "value": "resource://telco-billing-rest-api:billing-demo-1.0.yaml"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 1"
    }
  ],
  "job": [
    {
      "request_id": "u42RTk9Z34ISDV6",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 22,
          "type": "job",
          "desc": "Test for issue 3722",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nconst Domain = \"issue-3722\";\nconst Key1 = \"key1\";\nconst Key2 = \"key2\";\n\nclass Issue3722 inherits QorusJob, QoreTest {\n    run() {\n        # clear system property domain\n        string result = propUpdate(Domain, Key1, \"x\");\n        logInfo(\"update %y.%y = x: %y\", Domain, Key1, result);\n        result = propUpdate(Domain, Key2, \"y\");\n        logInfo(\"update %y.%y = y: %y\", Domain, Key2, result);\n\n        logInfo(\"%y: %y\", Domain, expandTemplatedValue(\"$sysprop:{\" + Domain + \"}\"));\n\n        assertEq(\"x\", expandTemplatedValue(\"$sysprop:{\" + Domain + \".\" + Key1 + \"}\"));\n\n        # check property values\n        assertEq(\"x\", expandTemplatedValue(\"$sysprop:{\" + Domain + \".\" + Key1 + \"}\"));\n        assertEq(\"y\", expandTemplatedValue(\"$sysprop:{\" + Domain + \".\" + Key2 + \"}\"));\n\n        # write to properties\n        updateOutputData({\"id\": \"val1\"}, {\"id\": \"$sysprop:{\" + Domain + \".\" + Key1 + \"}\"});\n        updateOutputData({\"id\": \"val2\"}, {\"id\": \"$sysprop:{\" + Domain + \".\" + Key2 + \"}\"});\n\n        # check property values\n        assertEq(\"val1\", expandTemplatedValue(\"$sysprop:{\" + Domain + \".\" + Key1 + \"}\"));\n        assertEq(\"val2\", expandTemplatedValue(\"$sysprop:{\" + Domain + \".\" + Key2 + \"}\"));\n\n        # update entire domain\n        hash<auto> h = {\n            \"x\": 1,\n            \"y\": 2,\n        };\n        updateOutputData({\"id\": h}, {\"id\": \"$sysprop:{\" + Domain + \"}\"});\n\n        assertNothing(expandTemplatedValue(\"$sysprop:{\" + Domain + \".\" + Key1 + \"}\"));\n        assertNothing(expandTemplatedValue(\"$sysprop:{\" + Domain + \".\" + Key2 + \"}\"));\n        assertEq(1, expandTemplatedValue(\"$sysprop:{\" + Domain + \".x\" + \"}\"));\n        assertEq(2, expandTemplatedValue(\"$sysprop:{\" + Domain + \".y\" + \"}\"));\n\n        assertEq(h, expandTemplatedValue(\"$sysprop:{\" + Domain + \"}\"));\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3722",
          "schedule": "0 0 1 1 *",
          "name": "issue-3722",
          "display_name": "Issue 3722",
          "short_desc": "Test for issue 3722",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["regression", "test"],
          "classes": [
            {
              "id": 1,
              "name": "QoreTest"
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 22"
    },
    {
      "request_id": "eo2CVF8u2brJe5Y",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 5,
          "type": "job",
          "desc": "context data test job",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass ContextDataTest inherits QorusJob {\n    run() {\n        AbstractDataProviderType type = getQorusType(\"qoretechnologies/qorus-api/jobs/context\");\n        type.acceptsValue(getInfo());\n        logInfo(\"context type OK\");\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "ContextDataTest",
          "schedule": "0 0 1 1 *",
          "name": "context-data-test",
          "display_name": "Context Data Test",
          "short_desc": "context data test job",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["regression", "test"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 5"
    },
    {
      "request_id": "Mmy70dXmetenMxT",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 72,
          "type": "job",
          "desc": "example job with configuration items",
          "lang": "qore",
          "source": "\n%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3166JobNeg3 inherits QorusJob {\n    run() {\n    }\n\n    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {\n        return {\n            \"issue-3166-job-config-1\": <ConfigItemInfo>{\n                \"type\": \"float\",\n                \"default_value\": 123.5,\n                \"description\": \"This is an example configuration item of type float\",\n                \"strictly_local\": True,\n                \"allowed_values\": (NOTHING, 1.0)\n            },\n        };\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3166JobNeg3",
          "schedule": "* * * * *",
          "name": "issue-3166neg3-job",
          "display_name": "Issue 3166neg3 Job",
          "short_desc": "example job with configuration items",
          "version": "1.0",
          "active": true,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test", "regression"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 72"
    },
    {
      "request_id": "X5rGx1R8nJk9vRV",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 29,
          "type": "job",
          "desc": "test for issue #3858: record search with nested operator FSM states",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3858 inherits QorusJob {\n    run() {\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3858",
          "schedule": "0 0 * * *",
          "name": "issue-3858-3",
          "display_name": "Issue 3858 3",
          "short_desc": "test for issue #3858: record search with nested operator FSM states",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "fsm": [
            {
              "name": "issue-3858-3",
              "triggers": [
                {
                  "method": "run"
                }
              ]
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 29"
    },
    {
      "request_id": "bpblVJ95eyNX31n",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 54,
          "type": "job",
          "desc": "test job",
          "lang": "qore",
          "source": "sub run() {\n    UserApi::logInfo(\"test job info: %y\", job_info());\n}\n",
          "schedule": "0,10,20,30,40,50 * * * mon-fri",
          "name": "del",
          "display_name": "Del",
          "short_desc": "test job",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, sro"],
          "groups": ["test"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 54"
    },
    {
      "request_id": "kgvrTvssPXNO3bz",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 125,
          "type": "job",
          "desc": "`BBM_RestAction` test",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BBM_RestActionTest inherits QorusJob {\n    private {\n        ####### GENERATED SECTION! DON'T EDIT! ########\n        ClassConnections_BBM_RestActionTest class_connections();\n        ############ GENERATED SECTION END ############\n    }\n\n    ####### GENERATED SECTION! DON'T EDIT! ########\n    run() {\n        class_connections.Connection_1();\n    }\n    ############ GENERATED SECTION END ############\n}\n\n####### GENERATED SECTION! DON'T EDIT! ########\nclass ClassConnections_BBM_RestActionTest {\n    private {\n        # map of prefixed class names to class instances\n        hash<auto> class_map;\n    }\n\n    constructor() {\n        class_map = {\n            \"BBM_RestAction\": new BBM_RestAction(),\n        };\n    }\n\n    auto callClassWithPrefixMethod(string prefixed_class, string method) {\n        UserApi::logDebug(\"ClassConnections_BBM_RestActionTest: callClassWithPrefixMethod: method: %s class: %y\", method, prefixed_class);\n        return call_object_method_args(class_map{prefixed_class}, method, argv);\n    }\n\n    auto Connection_1(auto params) {\n        UserApi::logDebug(\"Connection_1 called with data: %y\", params);\n\n        UserApi::logDebug(\"calling restAction: %y\", params);\n        return callClassWithPrefixMethod(\"BBM_RestAction\", \"makeRestRequestConnector\", params);\n    }\n}\n############ GENERATED SECTION END ############\n",
          "base-class-name": "QorusJob",
          "class-name": "BBM_RestActionTest",
          "schedule": "0 0 1 1 *",
          "name": "bbm-rest-action-test",
          "display_name": "Bbm Rest Action Test",
          "short_desc": "'BBM_RestAction' test",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "classes": [
            {
              "id": 1,
              "name": "BBM_RestAction"
            }
          ],
          "config-items": [
            {
              "name": "rest-connection-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-method",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-api-mapper-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-uri-path",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-id-location",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-headers",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-swagger-schema-location",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-body-remove-nulls",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-output-data",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-id-log-msg",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-body",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-action-retries",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-action-retry-delay",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            },
            {
              "name": "rest-action-retry-errors",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_RestAction",
                "interface-version": "1.0"
              }
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 125"
    },
    {
      "request_id": "snc9gloVynxgAYS",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 50,
          "type": "job",
          "desc": "example job with configuration items",
          "lang": "qore",
          "source": "\n%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3243 inherits QorusJob {\n    run() {\n        saveInfo({\"val\": getConfigItemValue(\"issue-3243-job-config-item-1\")});\n    }\n\n    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {\n        return {\n            \"issue-3243-job-config-item-1\": <ConfigItemInfo>{\n                \"type\": \"int\",\n                \"default_value\": \"$local:job_instanceid\",\n                \"description\": \"an integer unique key; the default value uses the current job_instanceid\",\n                \"config_group\": \"Main\",\n            },\n        };\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3243",
          "schedule": "* * * * *",
          "name": "issue-3243",
          "display_name": "Issue 3243",
          "short_desc": "example job with configuration items",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test", "regression"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 50"
    },
    {
      "request_id": "IW2ghwnNB0ayKj2",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 49,
          "type": "job",
          "desc": "issue 3198 test job",
          "lang": "qore",
          "source": "# ENDSERVICE\n\n%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3198Job inherits QorusJob {\n    run() {\n        hash<auto> output = getMapper(\"issue-3198\").mapData({\"input\": \"test\"});\n        saveInfo(output);\n        logInfo(\"output: %y\", output);\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3198Job",
          "schedule": "* * * * *",
          "name": "issue-3198",
          "display_name": "Issue 3198",
          "short_desc": "issue 3198 test job",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test", "regression"],
          "mappers": ["issue-3198"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 49"
    },
    {
      "request_id": "yV13nok4sudMlqq",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 47,
          "type": "job",
          "desc": "class-based test job",
          "lang": "qore",
          "source": "%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\nclass MultiInterfaceTest inherits MultiTestJob {\n    runImpl() {\n        logInfo(\"test job info: %y\", getInfo());\n\n        *int aid = auditUserEvent(\"REGRESSION-JOB-EVENT\");\n        test_value(aid.type(), auditCheckEventString(OMQ::AES_USER_EVENT) ? Type::Int : Type::NothingType, \"audit-1\");\n\n        logInfo(\"h: %y\", getUserContextInfo());\n    }\n}\n",
          "base-class-name": "QorusJob",
          "schedule": "0,10,20,30,40,50 * * * mon-fri",
          "name": "MultiInterfaceTest",
          "display_name": "Multi Interface Test",
          "short_desc": "class-based test job",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test", "regression"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 47"
    },
    {
      "request_id": "RcaLE6FOFosY2Gj",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 127,
          "type": "job",
          "desc": "class-based test job",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BBM_TestSftpJob inherits BBM_SftpPollerCreateOrderJob {\n}\n",
          "base-class-name": "BBM_SftpPollerCreateOrderJob",
          "class-name": "BBM_TestSftpJob",
          "schedule": "0 0 * * *",
          "name": "bb-test-sftp-job",
          "display_name": "Bb Test Sftp Job",
          "short_desc": "class-based test job",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test", "bb-test"],
          "classes": [
            {
              "id": 1,
              "name": "BBM_RegularExpressions"
            },
            {
              "id": 2,
              "name": "BBM_SftpPollerBase"
            },
            {
              "id": 3,
              "name": "BBM_CreateOrder"
            },
            {
              "id": 4,
              "name": "BBM_CreateOrderStatic"
            },
            {
              "id": 5,
              "name": "BBM_SftpPollerCreateOrder"
            },
            {
              "id": 6,
              "name": "BBM_SftpPollerCreateOrderJob"
            }
          ],
          "config-items": [
            {
              "name": "create-workflow-order-mapper",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-version",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-order-status",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-duplicate-handling",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-connection-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-mask",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-mask-regex",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-regex-options",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-file-connection",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-file-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-file-temp-template",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-minage",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-encoding",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-delete-file",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-move-target",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-file-connection",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-name-template",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-workflow-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-workflow-version",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-order-mapper",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-output-data",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-interval-secs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-staticdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-sensitivedata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-dynamicdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-tempdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-external-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-order-keys",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-specific-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-global-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-parent-workflow-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-priority",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-scheduled",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-staticdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-sensitivedata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-dynamicdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-tempdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-external-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-order-keys",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-specific-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-global-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-parent-workflow-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-priority",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-scheduled",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrderJob",
                "interface-version": "1.0"
              }
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 127"
    }
  ],
  "step": [
    {
      "request_id": "q0XTOlpMC8AMWs3",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 227,
          "type": "step",
          "lang": "qore",
          "name": "Issue3233Step2",
          "display_name": "Issue3233 Step2",
          "desc": "Simple worklfow step example",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "config-items": [
            {
              "config_group": "Default",
              "type": "hash",
              "default_value": {
                "step_test_1": 1,
                "step_test_2": [1, 2],
                "step_test_3": {
                  "step_sub_test_1": "step_test_value_1"
                }
              },
              "strictly_local": true,
              "default_value_true_type": "hash"
            },
            {
              "config_group": "testGroup",
              "type": "*bool"
            },
            {
              "config_group": "Default",
              "type": "int",
              "default_value": 22,
              "allowed_values": [22, 213],
              "default_value_true_type": "int"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 227"
    },
    {
      "request_id": "kUALDcAA3Iw2BDE",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 223,
          "type": "step",
          "lang": "qore",
          "name": "Issue3215Step",
          "display_name": "Issue3215 Step",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "config-items": [
            {
              "config_group": "Default",
              "type": "hash",
              "default_value": {
                "step_test_1": 1,
                "step_test_2": [1, 2],
                "step_test_3": {
                  "step_sub_test_1": "step_test_value_1"
                }
              },
              "strictly_local": true,
              "default_value_true_type": "hash"
            },
            {
              "config_group": "Default",
              "type": "hash",
              "default_value": {
                "step_test_1": 1,
                "step_test_2": "asd",
                "step_test_3": [1, 2],
                "step_test_4": {
                  "step_sub_test_1": "step_test_value_1"
                }
              },
              "default_value_true_type": "hash"
            },
            {
              "config_group": "testGroup",
              "type": "list",
              "default_value": [
                "step_test_value_1",
                "step_test_value_2",
                "step_test_value_3"
              ],
              "default_value_true_type": "list"
            },
            {
              "config_group": "Default",
              "type": "*date"
            },
            {
              "config_group": "testGroup",
              "type": "*bool"
            },
            {
              "config_group": "Default",
              "type": "float",
              "default_value": 2.2,
              "allowed_values": [2.2, 3.33, 213.1],
              "default_value_true_type": "float"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 223"
    },
    {
      "request_id": "gV4MxHVT0zlxN6X",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 90,
          "type": "step",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass ExampleSub2Step2 inherits QorusAsyncStep {\n    primary() {\n        skipAsyncStep();\n    }\n}\n",
          "name": "ExampleSub2Step2",
          "display_name": "Example Sub2 Step2",
          "short_desc": "Example sub 2 step 2",
          "desc": "Example sub 2 step 2",
          "version": "1.0",
          "steptype": "ASYNC",
          "arraytype": "NONE",
          "class-name": "ExampleSub2Step2",
          "base-class-name": "QorusAsyncStep",
          "queue": "example-step-1"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 90"
    },
    {
      "request_id": "l7uIjSfa02s3Dm7",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 179,
          "type": "step",
          "lang": "qore",
          "name": "r10",
          "display_name": "R10",
          "desc": "ref-test workflow test function",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "SERIES",
          "author": ["Qore Technologies, sro"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 179"
    },
    {
      "request_id": "MH0bDGN38gtJst7",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 69,
          "type": "step",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass FsmRetryTestStep inherits QorusNormalStep {\n    primary() {\n        *hash<auto> dd = getDynamicData();\n        if (!dd.run) {\n            updateDynamicData({\"run\": True});\n            stepError(\"RETRY-ERROR\", \"retry\", 1ms);\n            return;\n        }\n        logInfo(\"error already thrown\");\n    }\n}\n",
          "name": "FsmRetryTestStep",
          "display_name": "Fsm Retry Test Step",
          "short_desc": "FSM Retry Test Step",
          "desc": "FSM Retry Test Step",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."],
          "class-name": "FsmRetryTestStep",
          "base-class-name": "QorusNormalStep",
          "fsm": [
            {
              "name": "fsm-retry-test",
              "triggers": [
                {
                  "method": "validation"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 69"
    },
    {
      "request_id": "JlC1ittTkKgpTXZ",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 49,
          "type": "step",
          "lang": "qore",
          "name": "telco_suspend_account",
          "display_name": "Telco Suspend Account",
          "short_desc": "suspend customer account",
          "desc": "suspend customer account",
          "version": "1.0",
          "steptype": "SUBWORKFLOW",
          "arraytype": "SERIES",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 49"
    },
    {
      "request_id": "RR5XcofhFGDQbIB",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 207,
          "type": "step",
          "lang": "qore",
          "name": "blocked_step_1",
          "display_name": "Blocked Step 1",
          "desc": "blocked function 1",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, sro"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 207"
    },
    {
      "request_id": "krj0tF9CF9qgN5H",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 34,
          "type": "step",
          "lang": "qore",
          "name": "telco_update_crm_resume_service",
          "display_name": "Telco Update Crm Resume Service",
          "short_desc": "update the CRM system on the status of the service suspension action",
          "desc": "update the CRM system on the status of the service suspension action",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 34"
    },
    {
      "request_id": "HLKrmiYfN1e7clm",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 35,
          "type": "step",
          "lang": "qore",
          "name": "telco_retire_billing_account",
          "display_name": "Telco Retire Billing Account",
          "short_desc": "retire the billing account",
          "desc": "retire the billing account",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 35"
    },
    {
      "request_id": "xKUtBGNp8rf5i6Y",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 165,
          "type": "step",
          "lang": "qore",
          "name": "qore-dev-step-6",
          "display_name": "Qore Dev Step 6",
          "desc": "Qore test step class",
          "version": "1.0",
          "steptype": "ASYNC",
          "arraytype": "SERIES",
          "queue": "qore-class-test"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 165"
    }
  ],
  "service": [
    {
      "request_id": "XJ2gcnNgyBgJTHW",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 98,
          "type": "service",
          "desc": "simple SOAP test service",
          "lang": "qore",
          "servicetype": "USER",
          "name": "simple",
          "display_name": "Simple",
          "short_desc": "simple SOAP test service",
          "version": "1.0",
          "autostart": false,
          "remote": false,
          "author": ["Qore Technologies, sro"],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "getCompanyInfo",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "setCompanyLogo",
              "author": "Qore Technologies, sro"
            }
          ],
          "groups": ["test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 98"
    },
    {
      "request_id": "AD47ZVgzcHShUGX",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 56,
          "type": "service",
          "desc": "help service for LoggerRestInterfaceTest unit test",
          "lang": "qore",
          "servicetype": "USER",
          "name": "test-logger-service",
          "display_name": "Test Logger Service",
          "short_desc": "help service for LoggerRestInterfaceTest unit test",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Taras Petrychkovych (Qore Technologies)"],
          "methods": [
            {
              "name": "init",
              "author": "Taras Petrychkovych (Qore Technologies)"
            }
          ],
          "groups": ["test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 56"
    },
    {
      "request_id": "m5TH69ZcmTgq2wu",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 215,
          "type": "service",
          "desc": "Discord bot for Qorus Discord Access",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\n%requires DiscordDataProvider\n\nclass DiscordBot inherits QorusService {\n    public {\n        static Logger logger;\n        # REST client for the bot\n        static DiscordRestClient rest;\n    }\n\n    private {\n        DiscordWebSocketApiDataEventSource ws;\n    }\n\n    init() {\n        logger = new Logger(\"discord-bot\", LoggerLevel::getLevelInfo());\n        logger.addAppender(new QorusAppender());\n\n        rest = new DiscordRestClient({\n            \"token\": UserApi::getConfigItemValue(\"discord-bot-token\"),\n            \"token_type\": \"Bot\",\n            \"oauth2_grant_type\": NOTHING,\n        });\n\n        ws = new DiscordWebSocketApiDataEventSource();\n    }\n\n    hash<auto> info() {\n        return hash(ws{\"connmap\", \"guildmap\", \"channelmap\", \"dmmap\",} + {\n            \"users\": keys ws.usermap,\n            \"discord\": ws.discord.getConnectionInfo(),\n        });\n    }\n\n    string setLogLevel(string level) {\n        logger.setLevel(level);\n        return \"OK\";\n    }\n\n    bool reconnect() {\n        return ws.reconnect();\n    }\n}\n\nclass DiscordWebSocketConnection inherits BBM_WebSocketServiceDataEventSourceConnection {\n    constructor(hash<auto> cx, DiscordWebSocketHandler handler)\n            : BBM_WebSocketServiceDataEventSourceConnection(cx, handler) {\n    }\n\n    softstring getId() {\n        return cx.id;\n    }\n}\n\nclass DiscordWebSocketHandler inherits BBM_WebSocketServiceDataEventSourceHandler {\n    constructor(DiscordWebSocketApiDataEventSource service)\n            : BBM_WebSocketServiceDataEventSourceHandler(service) {\n    }\n\n    #! called when a connection is established\n    DiscordWebSocketConnection getConnectionImpl(hash<auto> cx, hash<auto> hdr, string cid) {\n        return new DiscordWebSocketConnection(cx, self);\n    }\n\n    #! called when the connection terminates\n    private deregisterConnectionImpl(DiscordWebSocketConnection wsc) {\n        # unsubscribe from all active channels\n        DiscordWebSocketApiDataEventSource::ws.unsubscribeAll(wsc.getId());\n        BBM_WebSocketServiceDataEventSourceHandler::deregisterConnectionImpl(wsc);\n    }\n}\n\nclass DiscordWebSocketApiDataEventSource inherits BBM_WebSocketServiceDataEventSource, DataProvider::Observer {\n    public {\n        # gateway event source\n        DiscordGatewayDataProvider discord;\n\n        # user map: user ID -> user info\n        hash<string, hash<UserInfo>> usermap;\n\n        # connection map: connection ID -> connection info\n        hash<string, hash<ConnInfo>> connmap;\n\n        # channel map: guild -> channel -> connection ID -> True\n        hash<string, hash<string, hash<string, bool>>> channelmap;\n\n        # guild map: guild -> connection ID -> True\n        hash<string, hash<string, bool>> guildmap;\n\n        # dmmap: username -> connection ID -> True\n        hash<string, hash<string, bool>> dmmap;\n\n        # guild channels: guild ID -> channel ID -> channel name\n        hash<string, hash<string, string>> guild_channel_ids;\n\n        # guild channels: guild ID -> channel name -> channel ID\n        hash<string, hash<string, string>> guild_channel_names;\n\n        # Mutex\n        Mutex lck();\n\n        # guild info condition hash, accessed only in lck: guild ID -> Condition\n        hash<string, Condition> gcond;\n\n        # guild info waiting hash, accessed only in lck: guild ID -> waiting\n        hash<string, int> gwaiting;\n\n        # user info condition hash, accessed only in lck: user ID -> Condition\n        hash<string, Condition> ucond;\n\n        # user info waiting hash, accessed only in lck: user ID -> waiting\n        hash<string, int> uwaiting;\n\n        static DiscordWebSocketApiDataEventSource ws;\n\n        # Discord gateway intents to capture messages\n        const GatewayIntents = DI_GUILD_MESSAGES | DI_DIRECT_MESSAGES | DI_MESSAGE_CONTENT;\n\n        const RetrySet = {\n            \"SOCKET-SSL-ERROR\": True,\n            \"SOCKET-CLOSED\": True,\n        };\n\n        const MaxIoRetries = 5;\n\n        # Channel categories to ignore\n        const IgnoreTypeMap = {\n            DCT_GUILD_VOICE: True,\n            DCT_GUILD_CATEGORY: True,\n            DCT_GUILD_STAGE_VOICE: True,\n        };\n    }\n\n    constructor() {\n        DiscordWebSocketApiDataEventSource::ws := self;\n\n        registerObserver(new WebSocketApiObserver(self));\n\n        discord = new DiscordGatewayDataProvider({\n            \"token\": UserApi::getConfigItemValue(\"discord-bot-token\"),\n            \"intents\": GatewayIntents,\n        });\n        discord.setLogger(DiscordBot::logger);\n        discord.registerObserver(self);\n        discord.observersReady();\n    }\n\n    bool reconnect() {\n        return discord.reconnect();\n    }\n\n    #! This method is called when a Discord event is raised\n    /**\n        @param event_id unique ID identifying an event type or class\n        @param data_ the data generated by the Observable event source\n    */\n    update(string event_id, hash<auto> data_) {\n        UserApi::logDebug(\"got event %y: %y\", event_id, data_);\n\n        if (event_id == EVENT_MESSAGE_CREATE) {\n            UserApi::logDebug(\"watched guilds: %y watched channels: %y\", guildmap, channelmap);\n\n            # check if we have a guild message\n            if (*string guild_id = data_.d.guild_id) {\n                UserApi::logDebug(\"dispatching to watchers of guild %y (%y) channel %y (%y))\", guild_id,\n                    keys guildmap{guild_id}, data_.d.channel_id, keys channelmap{guild_id}{data_.d.channel_id});\n\n                # dispatch to all channel watchers\n                map dispatch(event_id, data_, $1), keys channelmap{guild_id}{data_.d.channel_id};\n                # dispatch to all guild watchers\n                map dispatch(event_id, data_, $1), keys guildmap{guild_id};\n            } else {\n                UserApi::logInfo(\"ignoring DM\");\n                # TBA\n            }\n        } else {\n            UserApi::logDebug(\"ignoring event %y (!= %y)\", event_id, EVENT_MESSAGE_CREATE);\n        }\n    }\n\n    unsubscribeAll(string conn) {\n        *hash<ConnInfo> conninfo = remove connmap{conn};\n        if (!conninfo) {\n            UserApi::logInfo(\"connection %y closed\", conn);\n            return;\n        }\n\n        foreach hash<auto> i in (conninfo.channels.pairIterator()) {\n            map stopChannel(i.key, $1, conn), keys i.value;\n        }\n\n        map stopGuild($1, conn), keys conninfo.guilds;\n\n        if (conninfo.dm) {\n            stopDm(conninfo.userid, conn);\n        }\n        UserApi::logInfo(\"connection %y: all channels unsubscribed\", conn);\n    }\n\n    private dispatch(string event_id, hash<auto> data_, softint cid) {\n        try {\n            sendMessage(<WebSocketSendEventInfo>{\n                \"cid\": cid,\n                \"msg\": {\n                    \"reqid\": -1,\n                    \"type\": \"event\",\n                    \"event-type\": event_id,\n                    \"event\": data_,\n                },\n            });\n        } catch (hash<ExceptionInfo> ex) {\n            UserApi::logError(\"failed to dispatch event to connection %d: %s\", cid,\n                get_exception_string(ex));\n        }\n    }\n\n    #! Stops listening on a guild channel\n    stopChannel(string guild, string channel, string conn) {\n        remove channelmap{guild}{channel}{conn};\n        if (!channelmap{guild}{channel}) {\n            remove channelmap{guild}{channel};\n            if (!channelmap{guild}) {\n                remove channelmap{guild};\n            }\n        }\n    }\n\n    #! Stops listening for all messages in a guild\n    stopGuild(string guild, string conn) {\n        remove guildmap{guild}{conn};\n        if (!guildmap{guild}) {\n            remove guildmap{guild};\n        }\n    }\n\n    #! Stops listening to direct messages\n    stopDm(string id, string conn) {\n        remove dmmap{id}{conn};\n        if (!dmmap{id}) {\n            remove dmmap{id};\n        }\n    }\n\n    checkGuildInfo(softstring id) {\n        if (guild_channel_ids{id}) {\n            return;\n        }\n        lck.lock();\n        on_exit lck.unlock();\n\n        while (*Condition cond = gcond{id}) {\n            ++gwaiting{id};\n            cond.wait(lck);\n            --gwaiting{id};\n        }\n\n        # check again\n        if (guild_channel_ids{id}) {\n            return;\n        }\n\n        gcond{id} = new Condition();\n        on_exit {\n            if (gwaiting{id}) {\n                gcond{id}.signal();\n            }\n            remove gcond{id};\n        }\n\n        # run the REST call unlocked\n        lck.unlock();\n        on_exit lck.lock();\n\n        hash<auto> info;\n        hash<auto> res;\n        try {\n            res = DiscordWebSocketApiDataEventSource::doRestCommand(NOTHING, DiscordBot::rest, \"GET\",\n                \"guilds/\" + id + \"/channels\", NOTHING, \\info);\n\n            # clear info in case a non-REST-related error is subsequently raised\n            remove info;\n        } catch (hash<ExceptionInfo> ex) {\n            string err = sprintf(\"error retrieving info for guild ID %y\", id);\n            if (info) {\n                err += sprintf(\": %y returned from %y\", info.\"response-uri\", info.\"request-uri\");\n                if (res) {\n                    err += sprintf(\", response body: %y\", res.body);\n                }\n            }\n            logError(\"%s\", err);\n            return;\n        }\n\n        logInfo(\"guild %s has the following channels: %y\", id, (map $1{\"id\", \"name\"}, res.body));\n\n        # create channel maps for the guilds\n        map guild_channel_ids{id}{$1.id} = $1.name, res.body, !IgnoreTypeMap{$1.type};\n        map guild_channel_names{id}{$1.name} = $1.id, res.body, !IgnoreTypeMap{$1.type};\n    }\n\n    # Caches user info\n    hash<UserInfo> cacheUserInfo(DiscordRestClient rest, hash<auto> res, reference<hash<auto>> info) {\n        hash<auto> uinfo = res.body;\n\n        lck.lock();\n        on_exit lck.unlock();\n\n        while (*Condition cond = ucond{uinfo.id}) {\n            ++uwaiting{uinfo.id};\n            cond.wait(lck);\n            --uwaiting{uinfo.id};\n        }\n\n        # check again\n        if (usermap{uinfo.id}) {\n            return usermap{uinfo.id};\n        }\n\n        ucond{uinfo.id} = new Condition();\n        on_exit {\n            if (uwaiting{uinfo.id}) {\n                ucond{uinfo.id}.signal();\n            }\n            remove ucond{uinfo.id};\n        }\n\n        hash<UserInfo> userinfo = <UserInfo>{\n            \"info\": uinfo,\n            \"ratelimit\": map {$1.key: $1.value}, res.pairIterator(), $1.key =~ /^x-ratelimit-/,\n        };\n        UserApi::logInfo(\"set ratelimit for user %s (id %s): %y\", userinfo.info.username,\n            userinfo.info.id, userinfo.ratelimit);\n\n        # run the REST call unlocked\n        lck.unlock();\n        on_exit lck.lock();\n\n        hash<auto> res = DiscordWebSocketApiDataEventSource::doRestCommand(\\userinfo, rest, \"GET\", \"users/@me/guilds\",\n            NOTHING, \\info);\n        list<auto> guilds = res.body;\n\n        # clear info in case a non-REST-related error is subsequently raised\n        remove info;\n\n        # get info on guilds accessible to the user\n        userinfo.guilds_by_name = cast<hash<string, string>>(map {$1.name: $1.id}, guilds);\n        userinfo.guilds_by_id = cast<hash<string, string>>(map {$1.id: $1.name}, guilds);\n\n        return usermap{uinfo.id} = userinfo;\n    }\n\n    #! Returns the HTTP handler for the service\n    private AbstractServiceHttpHandler getHandlerImpl() {\n        return new DiscordWebSocketHandler(self);\n    }\n\n    static hash<auto> doRestCommand(*reference<hash<UserInfo>> userinfo, DiscordRestClient rest, string method,\n            string path, auto body, reference<hash<auto>> info) {\n        int retries = 0;\n        while (True) {\n            try {\n                if (userinfo.ratelimit.\"x-ratelimit-remaining\" == \"0\"\n                    && (*softfloat r = userinfo.ratelimit.\"x-ratelimit-reset\")) {\n                    int lt = r.toInt(); softint us = (r - lt) * 1000000;\n                    date reset = localtime(lt, us);\n                    date diff = reset - now_us();\n                    # do something if the rate limit expiry time is in the future\n                    if (diff > 0s) {\n                        if (diff > 1m) {\n                            throw \"RATE-LIMIT-ERROR\", sprintf(\"the reset time: %y is more than 1 minute in the \"\n                                \"future (%y)\", reset, diff);\n                        }\n                        UserApi::logInfo(\"RATE LIMIT: connection for user %s (id %s) sleeping for: %y\",\n                            userinfo.info.username, userinfo.info.id, diff);\n                        ServiceApi::usleep(diff);\n                    }\n                }\n                UserApi::logInfo(\"REST %y %y (%y) body: %y\", method, rest.getURL(), path, body);\n                hash<auto> res = rest.doRequest(method, path, body, \\info);\n                if (userinfo && res.\"x-ratelimit-remaining\") {\n                    userinfo.ratelimit = map {$1.key: $1.value}, res.pairIterator(), $1.key =~ /^x-ratelimit-/;\n                    UserApi::logInfo(\"updated ratelimit for user %s (id %s): %y\", userinfo.info.username,\n                        userinfo.info.id, userinfo.ratelimit);\n                }\n                return res;\n            } catch (hash<ExceptionInfo> ex) {\n                # handle rate limit errors immediately\n                if (info.\"response-headers\".status_code == 429\n                    || (userinfo && info.\"response-headers\".\"x-ratelimit-remaining\")) {\n                    if (!userinfo) {\n                        userinfo = <UserInfo>{};\n                    }\n                    userinfo.ratelimit = map {$1.key: $1.value}, info.\"response-headers\".pairIterator(),\n                        $1.key =~ /^x-ratelimit-/;\n                    if (info.\"response-headers\".status_code == 429) {\n                        UserApi::logInfo(\"retying after ratelimit error: %s: %s\", ex.err, ex.desc,\n                            userinfo.ratelimit);\n                        continue;\n                    } else {\n                        UserApi::logInfo(\"updated ratelimit for user %s (id %s): %y\", userinfo.info.username,\n                            userinfo.info.id, userinfo.ratelimit);\n                    }\n                }\n                if (DiscordWebSocketApiDataEventSource::retry(ex, \\retries)) {\n                    continue;\n                }\n                UserApi::logError(\"%s\", get_exception_string(ex));\n                rethrow;\n            }\n        }\n    }\n\n    private static bool retry(hash<ExceptionInfo> ex, reference<int> retries) {\n        if (RetrySet{ex.err}) {\n            if (++retries == MaxIoRetries) {\n                UserApi::logError(\"maximum retries exceeded (%d)\", retries);\n                return False;\n            }\n            UserApi::logWarn(\"technical error making REST call: %s: %s; retrying\", ex.err, ex.desc);\n            return True;\n        }\n        return False;\n    }\n}\n\n# Cached user information\nhashdecl UserInfo {\n    # Discord REST client\n    DiscordRestClient rest;\n\n    # user info hash\n    hash<auto> info;\n\n    # guild name -> guild ID\n    hash<string, string> guilds_by_name;\n\n    # guild ID -> guild name\n    hash<string, string> guilds_by_id;\n\n    # ratelimit information\n    hash<auto> ratelimit;\n}\n\n# Connection information\nhashdecl ConnInfo {\n    # user ID: key to usermap -> UserInfo\n    string userid;\n\n    # map of channels watched by this connection: guild -> channel -> True\n    hash<string, hash<string, bool>> channels;\n\n    # map of guilds watched by this connection: guild -> True\n    hash<string, bool> guilds;\n\n    # are DMs watched?\n    bool dm;\n}\n\nclass WebSocketApiObserver inherits DataProvider::Observer {\n    private {\n        DiscordWebSocketApiDataEventSource service;\n\n        hash<auto> cmdmap;\n\n        #! Args for the REST client\n        const RestKeys = map {$1: True}, keys DiscordRestConnection::ConnectionScheme.options;\n    }\n\n    constructor(DiscordWebSocketApiDataEventSource service) {\n        self.service := service;\n\n        cmdmap = {\n            \"GUILD-CHANNELS\": \\guildChannels(),\n            \"INFO\": \\info(),\n            \"REGISTER\": \\register(),\n            \"WATCH\": \\watch(),\n            \"GET-EXAMPLE-MESSAGE\": \\getExampleMessage(),\n            \"SEND\": \\send(),\n            \"STOP\": \\stop(),\n        };\n    }\n\n    update(string event_id, hash<auto> data_) {\n        UserApi::logDebug(\"ws event id: %y data: %y\", event_id, data_);\n        softstring conn = data_.cx.id;\n        if (event_id == BBM_WebSocketServiceDataEventSourceConnection::ConnectionClosedId) {\n            service.unsubscribeAll(conn);\n            return;\n        }\n        if (event_id == BBM_WebSocketServiceDataEventSourceConnection::ConnectionEventId) {\n            handleEvent(conn, data_);\n        }\n    }\n\n    private handleEvent(string conn, hash<auto> data_) {\n        if (data_.msg.typeCode() != NT_HASH) {\n            error(data_, \"missing or invalid API data; got type %y; expecting \\\"hash\\\" with a \\\"cmd\\\" key\",\n                data_.msg.fullType());\n            return;\n        }\n        if (data_.msg.cmd.typeCode() != NT_STRING) {\n            error(data_, \"missing or invalid cmd (got type %y; expecting \\\"string\\\")\", data_.msg.cmd.fullType());\n            return;\n        }\n        *code action = cmdmap{data_.msg.cmd};\n        if (!action) {\n            error(data_, \"invalid cmd %y; expecting one of: %y\", data_.msg.cmd, keys cmdmap);\n            return;\n        }\n        try {\n            action(conn, data_);\n        } catch (hash<ExceptionInfo> ex) {\n            error(data_, ex, \"error executing API %y\", data_.msg.cmd);\n        }\n    }\n\n    private register(string conn, hash<auto> data_) {\n        hash<auto> args = checkArgs(data_.msg);\n        hash<auto> info;\n        try {\n            hash<ConnInfo> conninfo = registerConnection(conn, args, \\info);\n            hash<UserInfo> userinfo = service.usermap{conninfo.userid};\n            string msg = sprintf(\"user %y (id %s) registered with access to guilds: %y\", userinfo.info.username,\n                userinfo.info.id, userinfo.guilds_by_id);\n            UserApi::logInfo(\"connection %y: %s\", conn, msg);\n            sendMessage(\"info\", data_, {\n                \"info\": msg,\n            });\n        } catch (hash<ExceptionInfo> ex) {\n            string err = \"error starting watch\";\n            if (info) {\n                err += sprintf(\": %y returned from %y\", info.\"response-uri\", info.\"request-uri\");\n            }\n            error(data_, ex, \"%s\", err);\n            return;\n        }\n    }\n\n    private *hash<auto> checkGuild(auto conninfo, hash<UserInfo> userinfo, hash<auto> args, *bool required) {\n        hash<auto> guild_info;\n        if (args.guild_id) {\n            guild_info.guild_name = userinfo.guilds_by_id{args.guild_id};\n            if (!guild_info.guild_name.val()) {\n                throw \"GUILD-ERROR\", sprintf(\"user %y (id %s) cannot access guild ID %y; accessible guilds: %y\",\n                    userinfo.info.username, conninfo.userid, args.guild_id, userinfo.guilds_by_id);\n            }\n            guild_info.guild_id = args.guild_id.toString();\n        } else if (args.guild_name) {\n            *string id = userinfo.guilds_by_name{args.guild_name};\n            if (!id) {\n                throw \"GUILD-ERROR\", sprintf(\"user %y (id %s) cannot access guild %y; accessible guilds: %y\",\n                    userinfo.info.username, conninfo.userid, args.guild_name, userinfo.guilds_by_name);\n            }\n            guild_info.guild_name = args.guild_name;\n            guild_info.guild_id = id;\n        }\n        if (!guild_info && required) {\n            throw \"GUILD-ERROR\", sprintf(\"missing guild_id / guild_name in args; got: %y\", args);\n        }\n        return guild_info;\n    }\n\n    private checkChannel(reference<hash<auto>> args, hash<auto> guild_info, auto conninfo, *bool required) {\n        if (args.channel_name) {\n            service.checkGuildInfo(guild_info.guild_id);\n            if (!exists (args.channel_id = service.guild_channel_names{guild_info.guild_id}{args.channel_name})) {\n                throw \"CHANNEL-ERROR\", sprintf(\"guild_id %y has no channel named %y; known channels: %y\",\n                    guild_info.guild_id, args.channel_name,\n                    keys service.guild_channel_names{guild_info.guild_id});\n            }\n        } else if (args.channel_id) {\n            service.checkGuildInfo(guild_info.guild_id);\n            args.channel_name = service.guild_channel_ids{guild_info.guild_id}{args.channel_id};\n            if (!exists args.channel_name) {\n                throw \"CHANNEL-ERROR\", sprintf(\"guild_id %y has no channel with ID %y; known channels: %y\",\n                    guild_info.guild_id, args.channel_id, service.guild_channel_ids{guild_info.guild_id});\n            }\n        }\n        if (required && !args.channel_id && !args.channel_name) {\n            throw \"CHANNEL-ERROR\", sprintf(\"missing channel_id / channel_name in args; got: %y\", args);\n        }\n    }\n\n    # returns an example message on the given channel\n    private getExampleMessage(string conn, hash<auto> data_) {\n        hash<auto> args = checkArgs(data_.msg);\n\n        auto conninfo = getConnection(conn, args);\n        hash<UserInfo> userinfo = service.usermap{conninfo.userid};\n\n        # verify that the guild is accessible\n        hash<auto> guild_info = checkGuild(conninfo, userinfo, args, True);\n        checkChannel(\\args, guild_info, conninfo, True);\n\n        # must use the bot token\n        DiscordRestClient rest = getDiscordClient({\n            \"token\": UserApi::getConfigItemValue(\"discord-bot-token\"),\n            \"token_type\": \"Bot\",\n            \"oauth2_grant_type\": NOTHING,\n        });\n\n        # get user info\n        hash<auto> info;\n        hash<auto> msg = DiscordWebSocketApiDataEventSource::doRestCommand(NOTHING, rest, \"GET\", \"channels/\"\n            + args.channel_id + \"/messages?limit=1\", NOTHING, \\info).body[0];\n\n        UserApi::logInfo(\"connection %y: %s\", conn, msg);\n        sendMessage(\"info\", data_, {\n            \"info\": msg,\n        });\n    }\n\n    private watch(string conn, hash<auto> data_) {\n        hash<auto> args = checkArgs(data_.msg);\n\n        auto conninfo = getConnection(conn, args);\n        hash<UserInfo> userinfo = service.usermap{conninfo.userid};\n\n        # verify that the guild is accessible\n        hash<auto> guild_info = checkGuild(conninfo, userinfo, args, True);\n        checkChannel(\\args, guild_info, conninfo);\n\n        string msg = sprintf(\"user %y (id %s) \", userinfo.info.username, conninfo.userid);\n\n        if (args.channel_id) {\n            if (service.channelmap{guild_info.guild_id}{args.channel_id}{conn}) {\n                msg += sprintf(\"already watching messages in guild %y (id %s) channel %s\", guild_info.guild_name,\n                    guild_info.guild_id, args.channel_id);\n            } else {\n                service.channelmap{guild_info.guild_id}{args.channel_id}{conn} = True;\n                conninfo.channels{guild_info.guild_id}{args.channel_id} = True;\n                msg += sprintf(\"watching messages in guild %y (id %s) channel %y (id %s)\", guild_info.guild_name,\n                    guild_info.guild_id, args.channel_name, args.channel_id);\n            }\n        } else {\n            if (service.guildmap{guild_info.guild_id}{conn}) {\n                msg += sprintf(\"already watching all messages in guild %y (id %s)\", guild_info.guild_name,\n                    guild_info.guild_id);\n            } else {\n                service.guildmap{guild_info.guild_id}{conn} = True;\n                conninfo.guilds{guild_info.guild_id} = True;\n                msg += sprintf(\"watching all messages in guild %y (id %s)\", guild_info.guild_name,\n                    guild_info.guild_id);\n            }\n        }\n\n        UserApi::logInfo(\"connection %y: %s\", conn, msg);\n        sendMessage(\"info\", data_, {\n            \"info\": msg,\n        });\n    }\n\n    # Gets user info and info on accessible guilds\n    private reference<hash<ConnInfo>> getConnection(string conn, hash<auto> args) {\n        if (!service.connmap{conn}) {\n            throw \"REGISTER-ERROR\", sprintf(\"connection %y is not yet registered; call REGISTER first\", conn);\n        }\n        return \\service.connmap{conn};\n    }\n\n    # Gets user info and info on accessible guilds\n    private hash<ConnInfo> registerConnection(string conn, hash<auto> args, reference<hash<auto>> info) {\n        if (service.connmap{conn}) {\n            throw \"REGISTER-ERROR\", sprintf(\"connection %y is already registered\", conn);\n        }\n\n        # cache user info if necessary\n        DiscordRestClient rest = getDiscordClient(args);\n\n        # get user info\n        hash<auto> res = DiscordWebSocketApiDataEventSource::doRestCommand(NOTHING, rest, \"GET\", \"users/@me\",\n            NOTHING, \\info);\n\n        # clear info in case a non-REST-related error is subsequently raised\n        remove info;\n\n        hash<UserInfo> userinfo = service.cacheUserInfo(rest, res, \\info);\n        hash<ConnInfo> conninfo = <ConnInfo>{\n            \"userid\": userinfo.info.id,\n        };\n        return service.connmap{conn} = conninfo;\n    }\n\n    static DiscordRestClient getDiscordClient(hash<auto> args) {\n        return new DiscordRestClient(args{keys RestKeys} + {\"logger\": DiscordBot::logger});\n    }\n\n    private hash<auto> checkArgs(hash<auto> msg) {\n        if (msg.args.typeCode() != NT_HASH) {\n            throw \"WATCH-ERROR\", sprintf(\"missing or invalid \\\"args\\\" in message; got type %y but expecting \\\"hash\\\" \"\n                \"(value: %y)\", msg.args.fullType(), msg.args);\n        }\n        return msg.args;\n    }\n\n    private checkKeys(hash<auto> args, list<string> arg_keys) {\n        foreach string key in (arg_keys) {\n            if (args{key}.typeCode() != NT_STRING) {\n                throw \"WATCH-ERROR\", sprintf(\"missing required argument %y in the \\\"args\\\" hash (args: %y)\", key,\n                    args);\n            }\n        }\n    }\n\n    private stop(string conn, hash<auto> data_) {\n        hash<auto> args = checkArgs(data_.msg);\n\n        auto conninfo = getConnection(conn, args);\n        hash<UserInfo> userinfo = service.usermap{conninfo.userid};\n\n        string msg = sprintf(\"user %y (id %s) \", userinfo.info.username, conninfo.userid);\n        if (!service.connmap{conn}) {\n            msg += \"has no active connections\";\n        } else {\n            string guild_id;\n            string guild_name;\n            if (args.guild_id) {\n                guild_name = userinfo.guilds_by_id{args.guild_id};\n                if (!guild_name.val()) {\n                    throw \"STOP-ERROR\", sprintf(\"user %y (id %s) cannot access guild ID %y; accessible guilds: %y\",\n                        userinfo.info.username, conninfo.userid, args.guild_id, userinfo.guilds_by_id);\n                }\n                guild_id = args.guild_id;\n            } else if (args.guild_name) {\n                *string id = userinfo.guilds_by_name{args.guild_name};\n                if (!id) {\n                    throw \"STOP-ERROR\", sprintf(\"user %y (id %s) cannot access guild %y; accessible guilds: %y\",\n                        userinfo.info.username, conninfo.userid, args.guild_name, userinfo.guilds_by_name);\n                }\n                guild_name = args.guild_name;\n                guild_id = id;\n            }\n\n            if (guild_id) {\n                if (args.channel_name) {\n                    service.checkGuildInfo(guild_id);\n                    if (!exists (args.channel_id = service.guild_channel_names{guild_id}{args.channel_name})) {\n                        throw \"WATCH-ERROR\", sprintf(\"guild_id %y has no channel named %y; known channels: %y\", guild_id,\n                            args.channel_name, keys service.guild_channel_names{guild_id});\n                    }\n                }\n\n                if (args.channel_id) {\n                    if (!service.channelmap{guild_id}{args.channel_id}{conn}) {\n                        msg += sprintf(\"not watching messages in guild %y (id %s) channel %s\", guild_name, guild_id,\n                            args.channel_id);\n                    } else {\n                        service.stopChannel(guild_id, args.channel_id, conn);\n                        remove conninfo.channels{guild_id}{args.channel_id};\n                        msg += sprintf(\"stopped watching messages in guild %y (id %s) channel %s\", guild_name, guild_id,\n                            args.channel_id);\n                    }\n                } else {\n                    if (!service.guildmap{guild_id}{conn}) {\n                        msg += sprintf(\"not watching all messages in guild %y (id %s)\", guild_name, guild_id);\n                    } else {\n                        service.stopGuild(guild_id, conn);\n                        remove conninfo.guilds{guild_id};\n                        msg += sprintf(\"watching all messages in guild %y (id %s)\", guild_name, guild_id);\n                    }\n                }\n            } else {\n                if (!service.dmmap{conninfo.userid}{conn}) {\n                    msg += \"not watching direct message to user\";\n                } else {\n                    service.stopDm(conninfo.userid, conn);\n                    remove conninfo.dm;\n                    msg += \"stopped watching direct message to user\";\n                }\n            }\n        }\n\n        UserApi::logInfo(\"connection %y: %s\", conn, msg);\n        sendMessage(\"info\", data_, {\n            \"info\": msg,\n        });\n    }\n\n    private info(string conn, hash<auto> data_) {\n        hash<auto> info;\n        if (*hash<ConnInfo> ci = service.connmap{conn}) {\n            *hash<UserInfo> ui = service.usermap{ci.userid};\n            info = {\n                \"status\": \"OK\",\n            } + ci + {\n                \"guilds\": ui.guilds_by_name,\n            };\n        } else {\n            info = {\n                \"status\": \"not registered\",\n            };\n        }\n        sendMessage(\"info\", data_, info);\n    }\n\n    private guildChannels(string conn, hash<auto> data_) {\n        hash<auto> args = checkArgs(data_.msg);\n        if (!args.guild_id) {\n            throw \"GUILD-CHANNELS-ERROR\", sprintf(\"missing required argument \\\"guild_id\\\" in the \\\"args\\\" hash: %y\",\n                args);\n        }\n        hash<ConnInfo> ci = service.connmap{conn};\n        hash<UserInfo> ui = service.usermap{ci.userid};\n        if (!ui.guilds_by_id) {\n            throw \"GUILD-CHANNELS-ERROR\", sprintf(\"guild %y is not accessible to user %y (id %y)\", args.guild_id,\n                ui.info.username, ui.info.id);\n        }\n\n        service.checkGuildInfo(args.guild_id);\n        sendMessage(\"channels\", data_, {\n            \"channels\": service.guild_channel_names{args.guild_id},\n        });\n    }\n\n    private send(string conn, hash<auto> data_) {\n        hash<auto> args = checkArgs(data_.msg);\n        if (!args.guild_id) {\n            throw \"GUILD-CHANNELS-ERROR\", sprintf(\"missing required argument \\\"guild_id\\\" in the \\\"args\\\" hash: %y\",\n                args);\n        }\n        if (!args.channel_id) {\n            throw \"GUILD-CHANNELS-ERROR\", sprintf(\"missing required argument \\\"channel_id\\\" in the \\\"args\\\" hash: %y\",\n                args);\n        }\n        if (!args.\"data\") {\n            throw \"GUILD-CHANNELS-ERROR\", sprintf(\"missing required argument \\\"data\\\" in the \\\"args\\\" hash: %y\",\n                args);\n        }\n        hash<ConnInfo> ci = service.connmap{conn};\n        hash<UserInfo> ui = service.usermap{ci.userid};\n        if (!ui.guilds_by_id{args.guild_id}) {\n            throw \"GUILD-CHANNELS-ERROR\", sprintf(\"guild %y is not accessible to user %y (id %y)\", args.guild_id,\n                ui.info.username, ui.info.id);\n        }\n        if (!service.guild_channel_ids{args.guild_id}{args.channel_id}) {\n            throw \"GUILD-CHANNELS-ERROR\", sprintf(\"channel %y does not exist in guild %y\", args. channel_id,\n                args.guild_id);\n        }\n\n        hash<auto> info;\n        hash<auto> res;\n        try {\n            res = DiscordWebSocketApiDataEventSource::doRestCommand(NOTHING, DiscordBot::rest, \"POST\",\n                \"channels/\" + args.channel_id + \"/messages\", args.\"data\", \\info);\n\n            # clear info in case a non-REST-related error is subsequently raised\n            remove info;\n        } catch (hash<ExceptionInfo> ex) {\n            string err = sprintf(\"error send message on channel %y\", args.channel_id);\n            if (info) {\n                err += sprintf(\": %y returned from %y\", info.\"response-uri\", info.\"request-uri\");\n                if (res) {\n                    err += sprintf(\", response body: %y\", res.body);\n                }\n            }\n            UserApi::logError(\"%s\", err);\n            sendMessage(\"error\", data_, {\n                \"error\": err,\n            });\n            return;\n        }\n\n        UserApi::logInfo(\"sent message on channel %y: %y\", args.channel_id, args.\"data\");\n\n        sendMessage(\"info\", data_, {\n            \"info\": DiscordWebSocketClient::convertData(res.body),\n        });\n    }\n\n    private error(hash<auto> data_, hash<ExceptionInfo> ex, string fmt, ...) {\n        string err = vsprintf(fmt, argv);\n        # log full error message with backtrace in log\n        UserApi::logError(\"connection \\\"%s\\\" from %y: %s: %s\", data_.cx.id, data_.cx.\"peer-info\".hostname_desc, err,\n            get_exception_string(ex));\n        # return summarized error info on the WebSocket channel\n        err += sprintf(\": %s: %s\", ex.err, ex.desc);\n        sendMessage(\"error\", data_, {\n            \"error\": err,\n        });\n    }\n\n    private error(hash<auto> data_, string fmt, ...) {\n        string err = vsprintf(fmt, argv);\n        UserApi::logError(\"connection \\\"%s\\\" from %y: %s\", data_.cx.id, data_.cx.\"peer-info\".hostname_desc, err);\n        sendMessage(\"error\", data_, {\n            \"error\": err,\n        });\n    }\n\n    private sendMessage(string type, hash<auto> data_, hash<auto> msg) {\n        string reqid = data_.msg.id ?? \"n/a\";\n        service.sendMessage(<WebSocketSendEventInfo>{\n            \"cid\": data_.cx.id,\n            \"msg\": {\n                \"reqid\": reqid,\n                \"type\": type,\n            } + msg,\n        });\n    }\n}\n\npublic class QorusAppender inherits LoggerAppender {\n    constructor() : LoggerAppender(\"qorus\") {\n        open();\n    }\n\n    processEventImpl(int type, auto params) {\n        switch (type) {\n            case EVENT_LOG:\n                UserApi::logWithLevelArgs(params.level, \"%s\", params.msg);\n                break;\n        }\n    }\n\n    private auto serializeImpl(LoggerEvent event) {\n        return {\n            \"level\": event.getLevel().getValue(),\n            \"msg\": event.getMessage(),\n        };\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "DiscordBot",
          "servicetype": "USER",
          "name": "discord-bot",
          "display_name": "Discord Bot",
          "short_desc": "Discord bot for Qorus Discord Access",
          "version": "1.0",
          "autostart": true,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "info",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "setLogLevel",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "reconnect",
              "author": "Qore Technologies, s.r.o."
            }
          ],
          "groups": ["QORUS-API"],
          "classes": [
            {
              "id": 1,
              "name": "BBM_HttpServiceGenericBase"
            },
            {
              "id": 2,
              "name": "BBM_HttpAuthenticatorBase"
            },
            {
              "id": 3,
              "name": "BBM_CorsBase"
            },
            {
              "id": 4,
              "name": "BBM_WebSocketServiceBase"
            },
            {
              "id": 5,
              "name": "BBM_WebSocketServiceDataEventSource"
            }
          ],
          "config-items": [
            {
              "name": "discord-bot-token",
              "description": "The token for the Discord bot",
              "config_group": "Discord Bot Config",
              "type": "string",
              "sensitive": true,
              "value": "MTE2MTI4MDE3NDIyMjk5OTY2NA.Gss-x0.C6-RNKU5vkkoxIgWcw6ljJ7Wuv-PUo4-k3Ch9M"
            },
            {
              "name": "http-listener-bind-address",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-cert-location",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-cert-format",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-location",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-format",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-password",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-ssl-mode",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-accept-all-certs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-capture-client-certs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-allow-sharing",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "websockets-root-uri",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              },
              "value": "apps/ws/discord"
            },
            {
              "name": "websockets-auth-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              },
              "value": "permissive"
            },
            {
              "name": "websockets-cors-enable",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "websockets-cors-methods",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "websockets-cors-max-age",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "websockets-cors-headers",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "websockets-cors-credentials",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "websockets-auth-cookie",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "websockets-auth-redirect",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              }
            },
            {
              "name": "websockets-event-data",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_WebSocketServiceDataEventSource",
                "interface-version": "1.0"
              },
              "value": "yaml"
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 215"
    },
    {
      "request_id": "eHhTlQqaGuzOekV",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 105,
          "type": "service",
          "desc": "service thread test service",
          "lang": "qore",
          "servicetype": "USER",
          "name": "svc-thread-test",
          "display_name": "Svc Thread Test",
          "short_desc": "service thread test service",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, sro"],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "start_test",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "stop",
              "author": "Qore Technologies, sro"
            }
          ],
          "groups": ["test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 105"
    },
    {
      "request_id": "bSsHuonFPFh5unl",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 92,
          "type": "service",
          "desc": "multi-port multi-part SOAP regression test service",
          "lang": "qore",
          "servicetype": "USER",
          "name": "multi-soap",
          "display_name": "Multi Soap",
          "short_desc": "multi-port multi-part SOAP regression test service",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, sro"],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "Send",
              "author": "Qore Technologies, sro"
            }
          ],
          "groups": ["test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 92"
    },
    {
      "request_id": "vuxQXtCT8kQmSjJ",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 39,
          "type": "service",
          "desc": "Test for issue 3978 - to test transaction safety in FSMs",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3978 inherits QorusService {\n    public {\n        const Where = {\n            \"where\": {\n                \"col_1\": 1,\n            },\n        };\n    }\n\n    checkNoRow() {\n        AbstractTable t = getSqlTable(\"omquser\", \"test_table_1\");\n        *hash<auto> row = t.selectRow(Where);\n        if (row) {\n            throw \"ERROR\", sprintf(\"row exists: %y\", row);\n        }\n        logInfo(\"check no row: where: %y row: %y\", Where, row);\n    }\n\n    checkRow() {\n        AbstractTable t = getSqlTable(\"omquser\", \"test_table_1\");\n        *hash<auto> row = t.selectRow(Where);\n        logInfo(\"check row: where: %y row: %y\", Where, row);\n        if (!row) {\n            throw \"ERROR\", \"row does not exist\";\n        }\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "Issue3978",
          "servicetype": "USER",
          "name": "issue-3978",
          "display_name": "Issue 3978",
          "short_desc": "Test for issue 3978 - to test transaction safety in FSMs",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "checkNoRow",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "checkRow",
              "author": "Qore Technologies, s.r.o."
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 39"
    },
    {
      "request_id": "VbB9jFdnnj570mp",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 145,
          "type": "service",
          "desc": "test for the FTP BB job",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass MyFtpHandler inherits public AbstractFtpHandler {\n    constructor(string dir) : AbstractFtpHandler(dir, True) {\n    }\n}\n\nclass BbFtpTest inherits QorusService {\n    private {\n        softint port;\n    }\n\n    init() {\n        # get root directory\n        *string root = getConfigItemValue(\"ftp-server-root\");\n        if (!exists root) {\n            root = tmp_location() + DirSep + get_random_string();\n        }\n        MyFtpHandler handler(root);\n        {\n            auto bind = getConfigItemValue(\"ftp-server-bind\");\n            trim bind;\n            if ((int b = bind.toInt()) == bind) {\n                bind = b;\n            }\n            logInfo(\"using bind address: %y\", bind);\n            handler.addListener(bind);\n        }\n        bindFtp(handler);\n\n        foreach hash rh in (getServiceInfo().resources.iterator()) {\n            if (rh.type == \"FtpListener\" && rh.info.family == AF_INET) {\n                port = rh.info.port;\n                break;\n            }\n        }\n        if (!port) {\n            throw \"FTP-SERVER-ERROR\", sprintf(\"cannot determine listening port\");\n        }\n        logInfo(\"listening on IPv4 port %y\", port);\n    }\n\n    int getPort() {\n        return port;\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "BbFtpTest",
          "servicetype": "USER",
          "name": "bb-ftp-test",
          "display_name": "Bb Ftp Test",
          "short_desc": "test for the FTP BB job",
          "version": "1.0",
          "autostart": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "getPort",
              "author": "Qore Technologies, s.r.o."
            }
          ],
          "config-items": [
            {
              "name": "ftp-server-bind",
              "description": "FTP server listener bind argument; `\"0\"` means bind on a random port on all interfaces",
              "config_group": "FTP Server",
              "type": "string",
              "default_value": "0",
              "strictly_local": true
            },
            {
              "name": "ftp-server-root",
              "description": "The root directory of the FTP server; if not defined, then a random directory in the temporary directory will be created",
              "config_group": "FTP Server",
              "type": "*string",
              "strictly_local": true
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 145"
    },
    {
      "request_id": "5h8pfUXDryKJy3u",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 14,
          "type": "service",
          "desc": "Stateless FTP service test",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\n%requires FsUtil\n\nour hash<auto> stats;\nour string dir;\nbool rmdir;\n\nclass StatelessFtpTest inherits QorusService {\n    init() {\n        dir = ENV.OMQ_DIR + \"/user/stateless-ftp-test\";\n        if (!is_dir(dir)) {\n            mkdir_ex(dir, 0700, True);\n            rmdir = True;\n        }\n        MyFtpHandler handler(dir);\n        handler.addListener(0);\n        bindFtp(handler);\n    }\n\n    hash<auto> info() {\n        return stats;\n    }\n\n    stop() {\n        if (rmdir) {\n            logInfo(\"removing FTP tree: %y\", dir);\n            remove_tree(dir);\n        }\n    }\n\n    int port() {\n        hash<auto> res = getServiceInfo().resources;\n        foreach hash<auto> i in (res.pairIterator()) {\n            if (i.value.type == \"FtpListener\" && i.value.info.familystr == \"ipv4\") {\n                return i.value.info.port;\n            }\n        }\n\n        throw \"FTP-ERROR\", \"cannot determine FTP port\";\n    }\n\n    string test() {\n        return sprintf(\"%s:%d\", gethostname(), getpid());\n    }\n}\n\nclass MyFtpHandler inherits AbstractFtpHandler {\n    constructor(string dir) : AbstractFtpHandler(dir) {\n    }\n\n    *string authReceiveFile(string cwd, string orig, reference<string> path) {\n        UserApi::logInfo(\"authorizing receipt of file %s -> %s\", path, path + \".tmp\");\n        path += \".tmp\";\n    }\n\n    fileReceived(string path) {\n        ++stats.\"in\".files;\n        UserApi::logInfo(\"received file: dir: %y fn: %y\", dirname(path), basename(path));\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "StatelessFtpTest",
          "servicetype": "USER",
          "name": "stateless-ftp-test",
          "display_name": "Stateless Ftp Test",
          "short_desc": "Stateless FTP service test",
          "version": "1.0",
          "autostart": true,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "info",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "stop",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "port",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "test",
              "author": "Qore Technologies, s.r.o."
            }
          ],
          "groups": ["regression", "test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 14"
    },
    {
      "request_id": "0dbWWmnxg9JgzYq",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 30,
          "type": "service",
          "desc": "issue 3537 test service",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3537Test inherits QorusService {\n    hash<Issue3537> get(int num) {\n        return <Issue3537>{\n            \"code\": num,\n        };\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "Issue3537Test",
          "servicetype": "USER",
          "name": "issue-3537-test",
          "display_name": "Issue 3537 Test",
          "short_desc": "issue 3537 test service",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "get",
              "author": "Qore Technologies, s.r.o.",
              "internal": true
            }
          ],
          "groups": ["regression", "test"],
          "classes": [
            {
              "id": 1,
              "name": "Issue3537Shared"
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 30"
    },
    {
      "request_id": "janRO65eqKX1jV0",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 57,
          "type": "service",
          "desc": "generates responses for the \"async-test\" queue",
          "lang": "qore",
          "servicetype": "USER",
          "name": "async-test",
          "display_name": "Async Test",
          "short_desc": "generates responses for the \"async-test\" queue",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, sro"],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "start",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "stop",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "info",
              "author": "Qore Technologies, sro"
            }
          ],
          "groups": ["test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 57"
    }
  ],
  "queue": [
    {
      "request_id": "yKVS1qfWQc6ucNl",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 6,
          "type": "queue",
          "desc": "Java user interaction test asynchronous test queue",
          "name": "java-user-interaction-test-1",
          "display_name": "Java User Interaction Test 1",
          "short_desc": "Java user interaction test asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 6"
    },
    {
      "request_id": "blGak9abBkGples",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 4,
          "type": "queue",
          "desc": "Java asynchronous test queue",
          "name": "java-test",
          "display_name": "Java Test",
          "short_desc": "Java asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 4"
    },
    {
      "request_id": "YBgsbdBPG8ywGwG",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 8,
          "type": "queue",
          "desc": "asynchronous test queue for REF-TEST workflow",
          "name": "ref-test",
          "display_name": "Ref Test",
          "short_desc": "asynchronous test queue for REF-TEST workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 8"
    },
    {
      "request_id": "l0zhVnYpN50up9Q",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 15,
          "type": "queue",
          "desc": "Class workflow asynchronous test queue",
          "name": "issue3102queue",
          "display_name": "Issue3102queue",
          "short_desc": "Class workflow asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 15"
    },
    {
      "request_id": "kngyp1M7UI1kAvf",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 9,
          "type": "queue",
          "desc": "issue 2495 asynchronous test queue",
          "name": "issue-2495-test",
          "display_name": "Issue 2495 Test",
          "short_desc": "issue 2495 asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 9"
    },
    {
      "request_id": "PwRoveXR4M6D42J",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 3,
          "type": "queue",
          "desc": "Class workflow asynchronous test queue",
          "name": "qore-class-test",
          "display_name": "Qore Class Test",
          "short_desc": "Class workflow asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 3"
    },
    {
      "request_id": "2tRr9sWNoUt4oYu",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 12,
          "type": "queue",
          "desc": "wf-api asynchronous test queue 2",
          "name": "async_queue_2",
          "display_name": "Async Queue 2",
          "short_desc": "wf-api asynchronous test queue 2"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 12"
    },
    {
      "request_id": "lw4tEMBvY69OfTZ",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 7,
          "type": "queue",
          "desc": "User interaction test asynchronous test queue",
          "name": "user-interaction-test-1",
          "display_name": "User Interaction Test 1",
          "short_desc": "User interaction test asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 7"
    },
    {
      "request_id": "IiKks33BNmuBytO",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 5,
          "type": "queue",
          "desc": "asynchronous test queue",
          "name": "async-test",
          "display_name": "Async Test",
          "short_desc": "asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 5"
    },
    {
      "request_id": "PWc7mg7axZgR8W8",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 2,
          "type": "queue",
          "desc": "example queue",
          "name": "example-step-1",
          "display_name": "Example Step 1",
          "short_desc": "example queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 2"
    }
  ],
  "event": [
    {
      "request_id": "KC7g5YjS6eVYttt",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 0,
          "type": "event",
          "desc": "default system event type",
          "name": "OMQ-SYSTEM-DEFAULT-EVENT-TYPE",
          "display_name": "OMQ SYSTEM DEFAULT EVENT TYPE",
          "short_desc": "default system event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 0"
    },
    {
      "request_id": "y3PTrI5HFKphEQD",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 7,
          "type": "event",
          "desc": "test event type for the EVENT-TEST workflow",
          "name": "event-test",
          "display_name": "Event Test",
          "short_desc": "test event type for the EVENT-TEST workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 7"
    },
    {
      "request_id": "JzXjloVx2ZqrPQP",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 1,
          "type": "event",
          "desc": "issue #3490 test event",
          "name": "issue-3490",
          "display_name": "Issue 3490",
          "short_desc": "issue #3490 test event"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 1"
    },
    {
      "request_id": "uqsPZOWQHBmby9y",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 8,
          "type": "event",
          "desc": "Class workflow test event type",
          "name": "issue3102event",
          "display_name": "Issue3102event",
          "short_desc": "Class workflow test event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 8"
    },
    {
      "request_id": "F7DgJFeyeF6cTNM",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 6,
          "type": "event",
          "desc": "test event type for the REGRESSION-TEST workflow",
          "name": "regression-test",
          "display_name": "Regression Test",
          "short_desc": "test event type for the REGRESSION-TEST workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 6"
    },
    {
      "request_id": "vUhqPqIEGeeBXN2",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 5,
          "type": "event",
          "desc": "test event type for the FEEDBACK-DETACH-CHILD workflow",
          "name": "feedback-detach-child",
          "display_name": "Feedback Detach Child",
          "short_desc": "test event type for the FEEDBACK-DETACH-CHILD workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 5"
    },
    {
      "request_id": "Hqn2I7uCF9Q1rqx",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 2,
          "type": "event",
          "desc": "Class workflow test event type",
          "name": "qore-class-event-test",
          "display_name": "Qore Class Event Test",
          "short_desc": "Class workflow test event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 2"
    },
    {
      "request_id": "fBVtCQ224lW35dx",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 4,
          "type": "event",
          "desc": "issue 2495 test event type",
          "name": "issue-2495",
          "display_name": "Issue 2495",
          "short_desc": "issue 2495 test event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 4"
    },
    {
      "request_id": "f5SqYzzuKCSsuzG",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 3,
          "type": "event",
          "desc": "Java test event type",
          "name": "java-event-test",
          "display_name": "Java Event Test",
          "short_desc": "Java test event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 3"
    }
  ],
  "group": [
    {
      "request_id": "2ff4jdSps7jOxX0",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 258,
          "type": "group",
          "name": "issue-3485-FcItYYhWXfRuZtH",
          "display_name": "Issue 3485 Fc ItY YhW Xf Ru ZtH",
          "short_desc": "test empty group",
          "desc": "test empty group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 258"
    },
    {
      "request_id": "BUgv9Hf0gw665Yc",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 188,
          "type": "group",
          "name": "creator-test-group1-fe5a145b-1944-4744-8393-4e7e00a0b29c",
          "display_name": "Creator Test Group1 Fe5a145b 1944 4744 8393 4e7e00a0b29c",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 188"
    },
    {
      "request_id": "tbr2wRXdsD4zqFv",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 360,
          "type": "group",
          "name": "creator-test-group1-080d2b1f-76af-4302-b50b-44d64caba855",
          "display_name": "Creator Test Group1 080d2b1f 76af 4302 B50b 44d64caba855",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 360"
    },
    {
      "request_id": "z8RtMnXr6o6HOsI",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 69,
          "type": "group",
          "name": "bb-test",
          "display_name": "Bb Test",
          "short_desc": "building block test interfaces",
          "desc": "building block test interfaces"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 69"
    },
    {
      "request_id": "qVqHpMIUcUHWtdQ",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 3,
          "type": "group",
          "name": "demo-telco-om",
          "display_name": "Demo Telco Om",
          "short_desc": "Telco OM demo interfaces",
          "desc": "Telco OM demo interfaces"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 3"
    },
    {
      "request_id": "6ljdJVOPHa8GR81",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 345,
          "type": "group",
          "name": "creator-test-group1-cdc103a2-4abd-4202-9ee9-93f7c071c2cf",
          "display_name": "Creator Test Group1 Cdc103a2 4abd 4202 9ee9 93f7c071c2cf",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 345"
    },
    {
      "request_id": "RH40niBr2eG966k",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 129,
          "type": "group",
          "name": "creator-test-group1-c7362aec-c3d6-478b-b3b7-1f67ff2236c5",
          "display_name": "Creator Test Group1 C7362aec C3d6 478b B3b7 1f67ff2236c5",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 129"
    },
    {
      "request_id": "pzUnSialHYi6iFP",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 132,
          "type": "group",
          "name": "creator-test-group1-e1e47e70-d14e-40b3-84d1-892af63b7d11",
          "display_name": "Creator Test Group1 E1e47e70 D14e 40b3 84d1 892af63b7d11",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 132"
    },
    {
      "request_id": "xKbollL4rxPMtqq",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 354,
          "type": "group",
          "name": "creator-test-group1-b4d419db-2b0b-48fc-9be6-90099ab4056c",
          "display_name": "Creator Test Group1 B4d419db 2b0b 48fc 9be6 90099ab4056c",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 354"
    },
    {
      "request_id": "QeS2wvYdfXSgWLD",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 13,
          "type": "group",
          "name": "QORUS-API",
          "display_name": "QORUS API",
          "short_desc": "Qorus API group",
          "desc": "Qorus API group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 13"
    }
  ],
  "pipeline": [
    {
      "request_id": "uvuNLNIVkTJg0Sr",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 30,
          "type": "pipeline",
          "desc": "test pipeline",
          "name": "bbm-data-provider-search-record-iterator",
          "display_name": "Bbm Data Provider Search Record Iterator",
          "short_desc": "test pipeline",
          "children": [
            {
              "type": "mapper",
              "name": "bbm-data-provider-search-record-iterator:1.0"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 30"
    },
    {
      "request_id": "zJobLzDu4GwEwq7",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 29,
          "type": "pipeline",
          "desc": "Import XLSX exports from MEWS in NetSuite",
          "name": "julius-meinl-mews-netsuite-import",
          "display_name": "Julius Meinl Mews Netsuite Import",
          "short_desc": "Import XLSX exports from MEWS in NetSuite",
          "children": [
            {
              "type": "mapper",
              "name": "julius-meinl-mews-netsuite-import:1.0"
            }
          ],
          "input-provider": {
            "type": "factory",
            "name": "excelread",
            "path": "",
            "descriptions": [null, "no description available"],
            "options": {
              "path": {
                "type": "string",
                "value": "$xconfig:{import-path}"
              },
              "header_cells": {
                "type": "softstring",
                "value": "a1:x1"
              },
              "worksheet": {
                "type": "string",
                "value": "Items"
              }
            },
            "supports_read": true,
            "supports_messages": "NONE"
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 29"
    },
    {
      "request_id": "6TM5FPZlLxyQIuB",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 109,
          "type": "pipeline",
          "desc": "pipeline 1",
          "name": "pipeline1",
          "display_name": "Pipeline1",
          "short_desc": "pipeline 1",
          "children": [
            {
              "type": "queue",
              "children": [
                {
                  "pid": "id1",
                  "name": "Issue3485Processor1",
                  "type": "processor",
                  "children": [
                    {
                      "pid": "id2",
                      "name": "Issue3485Processor2",
                      "type": "processor"
                    }
                  ]
                }
              ]
            },
            {
              "type": "queue",
              "children": [
                {
                  "pid": "id3",
                  "name": "Issue3485Processor1",
                  "type": "processor",
                  "children": [
                    {
                      "pid": "id4",
                      "name": "Issue3485Processor2",
                      "type": "processor"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 109"
    },
    {
      "request_id": "LvhC6P2Sv1OjxSk",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 19,
          "type": "pipeline",
          "desc": "test",
          "name": "bbm-simple-filter-pipeline-data-test-2",
          "display_name": "Bbm Simple Filter Pipeline Data Test 2",
          "short_desc": "test",
          "children": [
            {
              "type": "processor",
              "name": "BBM_GetPipelineData",
              "pid": "gc_wFTIjY",
              "children": [
                {
                  "type": "processor",
                  "name": "BBM_SimpleFilterPipelineData",
                  "pid": "NEF3L8hSZ",
                  "children": [
                    {
                      "type": "mapper",
                      "name": "bbm-simple-filter-pipeline-data-test-2:1.0",
                      "children": [
                        {
                          "type": "processor",
                          "name": "PipelineElementSaveDataInJob",
                          "pid": "8heYLpGMm"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 19"
    },
    {
      "request_id": "zg2k7FsJsHF8wED",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 200,
          "type": "pipeline",
          "desc": "low code test pipeline",
          "name": "pipeline7",
          "display_name": "Pipeline7",
          "short_desc": "low code test pipeline",
          "children": [
            {
              "type": "mapper",
              "name": "lowcode-test-1:1.0",
              "children": [
                {
                  "type": "processor",
                  "name": "LowCodeTestSaveOutput",
                  "pid": "IgMlO9rhaF"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 200"
    },
    {
      "request_id": "Rj6N62qVxin5vjO",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 130,
          "type": "pipeline",
          "desc": "pipeline 6",
          "name": "pipeline6",
          "display_name": "Pipeline6",
          "short_desc": "pipeline 6",
          "children": [
            {
              "type": "processor",
              "name": "Issue3485Processor1",
              "pid": "id1",
              "children": [
                {
                  "type": "processor",
                  "name": "Issue3485Processor2",
                  "pid": "id2",
                  "children": [
                    {
                      "type": "processor",
                      "name": "Issue3485Processor3",
                      "pid": "id3"
                    }
                  ]
                }
              ]
            }
          ],
          "input-provider": {
            "name": "omquser",
            "path": "/pipe_table_1",
            "type": "datasource"
          },
          "input-provider-options": {
            "input_provider_search": {
              "type": "hash",
              "value": "{col_1: 2}\n"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 130"
    },
    {
      "request_id": "JVkHCtKSoRnhnYt",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 18,
          "type": "pipeline",
          "desc": "Read DB data and create CSV file",
          "name": "julius-meinl-mews-netsuite-transform",
          "display_name": "Julius Meinl Mews Netsuite Transform",
          "short_desc": "Read DB data and create CSV file",
          "children": [
            {
              "type": "mapper",
              "name": "julius-meinl-mews-netsuite-transform:1.0",
              "children": [
                {
                  "type": "processor",
                  "name": "BBM_DataProviderRecordCreateProcessor",
                  "pid": "9rOhHL7TlQ1I"
                }
              ]
            }
          ],
          "input-provider": {
            "type": "datasource",
            "name": "omquser",
            "transaction_management": true,
            "path": "/mews_accounting",
            "descriptions": [
              "Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries",
              "Record-based data provider for db table `public.mews_accounting`; supports create, read/search, update, delete, upsert, and bulk operations"
            ],
            "supports_read": true,
            "supports_update": true,
            "supports_create": true,
            "supports_delete": true,
            "supports_messages": "NONE"
          },
          "input-provider-options": {
            "input_provider_search": {
              "type": "hash",
              "value": "{qorus_jiid: \"$local:service_method_args[0]\"}\n"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 18"
    },
    {
      "request_id": "rydhdX6vKtxyT4I",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 113,
          "type": "pipeline",
          "desc": "pipeline 5",
          "name": "pipeline5",
          "display_name": "Pipeline5",
          "short_desc": "pipeline 5",
          "children": [
            {
              "name": "Issue3485PythonProcessor1",
              "type": "processor",
              "pid": "id1",
              "children": [
                {
                  "name": "Issue3485PythonProcessor2",
                  "type": "processor",
                  "pid": "id2"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 113"
    },
    {
      "request_id": "w0O1OHWnTWmMzL8",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 100,
          "type": "pipeline",
          "desc": "Factory test pipeline",
          "name": "factory-test",
          "display_name": "Factory Test",
          "short_desc": "Factory test pipeline",
          "children": [
            {
              "type": "processor",
              "name": "Issue3485Processor4",
              "pid": "08w9QCqkM"
            }
          ],
          "input-provider": {
            "type": "factory",
            "name": "csvread",
            "path": "",
            "options": {
              "path": {
                "type": "string",
                "value": "$xconfig:{csv-input-path}"
              },
              "header_names": {
                "type": "softbool",
                "value": true
              },
              "date_format": {
                "type": "string",
                "value": "DD.MM.YYYY"
              },
              "fields": {
                "type": "hash<auto>",
                "value": {
                  "id": "int",
                  "activation_date": "date"
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 100"
    },
    {
      "request_id": "Fc2t66JISi6Wpv2",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 111,
          "type": "pipeline",
          "desc": "pipeline 3",
          "name": "pipeline3",
          "display_name": "Pipeline3",
          "short_desc": "pipeline 3",
          "children": [
            {
              "pid": "id1",
              "name": "Issue3485Processor2",
              "type": "processor",
              "children": [
                {
                  "pid": "id2",
                  "name": "Issue3485Processor1",
                  "type": "processor"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 111"
    }
  ],
  "mapper": [
    {
      "request_id": "THrpS3rDDPg91KM",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 31,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "output-1": {
              "code": "issue3102mappercode::getMapperField"
            },
            "output-2": {
              "name": "input-2"
            },
            "output-3": "input-1",
            "output-4": {
              "sequence": "test_seq"
            },
            "output-5": {
              "constant": 123
            },
            "output-6": "input-1",
            "output-7": "input-3"
          },
          "options": {
            "input": {
              "input-1": {
                "desc": "input 1"
              },
              "input-2": "input 2",
              "input-3": "input 3"
            },
            "output": {
              "output-1": "output 1",
              "output-2": "output 2",
              "output-3": "output 3",
              "output-4": {
                "desc": "output 4",
                "maxlen": 43,
                "type": "string",
                "mand": true
              },
              "output-5": {
                "desc": "output 5"
              },
              "output-6": {
                "desc": "output 6"
              },
              "output-7": "output 7"
            },
            "datasource": "omq",
            "table": "test",
            "select": {
              "where": {
                "name": "asd"
              },
              "columns": ["input-1", "input-2"]
            }
          },
          "name": "issue3102mapper",
          "display_name": "Issue3102mapper",
          "short_desc": "mapper api test",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["issue3102group"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 31"
    },
    {
      "request_id": "1rY61qvv5zYH6X5",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 46,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "code": {
              "name": "Code"
            },
            "accounting_category": {
              "name": "Accounting category"
            },
            "ledger_account_code": {
              "name": "Ledger account code"
            },
            "type": {
              "name": "Type"
            },
            "service": {
              "name": "Service"
            },
            "item": {
              "name": "Item",
              "trunc": true
            },
            "creator": {
              "name": "Creator"
            },
            "closed": {
              "name": "Closed"
            },
            "bill": {
              "name": "Bill"
            },
            "assignee": {
              "name": "Assignee"
            },
            "status": {
              "name": "Status"
            },
            "customer": {
              "name": "Customer"
            },
            "vat_rate": {
              "name": "VAT rate"
            },
            "amount": {
              "name": "Amount"
            },
            "qorus_jiid": {
              "context": "$local:job_instanceid"
            }
          },
          "options": {
            "mapper-input": {
              "type": "type",
              "name": "julius-meinl",
              "descriptions": ["Qore data type \"hash<auto>\""],
              "path": "/mews/accounting-export",
              "custom-fields": {}
            },
            "mapper-output": {
              "type": "datasource",
              "name": "omquser",
              "transaction_management": true,
              "path": "/mews_accounting",
              "descriptions": [
                "Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries",
                "Record-based data provider for db table `public.mews_accounting`; supports create, read/search, update, delete, upsert, and bulk operations"
              ],
              "supports_read": true,
              "supports_update": true,
              "supports_create": true,
              "supports_delete": true,
              "supports_messages": "NONE",
              "custom-fields": {}
            }
          },
          "name": "julius-meinl-mews-netsuite-import",
          "display_name": "Julius Meinl Mews Netsuite Import",
          "short_desc": "Imports XLSX exports from MEWS into NetSuite",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 46"
    },
    {
      "request_id": "L60Apz8InI36xy7",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 10,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "output_1": {
              "name": "input_1"
            },
            "output_2": {
              "name": "input_2"
            },
            "output_3": {
              "constant": 123
            }
          },
          "options": {
            "mapper-input": {
              "custom-fields": {},
              "name": "omquser",
              "path": "/table_1",
              "type": "datasource"
            },
            "mapper-output": {
              "custom-fields": {},
              "name": "omquser",
              "path": "/table_2",
              "type": "datasource"
            },
            "output_provider_bulk": true
          },
          "name": "mapper-test-1",
          "display_name": "Mapper Test 1",
          "short_desc": "mapper test mapper",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 10"
    },
    {
      "request_id": "ijJRBpe93RPYbhE",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 24,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "FIELD-1": "\"field-1\"",
            "FIELD-2": "\"field-3\"",
            "FIELD-3": "(\"constant\": \"x\")",
            "FIELD-4": "\"field-4\"",
            "FIELD-5": "\"field-3\"",
            "FIELD-6": "\"field-2\""
          },
          "options": {
            "input": "(\n    \"field-i1\": {},\n    \"field-1\": {},\n    \"field-i2\": {},\n    \"field-2\": {},\n    \"field-3\": {},\n    \"field-4\": {},\n    \"field-5\": {},\n)",
            "output": "(\n    \"FIELD-I1\": {},\n    \"FIELD-1\": {},\n    \"FIELD-I2\": {},\n    \"FIELD-2\": {},\n    \"FIELD-3\": {},\n    \"FIELD-4\": {},\n    \"FIELD-5\": {},\n    \"FIELD-6\": {},\n    \"FIELD-7\": {},\n)"
          },
          "name": "mapper-sort-test",
          "display_name": "Mapper Sort Test",
          "short_desc": "sort test mapper",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 24"
    },
    {
      "request_id": "2JMl8HAhYnzzIRm",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 20,
          "type": "mapper",
          "mappertype": "InboundTableMapper",
          "fields": {
            "id": "(\"name\": \"ID\")"
          },
          "options": {
            "datasource": "\"omquser\"",
            "table": "\"issue_3313_2\"",
            "input": "(\n    \"ID\": \"id\",\n)"
          },
          "name": "issue-3313-2",
          "display_name": "Issue 3313 2",
          "short_desc": "test mapper",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 20"
    },
    {
      "request_id": "QGTvEAgKXTxZqoR",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 23,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "config-item-1": "(\"code\": auto sub (auto ignored, hash<auto> rec) { return get_global_config_item_value(\"test-item\"); } )",
            "ctx-1": "{\"context\": \"$local:workflow_instanceid\"}",
            "template-1": "{\"name\": \"input-1\", \"template\": True}"
          },
          "options": {
            "input": "(\n    \"input-1\": {},\n)",
            "output": "(\n    \"config-item-1\": {},\n    \"ctx-1\": {},\n    \"template-1\": {},\n)"
          },
          "name": "mapper-api-test",
          "display_name": "Mapper Api Test",
          "short_desc": "mapper api test",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 23"
    },
    {
      "request_id": "6FcAZCYTM5PgfB0",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 47,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "PostDate": {
              "name": "closed"
            },
            "IssueDate": {
              "name": "closed"
            },
            "DateTS": {
              "name": "closed"
            },
            "Fxrate": {
              "constant": 1
            },
            "Cur\\.": {
              "constant": "CZK"
            },
            "InvLineMemo": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getInvLineMemo"
            },
            "Region": {
              "constant": "CZ : SEN3"
            },
            "NScustID2": {
              "constant": 1521
            },
            "InvNumber": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getInvNumber"
            },
            "InvMemo": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getInvMemo"
            },
            "GrossAmt": {
              "name": "amount"
            },
            "TransID": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getTransID"
            },
            "ItemID": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getItemID"
            },
            "VATcode": {
              "value_lookup": "VatCodes.$local:{input.vat_rate}",
              "default": "VAT:UNDEF-CZ"
            },
            "VATonSales": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getVATonSales"
            },
            "Dept": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getDept"
            },
            "Class": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getClass"
            }
          },
          "options": {
            "mapper-input": {
              "type": "datasource",
              "name": "omquser",
              "transaction_management": true,
              "path": "/mews_accounting",
              "descriptions": [
                "Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries",
                "Record-based data provider for db table `public.mews_accounting`; supports create, read/search, update, delete, upsert, and bulk operations"
              ],
              "supports_read": true,
              "supports_update": true,
              "supports_create": true,
              "supports_delete": true,
              "supports_messages": "NONE",
              "custom-fields": {}
            },
            "mapper-output": {
              "type": "type",
              "name": "julius-meinl",
              "descriptions": ["Qore data type \"hash<auto>\""],
              "path": "/netsuite/accounting-import",
              "custom-fields": {}
            }
          },
          "name": "julius-meinl-mews-netsuite-transform",
          "display_name": "Julius Meinl Mews Netsuite Transform",
          "short_desc": "Produce output data to import MEWS accounting data in NetSuite",
          "version": "1.0"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 47"
    },
    {
      "request_id": "98X6zKo1HUXCCVO",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 1,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "body.BillCycle": {
              "context": "$static:{bill-cycle}"
            },
            "body.Name": {
              "code": "TelcoCreateBillingAccount::getName"
            },
            "body.PaymentInfo.Address": {
              "context": "$sensitive-alias:{payment-1.value.billing-address}"
            },
            "body.PaymentInfo.CVV2": {
              "context": "$sensitive-alias:{payment-1.value.CVV2}"
            },
            "body.PaymentInfo.Expiration": {
              "context": "$sensitive-alias:{payment-1.value.card-expiration-date}"
            },
            "body.PaymentInfo.Id": {
              "context": "$sensitive-alias:{payment-1.svalue}"
            },
            "body.PaymentInfo.Name": {
              "context": "$sensitive-alias:{payment-1.value.name}"
            },
            "body.PaymentInfo.Type": {
              "context": "$sensitive-alias:{payment-1.value.type}"
            },
            "body.RequestId": {
              "context": "$local:workflow_instanceid"
            },
            "body.TaxId": {
              "context": "$sensitive-alias:{party-1.svalue}"
            },
            "body.Type": {
              "context": "$static:type"
            }
          },
          "options": {
            "mapper-input": {
              "type": "type",
              "name": "qore",
              "path": "/hash",
              "custom-fields": {}
            },
            "mapper-output": {
              "type": "connection",
              "name": "rest-billing-demo",
              "path": "/accounts/POST/",
              "subtype": "request",
              "custom-fields": {}
            },
            "output_provider_passive": true
          },
          "name": "telco-create-billing-account",
          "display_name": "Telco Create Billing Account",
          "short_desc": "telco billing account mapper",
          "version": "1.0"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 1"
    },
    {
      "request_id": "hnL4OrLKC8EGUHe",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 2,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "output-1": {
              "code": "issue3364mappercode::getMapperField"
            },
            "output-2": {
              "name": "input-1",
              "code": "issue3364mappercode::getMapperField"
            },
            "output-3": {
              "name": "input-2"
            },
            "output-4": "input-1",
            "output-5": {
              "constant": 123
            },
            "output-6": "input-1",
            "output-7": "input-3"
          },
          "options": {
            "input": {
              "input-1": {
                "desc": "input 1"
              },
              "input-2": "input 2",
              "input-3": "input 3"
            },
            "output": {
              "output-1": "output 1",
              "output-2": "output 2",
              "output-3": "output 3",
              "output-4": {
                "desc": "output 4",
                "maxlen": 43,
                "type": "string",
                "mand": true
              },
              "output-5": {
                "desc": "output 5"
              },
              "output-6": {
                "desc": "output 6"
              },
              "output-7": "output 7"
            }
          },
          "name": "issue3364mapper",
          "display_name": "Issue3364mapper",
          "short_desc": "mapper code test",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 2"
    },
    {
      "request_id": "gSAqU95LISnMUiK",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 12,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "output_1": {
              "name": "body.result"
            },
            "output_2": {
              "name": "body.docs"
            },
            "output_3": {
              "constant": 123
            }
          },
          "options": {
            "mapper-input": {
              "type": "connection",
              "subtype": "response",
              "name": "soap-simple",
              "path": "/getCompanyInfo"
            },
            "mapper-output": {
              "type": "datasource",
              "name": "omquser",
              "path": "/table_2"
            },
            "output_provider_bulk": true
          },
          "name": "mapper-test-3",
          "display_name": "Mapper Test 3",
          "short_desc": "mapper code test",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 12"
    }
  ],
  "type": [
    {
      "request_id": "li34NdbzCyzcVcP",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": -228,
          "type": "type",
          "path": "/qoretechnologies/qorus-api/jobs/set-inactive/request",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": false,
            "fields": {
              "job": {
                "name": "job",
                "desc": "the job ID or name (or name:version string)",
                "type": {
                  "typename": "job",
                  "name": "job",
                  "display_name": "Job",
                  "short_desc": "Qore data type \"job\"",
                  "desc": "Qore data type \"job\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": null,
                  "base_type": "job",
                  "mandatory": true,
                  "types_accepted": [
                    "string",
                    "bool",
                    "float",
                    "int",
                    "integer",
                    "date",
                    "number",
                    "null"
                  ],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "autostart": {
                "name": "autostart",
                "desc": "the autostart value for the job",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": null,
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type -228"
    },
    {
      "request_id": "f66akAJYRsA1xII",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": -173,
          "type": "type",
          "path": "/qoretechnologies/qorus-api/services/enable/request",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": false,
            "fields": {
              "service": {
                "name": "service",
                "desc": "the service ID or name",
                "type": {
                  "typename": "softstring",
                  "name": "softstring",
                  "display_name": "Softstring",
                  "short_desc": "Qore data type \"softstring\"",
                  "desc": "Qore data type \"softstring\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": [
                    "string",
                    "bool",
                    "float",
                    "int",
                    "integer",
                    "date",
                    "number",
                    "null"
                  ],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type -173"
    },
    {
      "request_id": "lychJB6MJQIVhHi",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": -197,
          "type": "type",
          "path": "/qoretechnologies/qorus-api/services/call-method/request",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": false,
            "fields": {
              "service": {
                "name": "service",
                "desc": "the service ID or name (or name:version string)",
                "type": {
                  "typename": "service",
                  "name": "service",
                  "display_name": "Service",
                  "short_desc": "Qore data type \"service\"",
                  "desc": "Qore data type \"service\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": null,
                  "base_type": "service",
                  "mandatory": true,
                  "types_accepted": [
                    "string",
                    "bool",
                    "float",
                    "int",
                    "integer",
                    "date",
                    "number",
                    "null"
                  ],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "method": {
                "name": "method",
                "desc": "the service method name",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "args": {
                "name": "args",
                "desc": "any arguments to the method",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type -197"
    },
    {
      "request_id": "pItb9FowZ8wIncl",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 3,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/ftp/event",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "tmp_filename": {
                "name": "tmp_filename",
                "desc": "the temporary filename used to store the file until the post action; only present if the `ftp-polling-file-connection` config item is set",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "tmp_path": {
                "name": "tmp_path",
                "desc": "the temporary path on the filesystem of the file used during the initial file transfer; only present if the `ftp-polling-file-connection` config item is set",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "local_path": {
                "name": "local_path",
                "desc": "this key is set to a string giving the local path where the file's data is stored; only present if the `ftp-polling-file-connection` config item is set",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "transfer_time": {
                "name": "transfer_time",
                "desc": "a relative date/time value giving the time it took to transfer the file; only present if the `ftp-polling-file-connection` config item is set",
                "type": {
                  "typename": "*date",
                  "name": "*date",
                  "display_name": "*date",
                  "short_desc": "Qore data type \"*date\"",
                  "desc": "Qore data type \"*date\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "date",
                  "mandatory": false,
                  "types_accepted": ["date", "nothing", "null"],
                  "types_returned": ["date", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "remote_status": {
                "name": "remote_status",
                "desc": "a string giving the disposition of the file on the remote server; either `DELETED` or `MOVED`",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "remote_move_targert": {
                "name": "remote_move_targert",
                "desc": "a string giving the target file name for moved files; only present when `remote_status` is `MOVED`",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 3"
    },
    {
      "request_id": "qSDeuHldrDbGg2R",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 12,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/kafka/record-metadata",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "offset": {
                "name": "offset",
                "desc": "The offset of the record in the topic/partition.",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "partition": {
                "name": "partition",
                "desc": "The partition the record was sent to",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "serialized_key_size": {
                "name": "serialized_key_size",
                "desc": "The size of the serialized, uncompressed key in bytes.",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "serialized_value_size": {
                "name": "serialized_value_size",
                "desc": "The size of the serialized, uncompressed value in bytes.",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "timestamp": {
                "name": "timestamp",
                "desc": "The timestamp of the record in the topic/partition.",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "timestamp_date": {
                "name": "timestamp_date",
                "desc": "The timestamp of this record as a date/time value",
                "type": {
                  "typename": "date",
                  "name": "date",
                  "display_name": "Date",
                  "short_desc": "Qore data type \"date\"",
                  "desc": "Qore data type \"date\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "date",
                  "mandatory": true,
                  "types_accepted": ["date"],
                  "types_returned": ["date"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "topic": {
                "name": "topic",
                "desc": "The topic the record was appended to",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 12"
    },
    {
      "request_id": "XVen6JuTyn8JxCm",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 20,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/websockets/broadcast-event",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "msg": {
                "name": "msg",
                "desc": "The message to broadcast; must be either a `string` or a `binary` type",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 20"
    },
    {
      "request_id": "NR209rhw7vnDT40",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": -315,
          "type": "type",
          "path": "/qoretechnologies/qorus-api/jobs/context",
          "display_name": "Job Context Hash",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "job context hash",
            "can_manage_fields": false,
            "fields": {
              "active": {
                "name": "active",
                "desc": "the active flag (True for active jobs)",
                "type": {
                  "typename": "bool",
                  "name": "bool",
                  "display_name": "Bool",
                  "short_desc": "Qore data type \"bool\"",
                  "desc": "Qore data type \"bool\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": null,
                  "base_type": "bool",
                  "mandatory": true,
                  "types_accepted": ["bool"],
                  "types_returned": ["bool"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "author": {
                "name": "author",
                "desc": "the author if the job, if present",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "description": {
                "name": "description",
                "desc": "the description of the job",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "expiry_date": {
                "name": "expiry_date",
                "desc": "The date/time the job expires",
                "type": {
                  "typename": "*date",
                  "name": "*date",
                  "display_name": "*date",
                  "short_desc": "Qore data type \"*date\"",
                  "desc": "Qore data type \"*date\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "date",
                  "mandatory": false,
                  "types_accepted": ["date", "nothing", "null"],
                  "types_returned": ["date", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "groups": {
                "name": "groups",
                "desc": "a list of zero or more hashes for groups the job is a member of",
                "type": {
                  "typename": "list<hash<auto>>",
                  "name": "list<hash<auto>>",
                  "display_name": "List<hash<auto>>",
                  "short_desc": "Qore data type \"list<hash<auto>>\"",
                  "desc": "Qore data type \"list<hash<auto>>\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": null,
                  "base_type": "list",
                  "mandatory": true,
                  "types_accepted": ["list<hash<auto>>"],
                  "types_returned": ["list<hash<auto>>"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "job_instanceid": {
                "name": "job_instanceid",
                "desc": "The current job order data instance ID being processed",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": null,
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "jobid": {
                "name": "jobid",
                "desc": "ID of the current job",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": null,
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "last_executed": {
                "name": "last_executed",
                "desc": "the last executed date/time of the job (no value if never executed before the current iteration)",
                "type": {
                  "typename": "*date",
                  "name": "*date",
                  "display_name": "*date",
                  "short_desc": "Qore data type \"*date\"",
                  "desc": "Qore data type \"*date\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "date",
                  "mandatory": false,
                  "types_accepted": ["date", "nothing", "null"],
                  "types_returned": ["date", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "last_executed_job_instanceid": {
                "name": "last_executed_job_instanceid",
                "desc": "the last executed instance id of the job",
                "type": {
                  "typename": "*int",
                  "name": "*int",
                  "display_name": "*int",
                  "short_desc": "Qore data type \"*int\"",
                  "desc": "Qore data type \"*int\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "int",
                  "mandatory": false,
                  "types_accepted": ["int", "integer", "nothing", "null"],
                  "types_returned": ["int", "integer", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "name": {
                "name": "name",
                "desc": "name of the job",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "next": {
                "name": "next",
                "desc": "the next trigger date/time",
                "type": {
                  "typename": "*date",
                  "name": "*date",
                  "display_name": "*date",
                  "short_desc": "Qore data type \"*date\"",
                  "desc": "Qore data type \"*date\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "date",
                  "mandatory": false,
                  "types_accepted": ["date", "nothing", "null"],
                  "types_returned": ["date", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "patch": {
                "name": "patch",
                "desc": "the patch value of the job",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "remote": {
                "name": "remote",
                "desc": "a boolean value giving the remote status of the job",
                "type": {
                  "typename": "bool",
                  "name": "bool",
                  "display_name": "Bool",
                  "short_desc": "Qore data type \"bool\"",
                  "desc": "Qore data type \"bool\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": null,
                  "base_type": "bool",
                  "mandatory": true,
                  "types_accepted": ["bool"],
                  "types_returned": ["bool"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "started": {
                "name": "started",
                "desc": "The date/time the job order data instance was created",
                "type": {
                  "typename": "date",
                  "name": "date",
                  "display_name": "Date",
                  "short_desc": "Qore data type \"date\"",
                  "desc": "Qore data type \"date\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": null,
                  "base_type": "date",
                  "mandatory": true,
                  "types_accepted": ["date"],
                  "types_returned": ["date"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "trigger": {
                "name": "trigger",
                "desc": "a string describing the timer/trigger for the job",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "version": {
                "name": "version",
                "desc": "version of the job",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "run_skipped": {
                "name": "run_skipped",
                "desc": "a flag that indicates if a skipped trigger time should be executed on restart",
                "type": {
                  "typename": "bool",
                  "name": "bool",
                  "display_name": "Bool",
                  "short_desc": "Qore data type \"bool\"",
                  "desc": "Qore data type \"bool\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": null,
                  "base_type": "bool",
                  "mandatory": true,
                  "types_accepted": ["bool"],
                  "types_returned": ["bool"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "custom_trigger": {
                "name": "custom_trigger",
                "desc": "a customer trigger time for the job",
                "type": {
                  "typename": "*date",
                  "name": "*date",
                  "display_name": "*date",
                  "short_desc": "Qore data type \"*date\"",
                  "desc": "Qore data type \"*date\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "date",
                  "mandatory": false,
                  "types_accepted": ["date", "nothing", "null"],
                  "types_returned": ["date", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "options": {
                "name": "options",
                "desc": "a hash of job options, if any",
                "type": {
                  "typename": "*hash",
                  "name": "*hash",
                  "display_name": "*hash",
                  "short_desc": "Qore data type \"*hash\"",
                  "desc": "Qore data type \"*hash\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "hash",
                  "mandatory": false,
                  "types_accepted": ["hash", "nothing", "null"],
                  "types_returned": ["hash", "nothing"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "alerts": {
                "name": "alerts",
                "desc": "a list of zero or more alerts against the job",
                "type": {
                  "typename": "*list",
                  "name": "*list",
                  "display_name": "*list",
                  "short_desc": "Qore data type \"*list\"",
                  "desc": "Qore data type \"*list\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "list",
                  "mandatory": false,
                  "types_accepted": ["list", "nothing", "null"],
                  "types_returned": ["list", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type -315"
    },
    {
      "request_id": "OXBIaPZtscgyPlj",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 24,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/salesforce/stream-event",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "event": {
                "name": "event",
                "desc": "event metadata hash",
                "type": {
                  "typename": "hash<auto>",
                  "name": "hash<auto>",
                  "display_name": "Hash<auto>",
                  "short_desc": "Qore data type \"hash<auto>\"",
                  "desc": "Qore data type \"hash<auto>\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "hash",
                  "mandatory": true,
                  "types_accepted": ["hash<auto>"],
                  "types_returned": ["hash<auto>"],
                  "fields": {
                    "replayId": {
                      "name": "replayId",
                      "desc": "Salesforce event ID",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "int",
                        "display_name": "Int",
                        "short_desc": "Qore data type \"int\"",
                        "desc": "Qore data type \"int\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "int",
                        "mandatory": true,
                        "types_accepted": ["int", "integer"],
                        "types_returned": ["int", "integer"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    }
                  },
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "payload": {
                "name": "payload",
                "desc": "the event payload hash; contents depend on the event source",
                "type": {
                  "typename": "hash<auto>",
                  "name": "hash<auto>",
                  "display_name": "Hash<auto>",
                  "short_desc": "Qore data type \"hash<auto>\"",
                  "desc": "Qore data type \"hash<auto>\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "hash",
                  "mandatory": true,
                  "types_accepted": ["hash<auto>"],
                  "types_returned": ["hash<auto>"],
                  "fields": {
                    "ChangeEventHeader": {
                      "name": "ChangeEventHeader",
                      "desc": "Salesforce change event info",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "hash<auto>",
                        "display_name": "Hash<auto>",
                        "short_desc": "Qore data type \"hash<auto>\"",
                        "desc": "Qore data type \"hash<auto>\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "hash",
                        "mandatory": true,
                        "types_accepted": ["hash<auto>"],
                        "types_returned": ["hash<auto>"],
                        "fields": {
                          "changeOrigin": {
                            "name": "changeOrigin",
                            "desc": "Only populated for changes done by API apps or from Lightning Experience; empty otherwise. The Salesforce API and the API client ID that initiated the change, if set by the client",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "changeType": {
                            "name": "changeType",
                            "desc": "The operation that caused the change. Can be one of the following values: - `CREATE` - `UPDATE` - `DELETE` - `UNDELETE`\nFor gap events, the change type starts with the `GAP_` prefix: - `GAP_CREATE` - `GAP_UPDATE` - `GAP_DELETE` - `GAP_UNDELETE`\nFor overflow events, the change type is `GAP_OVERFLOW`.",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "changedFields": {
                            "name": "changedFields",
                            "desc": "list of the fields that were changed in an update operation, including the `LastModifiedDate` system field. This field is empty for other operations, including record creation",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "list<auto>",
                              "display_name": "List<auto>",
                              "short_desc": "Qore data type \"list<auto>\"",
                              "desc": "Qore data type \"list<auto>\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "list",
                              "mandatory": true,
                              "types_accepted": ["list<auto>"],
                              "types_returned": ["list<auto>"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "commitNumber": {
                            "name": "commitNumber",
                            "desc": "The system change number (SCN) of a committed transaction, which increases sequentially",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "int",
                              "display_name": "Int",
                              "short_desc": "Qore data type \"int\"",
                              "desc": "Qore data type \"int\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "int",
                              "mandatory": true,
                              "types_accepted": ["int", "integer"],
                              "types_returned": ["int", "integer"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "commitTimestamp": {
                            "name": "commitTimestamp",
                            "desc": "The date and time when the change occurred, represented as the number of milliseconds since `January 1, 1970 00:00:00 GMT`",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "int",
                              "display_name": "Int",
                              "short_desc": "Qore data type \"int\"",
                              "desc": "Qore data type \"int\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "int",
                              "mandatory": true,
                              "types_accepted": ["int", "integer"],
                              "types_returned": ["int", "integer"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "commitUser": {
                            "name": "commitUser",
                            "desc": "The ID of the user that ran the change operation",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "entityName": {
                            "name": "entityName",
                            "desc": "The API name of the standard or custom object that the change pertains to",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "recordIds": {
                            "name": "recordIds",
                            "desc": "One or more record IDs for the changed records (typically only one ID)",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "list<auto>",
                              "display_name": "List<auto>",
                              "short_desc": "Qore data type \"list<auto>\"",
                              "desc": "Qore data type \"list<auto>\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "list",
                              "mandatory": true,
                              "types_accepted": ["list<auto>"],
                              "types_returned": ["list<auto>"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "sequenceNumber": {
                            "name": "sequenceNumber",
                            "desc": "The sequence of the change within a transaction",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "int",
                              "display_name": "Int",
                              "short_desc": "Qore data type \"int\"",
                              "desc": "Qore data type \"int\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "int",
                              "mandatory": true,
                              "types_accepted": ["int", "integer"],
                              "types_returned": ["int", "integer"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "transactionKey": {
                            "name": "transactionKey",
                            "desc": "A string that uniquely identifies each Salesforce transaction. You can use this key to identify and group all changes that were made in the same transaction",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          }
                        },
                        "can_manage_fields": false,
                        "tags": null
                      }
                    }
                  },
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "schema": {
                "name": "schema",
                "desc": "Salesforce event REST event schema identifier",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 24"
    },
    {
      "request_id": "XyznWr1OCEJGimb",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": -28,
          "type": "type",
          "path": "/qore/hash",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": false
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type -28"
    },
    {
      "request_id": "gRgQhyZDUPIgAE4",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 19,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/salesforce/stream-event-account",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "event": {
                "name": "event",
                "desc": "event metadata hash",
                "type": {
                  "typename": "hash<auto>",
                  "name": "hash<auto>",
                  "display_name": "Hash<auto>",
                  "short_desc": "Qore data type \"hash<auto>\"",
                  "desc": "Qore data type \"hash<auto>\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "hash",
                  "mandatory": true,
                  "types_accepted": ["hash<auto>"],
                  "types_returned": ["hash<auto>"],
                  "fields": {
                    "replayId": {
                      "name": "replayId",
                      "desc": "Salesforce event ID",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "int",
                        "display_name": "Int",
                        "short_desc": "Qore data type \"int\"",
                        "desc": "Qore data type \"int\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "int",
                        "mandatory": true,
                        "types_accepted": ["int", "integer"],
                        "types_returned": ["int", "integer"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    }
                  },
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "payload": {
                "name": "payload",
                "desc": "the event payload hash; contents depend on the event source",
                "type": {
                  "typename": "hash<auto>",
                  "name": "hash<auto>",
                  "display_name": "Hash<auto>",
                  "short_desc": "Qore data type \"hash<auto>\"",
                  "desc": "Qore data type \"hash<auto>\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "hash",
                  "mandatory": true,
                  "types_accepted": ["hash<auto>"],
                  "types_returned": ["hash<auto>"],
                  "fields": {
                    "AccountNumber": {
                      "name": "AccountNumber",
                      "desc": "Account AccountNumber",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "AccountSource": {
                      "name": "AccountSource",
                      "desc": "Account AccountSource",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Active__c": {
                      "name": "Active__c",
                      "desc": "Account Active__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "AnnualRevenue": {
                      "name": "AnnualRevenue",
                      "desc": "Account AnnualRevenue",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*float",
                        "display_name": "*float",
                        "short_desc": "Qore data type \"*float\"",
                        "desc": "Qore data type \"*float\"",
                        "supported_options": null,
                        "options": null,
                        "base_type": "float",
                        "mandatory": false,
                        "types_accepted": [
                          "float",
                          "int",
                          "integer",
                          "nothing",
                          "null"
                        ],
                        "types_returned": ["float", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "BillingAddress": {
                      "name": "BillingAddress",
                      "desc": "Account Billing info",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*hash<auto>",
                        "display_name": "*hash<auto>",
                        "short_desc": "Qore data type \"*hash<auto>\"",
                        "desc": "Qore data type \"*hash<auto>\"",
                        "supported_options": null,
                        "options": null,
                        "base_type": "hash",
                        "mandatory": false,
                        "types_accepted": ["hash<auto>", "nothing", "null"],
                        "types_returned": ["hash<auto>", "nothing"],
                        "fields": {
                          "City": {
                            "name": "City",
                            "desc": "Account Billing City",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "Country": {
                            "name": "Country",
                            "desc": "Account Billing Country",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "GeocodeAccuracy": {
                            "name": "GeocodeAccuracy",
                            "desc": "Account Billing GeocodeAccuracy",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "Latitude": {
                            "name": "Latitude",
                            "desc": "Account Billing Latitude",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*float",
                              "display_name": "*float",
                              "short_desc": "Qore data type \"*float\"",
                              "desc": "Qore data type \"*float\"",
                              "supported_options": null,
                              "options": null,
                              "base_type": "float",
                              "mandatory": false,
                              "types_accepted": [
                                "float",
                                "int",
                                "integer",
                                "nothing",
                                "null"
                              ],
                              "types_returned": ["float", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "Longitude": {
                            "name": "Longitude",
                            "desc": "Account Billing Longitude",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*float",
                              "display_name": "*float",
                              "short_desc": "Qore data type \"*float\"",
                              "desc": "Qore data type \"*float\"",
                              "supported_options": null,
                              "options": null,
                              "base_type": "float",
                              "mandatory": false,
                              "types_accepted": [
                                "float",
                                "int",
                                "integer",
                                "nothing",
                                "null"
                              ],
                              "types_returned": ["float", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "PostalCode": {
                            "name": "PostalCode",
                            "desc": "Account Billing PostalCode",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "State": {
                            "name": "State",
                            "desc": "Account Billing State",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "Street": {
                            "name": "Street",
                            "desc": "Account Billing Street",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          }
                        },
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "CleanStatus": {
                      "name": "CleanStatus",
                      "desc": "Account CleanStatus",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "CustomerPriority__c": {
                      "name": "CustomerPriority__c",
                      "desc": "Account CustomerPriority__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "DandbCompanyId": {
                      "name": "DandbCompanyId",
                      "desc": "Account DandbCompanyId",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Description": {
                      "name": "Description",
                      "desc": "Account Description",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "DunsNumber": {
                      "name": "DunsNumber",
                      "desc": "Account DunsNumber",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Fax": {
                      "name": "Fax",
                      "desc": "Account Fax",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Hardware_Key_Id__c": {
                      "name": "Hardware_Key_Id__c",
                      "desc": "Account Hardware_Key_Id__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Industry": {
                      "name": "Industry",
                      "desc": "Account Industry",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Jigsaw": {
                      "name": "Jigsaw",
                      "desc": "Account Jigsaw",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "JigsawCompanyId": {
                      "name": "JigsawCompanyId",
                      "desc": "Account JigsawCompanyId",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "NaicsCode": {
                      "name": "NaicsCode",
                      "desc": "Account NaicsCode",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "NaicsDesc": {
                      "name": "NaicsDesc",
                      "desc": "Account NaicsDesc",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Name": {
                      "name": "Name",
                      "desc": "Account name",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "NumberOfEmployees": {
                      "name": "NumberOfEmployees",
                      "desc": "Account NumberOfEmployees",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*int",
                        "display_name": "*int",
                        "short_desc": "Qore data type \"*int\"",
                        "desc": "Qore data type \"*int\"",
                        "supported_options": null,
                        "options": null,
                        "base_type": "int",
                        "mandatory": false,
                        "types_accepted": ["int", "integer", "nothing", "null"],
                        "types_returned": ["int", "integer", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "NumberofLocations__c": {
                      "name": "NumberofLocations__c",
                      "desc": "Account NumberofLocations__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*float",
                        "display_name": "*float",
                        "short_desc": "Qore data type \"*float\"",
                        "desc": "Qore data type \"*float\"",
                        "supported_options": null,
                        "options": null,
                        "base_type": "float",
                        "mandatory": false,
                        "types_accepted": [
                          "float",
                          "int",
                          "integer",
                          "nothing",
                          "null"
                        ],
                        "types_returned": ["float", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "OwnerId": {
                      "name": "OwnerId",
                      "desc": "Account OwnerId",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Ownership": {
                      "name": "Ownership",
                      "desc": "Account Ownership",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "ParentId": {
                      "name": "ParentId",
                      "desc": "Account ParentId",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Phone": {
                      "name": "Phone",
                      "desc": "Account Phone",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "PhotoUrl": {
                      "name": "PhotoUrl",
                      "desc": "Account PhotoUrl",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Rating": {
                      "name": "Rating",
                      "desc": "Account Rating",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "SLAExpirationDate__c": {
                      "name": "SLAExpirationDate__c",
                      "desc": "Account SLAExpirationDate__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*date",
                        "display_name": "*date",
                        "short_desc": "Qore data type \"*date\"",
                        "desc": "Qore data type \"*date\"",
                        "supported_options": null,
                        "options": null,
                        "base_type": "date",
                        "mandatory": false,
                        "types_accepted": ["date", "nothing", "null"],
                        "types_returned": ["date", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "SLASerialNumber__c": {
                      "name": "SLASerialNumber__c",
                      "desc": "Account SLASerialNumber__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "SLA__c": {
                      "name": "SLA__c",
                      "desc": "Account SLA__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "ShippingAddress": {
                      "name": "ShippingAddress",
                      "desc": "Account Shipping info",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*hash<auto>",
                        "display_name": "*hash<auto>",
                        "short_desc": "Qore data type \"*hash<auto>\"",
                        "desc": "Qore data type \"*hash<auto>\"",
                        "supported_options": null,
                        "options": null,
                        "base_type": "hash",
                        "mandatory": false,
                        "types_accepted": ["hash<auto>", "nothing", "null"],
                        "types_returned": ["hash<auto>", "nothing"],
                        "fields": {
                          "City": {
                            "name": "City",
                            "desc": "Account Shipping City",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "Country": {
                            "name": "Country",
                            "desc": "Account Shipping Country",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "GeocodeAccuracy": {
                            "name": "GeocodeAccuracy",
                            "desc": "Account Shipping GeocodeAccuracy",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "Latitude": {
                            "name": "Latitude",
                            "desc": "Account Shipping Latitude",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*float",
                              "display_name": "*float",
                              "short_desc": "Qore data type \"*float\"",
                              "desc": "Qore data type \"*float\"",
                              "supported_options": null,
                              "options": null,
                              "base_type": "float",
                              "mandatory": false,
                              "types_accepted": [
                                "float",
                                "int",
                                "integer",
                                "nothing",
                                "null"
                              ],
                              "types_returned": ["float", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "Longitude": {
                            "name": "Longitude",
                            "desc": "Account Shipping Longitude",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*float",
                              "display_name": "*float",
                              "short_desc": "Qore data type \"*float\"",
                              "desc": "Qore data type \"*float\"",
                              "supported_options": null,
                              "options": null,
                              "base_type": "float",
                              "mandatory": false,
                              "types_accepted": [
                                "float",
                                "int",
                                "integer",
                                "nothing",
                                "null"
                              ],
                              "types_returned": ["float", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "PostalCode": {
                            "name": "PostalCode",
                            "desc": "Account Shipping PostalCode",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "State": {
                            "name": "State",
                            "desc": "Account Shipping State",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "Street": {
                            "name": "Street",
                            "desc": "Account Shipping Street",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "*string",
                              "display_name": "*string",
                              "short_desc": "Qore data type \"*string\"",
                              "desc": "Qore data type \"*string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                },
                                "string.empty_to_nothing": {
                                  "type": "bool",
                                  "desc": "if an empty string should be converted to no value"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": false,
                              "types_accepted": ["string", "nothing"],
                              "types_returned": ["string", "nothing"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          }
                        },
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Sic": {
                      "name": "Sic",
                      "desc": "Account Sic",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "SicDesc": {
                      "name": "SicDesc",
                      "desc": "Account SicDesc",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Site": {
                      "name": "Site",
                      "desc": "Account Site",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "TickerSymbol": {
                      "name": "TickerSymbol",
                      "desc": "Account TickerSymbol",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Tradestyle": {
                      "name": "Tradestyle",
                      "desc": "Account Tradestyle",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Type": {
                      "name": "Type",
                      "desc": "Account Type",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "UpsellOpportunity__c": {
                      "name": "UpsellOpportunity__c",
                      "desc": "Account UpsellOpportunity__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "Website": {
                      "name": "Website",
                      "desc": "Account Website",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "YearStarted": {
                      "name": "YearStarted",
                      "desc": "Account YearStarted",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "LastModifiedDate": {
                      "name": "LastModifiedDate",
                      "desc": "Object LastModifiedDate",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "date",
                        "display_name": "Date",
                        "short_desc": "Qore data type \"date\"",
                        "desc": "Qore data type \"date\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "date",
                        "mandatory": true,
                        "types_accepted": ["date"],
                        "types_returned": ["date"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "ChangeEventHeader": {
                      "name": "ChangeEventHeader",
                      "desc": "Salesforce change event info",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "hash<auto>",
                        "display_name": "Hash<auto>",
                        "short_desc": "Qore data type \"hash<auto>\"",
                        "desc": "Qore data type \"hash<auto>\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "hash",
                        "mandatory": true,
                        "types_accepted": ["hash<auto>"],
                        "types_returned": ["hash<auto>"],
                        "fields": {
                          "changeOrigin": {
                            "name": "changeOrigin",
                            "desc": "Only populated for changes done by API apps or from Lightning Experience; empty otherwise. The Salesforce API and the API client ID that initiated the change, if set by the client",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "changeType": {
                            "name": "changeType",
                            "desc": "The operation that caused the change. Can be one of the following values: - `CREATE` - `UPDATE` - `DELETE` - `UNDELETE`\nFor gap events, the change type starts with the `GAP_` prefix: - `GAP_CREATE` - `GAP_UPDATE` - `GAP_DELETE` - `GAP_UNDELETE`\nFor overflow events, the change type is `GAP_OVERFLOW`.",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "changedFields": {
                            "name": "changedFields",
                            "desc": "list of the fields that were changed in an update operation, including the `LastModifiedDate` system field. This field is empty for other operations, including record creation",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "list<auto>",
                              "display_name": "List<auto>",
                              "short_desc": "Qore data type \"list<auto>\"",
                              "desc": "Qore data type \"list<auto>\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "list",
                              "mandatory": true,
                              "types_accepted": ["list<auto>"],
                              "types_returned": ["list<auto>"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "commitNumber": {
                            "name": "commitNumber",
                            "desc": "The system change number (SCN) of a committed transaction, which increases sequentially",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "int",
                              "display_name": "Int",
                              "short_desc": "Qore data type \"int\"",
                              "desc": "Qore data type \"int\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "int",
                              "mandatory": true,
                              "types_accepted": ["int", "integer"],
                              "types_returned": ["int", "integer"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "commitTimestamp": {
                            "name": "commitTimestamp",
                            "desc": "The date and time when the change occurred, represented as the number of milliseconds since `January 1, 1970 00:00:00 GMT`",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "int",
                              "display_name": "Int",
                              "short_desc": "Qore data type \"int\"",
                              "desc": "Qore data type \"int\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "int",
                              "mandatory": true,
                              "types_accepted": ["int", "integer"],
                              "types_returned": ["int", "integer"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "commitUser": {
                            "name": "commitUser",
                            "desc": "The ID of the user that ran the change operation",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "entityName": {
                            "name": "entityName",
                            "desc": "The API name of the standard or custom object that the change pertains to",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "recordIds": {
                            "name": "recordIds",
                            "desc": "One or more record IDs for the changed records (typically only one ID)",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "list<auto>",
                              "display_name": "List<auto>",
                              "short_desc": "Qore data type \"list<auto>\"",
                              "desc": "Qore data type \"list<auto>\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "list",
                              "mandatory": true,
                              "types_accepted": ["list<auto>"],
                              "types_returned": ["list<auto>"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "sequenceNumber": {
                            "name": "sequenceNumber",
                            "desc": "The sequence of the change within a transaction",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "int",
                              "display_name": "Int",
                              "short_desc": "Qore data type \"int\"",
                              "desc": "Qore data type \"int\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "int",
                              "mandatory": true,
                              "types_accepted": ["int", "integer"],
                              "types_returned": ["int", "integer"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          },
                          "transactionKey": {
                            "name": "transactionKey",
                            "desc": "A string that uniquely identifies each Salesforce transaction. You can use this key to identify and group all changes that were made in the same transaction",
                            "default_value": null,
                            "allowed_values": null,
                            "type": {
                              "name": "string",
                              "display_name": "String",
                              "short_desc": "Qore data type \"string\"",
                              "desc": "Qore data type \"string\"",
                              "supported_options": {
                                "qore.no_null": {
                                  "type": "bool",
                                  "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                                },
                                "qore.external_name": {
                                  "type": "string",
                                  "desc": "A note giving the external name for the type"
                                },
                                "string.encoding": {
                                  "type": "string",
                                  "desc": "the output encoding when writing to the type"
                                },
                                "string.max_size_chars": {
                                  "type": "integer",
                                  "desc": "the maximum length of the string in characters"
                                }
                              },
                              "options": {
                                "qore.no_null": true
                              },
                              "base_type": "string",
                              "mandatory": true,
                              "types_accepted": ["string"],
                              "types_returned": ["string"],
                              "fields": {},
                              "can_manage_fields": false,
                              "tags": null
                            }
                          }
                        },
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "zeyos_contact_id__c": {
                      "name": "zeyos_contact_id__c",
                      "desc": "Account zeyos_contact_id__c",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*float",
                        "display_name": "*float",
                        "short_desc": "Qore data type \"*float\"",
                        "desc": "Qore data type \"*float\"",
                        "supported_options": null,
                        "options": null,
                        "base_type": "float",
                        "mandatory": false,
                        "types_accepted": [
                          "float",
                          "int",
                          "integer",
                          "nothing",
                          "null"
                        ],
                        "types_returned": ["float", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    }
                  },
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "schema": {
                "name": "schema",
                "desc": "Salesforce event REST event schema identifier",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 19"
    }
  ],
  "valuemap": [
    {
      "request_id": "K1i8wWa821R4IvQ",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 2,
          "type": "valuemap",
          "name": "regression2",
          "display_name": "Regression2",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "string",
          "dateformat": "DD.MM.YYYY",
          "exception": false,
          "groups": ["test"],
          "value-maps": {
            "key1": {
              "value": "foo",
              "enabled": true
            },
            "key2": {
              "value": "bar",
              "enabled": false
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 2"
    },
    {
      "request_id": "Y9hfz9zxBBs1KUO",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 6,
          "type": "valuemap",
          "name": "issue3102regression3",
          "display_name": "Issue3102regression3",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "int",
          "dateformat": "DD.MM.YYYY",
          "exception": true,
          "groups": ["test"],
          "value-maps": {
            "key1": {
              "value": 1,
              "enabled": true
            },
            "key2": {
              "value": 2,
              "enabled": true
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 6"
    },
    {
      "request_id": "E1ot35r4KupVvAF",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 17,
          "type": "valuemap",
          "name": "SegmentMap",
          "display_name": "Segment Map",
          "short_desc": "Maps MEWS segments to NetSuite segments",
          "desc": "Maps MEWS segments to NetSuite segments; default when no match: `HO : RR : RRT`",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "string",
          "dateformat": "YYYY-MM-DD",
          "exception": false,
          "groups": ["JULIUS-MEINL"],
          "value-maps": {
            "10-Retail": {
              "value": "HO : RR : RRT : RETL",
              "enabled": true
            },
            "12-Negotiated": {
              "value": "HO : RR : RRT : NEGT",
              "enabled": true
            },
            "11-Discount": {
              "value": "HO : RR : RRT : DISC",
              "enabled": true
            },
            "22-Government Group": {
              "value": "HO : RR : RRG : GOVT",
              "enabled": true
            },
            "20-Corporate Group": {
              "value": "HO : RR : RRG : CRPX",
              "enabled": true
            },
            "23-Tour / Wholesalers Group": {
              "value": "HO : RR : RRG : TOUR",
              "enabled": true
            },
            "24-SMERF Group": {
              "value": "HO : RR : RRG : SMRF",
              "enabled": true
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 17"
    },
    {
      "request_id": "joKM8eRY7sXitAk",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 7,
          "type": "valuemap",
          "name": "issue3102vmap",
          "display_name": "Issue3102vmap",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "int",
          "dateformat": "YYYY-MM-DD",
          "exception": true,
          "groups": ["issue3102group"],
          "value-maps": {
            "key1": {
              "value": 1,
              "enabled": false
            },
            "key2": {
              "value": 2,
              "enabled": true
            },
            "key3": {
              "value": 3,
              "enabled": false
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 7"
    },
    {
      "request_id": "uiEONuRJM06M2xi",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 1,
          "type": "valuemap",
          "name": "regression1",
          "display_name": "Regression1",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "string",
          "dateformat": "DD.MM.YYYY",
          "exception": true,
          "groups": ["test"],
          "value-maps": {
            "key1": {
              "value": "foo",
              "enabled": true
            },
            "key2": {
              "value": "bar",
              "enabled": false
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 1"
    },
    {
      "request_id": "YkuhDVIm5QBGl4E",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 114,
          "type": "valuemap",
          "name": "value-map-test-date",
          "desc": "Value map test",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "date",
          "dateformat": "YYYY-MM-DD HH:mm:SS",
          "exception": false,
          "value-maps": {
            "a": {
              "value": "2024-04-02T13:30:00.000000+02:00",
              "enabled": true
            },
            "b": {
              "value": "2024-04-02T16:00:00.000000+02:00",
              "enabled": true
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 114"
    },
    {
      "request_id": "srrDDCFRDrYMvhn",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 115,
          "type": "valuemap",
          "name": "value-map-test-string",
          "desc": "Value map test",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "string",
          "dateformat": "YYYY-MM-DD",
          "exception": false,
          "value-maps": {
            "a": {
              "value": "1",
              "enabled": true
            },
            "b": {
              "value": "two",
              "enabled": true
            },
            "c": {
              "value": "3.0",
              "enabled": true
            },
            "d": {
              "value": "2024-04-02",
              "enabled": true
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 115"
    },
    {
      "request_id": "ixuqxAFI4R0oZb8",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 113,
          "type": "valuemap",
          "name": "value-map-test-int",
          "desc": "Value map test",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "int",
          "dateformat": "YYYY-MM-DD",
          "exception": false,
          "value-maps": {
            "a": {
              "value": 1,
              "enabled": true
            },
            "b": {
              "value": 2,
              "enabled": true
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 113"
    },
    {
      "request_id": "RBoUIskcgkonAHK",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 18,
          "type": "valuemap",
          "name": "VatCodes",
          "display_name": "Vat Codes",
          "short_desc": "Maps from MEWS VAT rates to NetSuite VAT codes",
          "desc": "Maps from MEWS VAT rates to NetSuite VAT codes; default when no mapping exists: `VAT:UNDEF-CZ`",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "string",
          "dateformat": "YYYY-MM-DD",
          "exception": false,
          "groups": ["JULIUS-MEINL"],
          "value-maps": {
            "0": {
              "value": "N/A:Mews",
              "enabled": true
            },
            "0.1": {
              "value": "VAT:SR-CZ",
              "enabled": true
            },
            "0.15": {
              "value": "VAT:R-CZ",
              "enabled": true
            },
            "0.21": {
              "value": "VAT:S-CZ",
              "enabled": true
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 18"
    },
    {
      "request_id": "VrRLnTpx9Iup2Zf",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 3,
          "type": "valuemap",
          "name": "regression3",
          "display_name": "Regression3",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "int",
          "dateformat": "DD.MM.YYYY",
          "exception": true,
          "groups": ["test"],
          "value-maps": {
            "key1": {
              "value": 1,
              "enabled": true
            },
            "key2": {
              "value": 2,
              "enabled": true
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 3"
    }
  ]
}
