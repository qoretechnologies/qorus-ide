{
  "class": [
    {
      "request_id": "UNVN54EzAsvr8z4",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 441,
          "type": "class",
          "desc": "test class",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass issue3333class {\n    string base() {\n        return \"base\";\n    }\n}\n",
          "name": "issue3333class",
          "display_name": "Issue3333class",
          "short_desc": "test class",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 441"
    },
    {
      "request_id": "yQCTYzwmkGchDuo",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 112,
          "type": "class",
          "desc": "test",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass issue3563CreateProcessor inherits AbstractDataProcessor {\n    private submitImpl(code enqueue, auto _data) {\n        auto newData = {\n            \"staticdata\": {\n                \"orders\": {\n                    \"1\": {\"id\": 10, \"currency_to_buy\": \"USD\", \"currency_to_sell\": \"EUR\", \"amount\": 100},\n                    \"2\": {\"id\": 11, \"currency_to_buy\": \"CZK\", \"currency_to_sell\": \"EUR\", \"amount\": 600}\n                },\n                \"exchange_rates\": {\n                    \"EUR\": 1.0,\n                    \"CZK\": 25.0,\n                    \"USD\": 22.0\n                }\n            }\n        };\n        UserApi::logInfo(\"Creating Processor was called, %y\", newData);\n        enqueue(newData);\n    }\n\n    private bool supportsBulkApiImpl() {\n        return True;\n    }\n}\n",
          "name": "issue3563CreateProcessor",
          "display_name": "Issue3563 Create Processor",
          "short_desc": "test",
          "version": "1.0",
          "processor": {}
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 112"
    },
    {
      "request_id": "O8TxhJfIpXcYUac",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 132,
          "type": "class",
          "desc": "Qore test step class",
          "lang": "qore",
          "source": "%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\nclass QoreSimpleTestStep7 inherits QorusEventStep {\n    primary() {\n        skipEvent();\n    }\n}\n",
          "name": "QoreSimpleTestStep7",
          "display_name": "Qore Simple Test Step7",
          "short_desc": "Qore test step class",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 132"
    },
    {
      "request_id": "xXuB9oxqwEdZYyb",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 52,
          "type": "class",
          "desc": "## Summary \n\nBuilding block job base class for polling for files from an SFTP server and creating a workflow order from files polled.\n\nThe local context data for the internal workflow order creation call is the file event data as described by data type `qoretechnologies/building-blocks/sftp/event`; therefore this information can be used when creating the order; for example `create-workflow-staticdata` = `$local:*` would set the initial static order data to the file event hash.\n\nDuplicates can be detected from order keys, i.e. if one of the following config items is used: \n- `create-workflow-specific-unique-key`\n- `create-workflow-unique-key`\n- `create-workflow-global-unique-key`\n\nIn this case this object also contains configuration that allows for an alternative \"duplicate-file-handling\" workflow order to be created.  See config items in the **SFTP Polling Workflow Creation Duplicate File Handling** group for more information.\n\n**Note** The `sftp-polling-interval-secs` config item is always ignored in this class; this class must be used as the base class for a job, and the job's schedule determines the polling interval.\n\n## Connectors\n\n### Input/Output Connector `runJob`\n\nRuns the poll action once.",
          "lang": "qore",
          "source": "# -*- mode: qore; indent-tabs-mode nil -*-\n\n%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\n#! SFTP polling job that creates a workflow order for each file polled\nclass BBM_SftpPollerCreateOrderJob inherits QorusJob, BBM_SftpPollerCreateOrder {\n    private {\n        #! list of files polled\n        list<hash<auto>> poll_list;\n\n        #! file event keys to save for job info\n        const EventKeys = (\n            \"name\",\n            \"size\",\n            \"transfer_fime\",\n            \"local_path\",\n            \"workflow_instanceid\",\n            \"remote_status\",\n            \"order_status\",\n            \"duplicate\",\n        );\n    }\n\n    #! implements the job action\n    run() {\n        runJob();\n    }\n\n    #! connector for running the job\n    runJob() {\n        poll_list = ();\n        on_exit saveInfo(poll_list);\n        runOnce();\n    }\n\n    #! called for each matching file individually whenever matching files are polled with the list of matching file names; if any error occurs here, the error is logged and the polling operation is retried\n    /** @param fih a hash of file data and information with the following keys:\n        - \\c name: the name of the file, link, or directory\n        - \\c size: the size of the file in bytes\n        - \\c uid: the UID of the owner of the file\n        - \\c gid: the GID of the owner of the file\n        - \\c mode: the permissions / mode of the file\n        - \\c atime: the last accessed date/time of the file\n        - \\c mtime: the last modified date/time of the file\n        - \\c type: the type of file; one of: \\c \"REGULAR\", \\c \"DIRECTORY\", \\c \"SYMBOLIC-LINK\", \\c \"BLOCK-DEVICE\",\n          \\c \"CHARACTER-DEVICE\", \\c \"FIFO\", \\c \"SYMBOLIC-LINK\", \\c \"SOCKET\", or \\c \"UNKNOWN\"\n        - \\c perm: a string giving UNIX-style permissions for the file (ex: \"-rwxr-xr-x\")\n        - \\c data: this key is only present if \\c sftp-polling-file-connection not set; in this case the remote file\n          data is retrieved in memory and stored in this key as binary data\n        - \\c filepath: the remote filepath relative to SFTP root directory\n        - \\c local_path: this key is set to a string giving the local path where the file's data is stored if\n          config item \\c sftp-polling-file-connection is set\n\n        If config item \\c sftp-polling-delete-file is true, then the remote file is deleted here.\n\n        Otherwise, if \\c sftp-polling-move-target is true, then the remove file is moved to the target location on the\n        remove server here.\n    */\n    hash<auto> postSingleFileEvent(hash<auto> event) {\n        event = BBM_SftpPollerCreateOrder::postSingleFileEvent(event);\n        poll_list += event{EventKeys};\n        return event;\n    }\n}\n",
          "name": "BBM_SftpPollerCreateOrderJob",
          "display_name": "BBM Sftp Poller Create Order Job",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "class-connectors": [
            {
              "name": "runJob",
              "type": "input-output",
              "method": "runJob"
            }
          ],
          "configItems": [
            {
              "name": "create-workflow-order-mapper",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-version",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-order-status",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-duplicate-handling",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-connection-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-mask",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-mask-regex",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-regex-options",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-file-connection",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-file-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-file-temp-template",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-minage",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-encoding",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-delete-file",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-move-target",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-file-connection",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-name-template",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-workflow-name",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-workflow-version",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-order-mapper",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-output-data",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-interval-secs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-staticdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-sensitivedata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-dynamicdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-tempdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-external-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-order-keys",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-specific-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-global-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-parent-workflow-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-priority",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "create-workflow-scheduled",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-staticdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-sensitivedata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-dynamicdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-tempdata",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-external-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-order-keys",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-specific-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-global-unique-key",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-parent-workflow-id",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-priority",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            },
            {
              "name": "sftp-polling-duplicate-scheduled",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_SftpPollerCreateOrder",
                "interface-version": "1.0"
              }
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 52"
    },
    {
      "request_id": "OVWQ92dFgKAwGkK",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 104,
          "type": "class",
          "desc": "Simple class processor",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3485Processor3 inherits AbstractDataProcessor {\n    private submitImpl(code enqueue, auto rec) {\n        UserApi::logInfo(\"Issue3485Processor3 was called: %y\", rec);\n        *hash<auto> pstate = JobApi::getPersistentStateData();\n        JobApi::savePersistentStateData(pstate + rec);\n    }\n\n    private bool supportsBulkApiImpl() {\n        return True;\n    }\n}\n",
          "name": "Issue3485Processor3",
          "display_name": "Issue3485 Processor3",
          "short_desc": "Simple class processor",
          "version": "1.0",
          "processor": {},
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 104"
    },
    {
      "request_id": "nPhPOnHdPrBpkUL",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 105,
          "type": "class",
          "desc": "issue 3485 processor test",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3485Processor4 inherits AbstractDataProcessor {\n    private {\n        list<hash<auto>> state;\n    }\n\n    private submitImpl(code enqueue, auto _data) {\n        if (_data.typeCode() != NT_HASH) {\n            throw \"DATA-ERROR\", sprintf(\"got type %y; expecting \\\"hash\\\"\", _data.type());\n        }\n        state += map $1, _data.contextIterator();\n\n        enqueue(_data);\n    }\n\n    private flushImpl(code enqueue) {\n        # write all state dat to job\n        JobApi::logInfo(\"saving state data to job: %N\", state);\n        JobApi::saveInfo(state);\n    }\n\n    private bool supportsBulkApiImpl() {\n        return True;\n    }\n}\n",
          "name": "Issue3485Processor4",
          "display_name": "Issue3485 Processor4",
          "short_desc": "issue 3485 processor test",
          "version": "1.0",
          "processor": {
            "processor-input-type": {
              "type": "type",
              "name": "qore",
              "can_manage_fields": true,
              "path": "/hash"
            },
            "processor-output-type": {
              "type": "type",
              "name": "qore",
              "can_manage_fields": true,
              "path": "/hash"
            }
          },
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 105"
    },
    {
      "request_id": "naieoF1Zr73ExL4",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 3,
          "type": "class",
          "desc": "## Summary\n\nBuilding block that throws an `FSM-BREAK` exception to provide a `break` action when executing an FSM.\n\nThere is no configuration\n\n**NOTE**:  This building block's functionality has been superceded by an API (request - response) data provider; it's recommended to use the `util/break` API data provider in the `qorus-api` factory instead\n\n## Connectors\n\n### Input Connector doBreak\n\nThrows an `FSM-BREAK` exception to provide a `break` action when executing an FSM.\n\nInput data is ignored\n",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BBM_Break {\n    static nothing doBreak(auto input) {\n        throw \"FSM-BREAK\";\n    }\n}\n",
          "name": "BBM_Break",
          "display_name": "BBM Break",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "class-connectors": [
            {
              "name": "doBreak",
              "type": "input",
              "method": "doBreak"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 3"
    },
    {
      "request_id": "X5PCBD4lgNZpPat",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 63,
          "type": "class",
          "desc": "## Summary\n\nAbstract base class for HTTP handler services.\n\nAs an abstract class, it cannot support connectors; it is entirely driven by configuration.",
          "lang": "qore",
          "source": "# -*- mode: qore; indent-tabs-mode: nil -*-\n\n%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\n#! The base HTTP handler class\nclass BBM_HttpHandlerBase inherits AbstractServiceHttpHandler, BBM_HttpAuthenticatorBase, BBM_CorsBase {\n    #! Creates the object\n    constructor(AbstractAuthenticator auth = BBM_HttpAuthenticatorBase::getAuthenticator(\"http-auth-name\",\n            \"http-auth-cookie\", \"http-auth-redirect\"))\n            : AbstractServiceHttpHandler(\n            ServiceApi::getConfigItemValue(\"http-root-uri\"),\n            ServiceApi::getConfigItemValue(\"http-match-content-types\"),\n            ServiceApi::getConfigItemValue(\"http-match-headers\"),\n            auth,\n            ServiceApi::getConfigItemValue(\"http-root-uri-is-regex\")), BBM_CorsBase(\"http\") {\n    }\n\n    #! top-level request handling method\n    hash<HttpResponseInfo> handleRequest(HttpListenerInterface listener, Socket s, hash<auto> cx, hash<auto> hdr, *data body) {\n        if (hdr.method == \"OPTIONS\") {\n            return handleOptions(cx);\n        }\n        hash<HttpResponseInfo> rv = AbstractServiceHttpHandler::handleRequest(listener, s, cx, hdr, body);\n        rv.hdr += getCorsResponseHeaders(cx);\n        return rv;\n    }\n}\n\n#! The HTTP service base class; includes a parametrized handler class as well\nclass BBM_HttpServiceBase inherits BBM_HttpServiceGenericBase {\n}\n",
          "name": "BBM_HttpServiceBase",
          "display_name": "BBM Http Service Base",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "configItems": [
            {
              "name": "http-listener-bind-address",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-cert-location",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-cert-format",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-location",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-format",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-key-password",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-ssl-mode",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-accept-all-certs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-listener-capture-client-certs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "http-root-uri",
              "description": "The root URI path for the HTTP service",
              "config_group": "HTTP Handler",
              "type": "string",
              "strictly_local": true
            },
            {
              "name": "http-root-uri-is-regex",
              "description": "set to true if 'root-uri' is a regular expression pattern",
              "config_group": "HTTP Handler",
              "type": "bool",
              "default_value": false
            },
            {
              "name": "http-auth-name",
              "description": "A string identifying the authenticator; the following values are allowed:\n - **`default`**: the default Qorus authenticator; new connections must have valid credentials for Qorus\n - **`default-basic`**: the same as **`default`** except in case of an unauthorized request, a `WWW-Authenticate` header is returned indicating that HTTP basic authentication is required\n - **`permissive`**: no authentication is required; all requests are automatically accepted\n - **`cookie`**: same as `default` with also support for cookie-based authentication; the cookie name is defined with the `http-auth-cookie` config item",
              "config_group": "HTTP Handler",
              "type": "string",
              "default_value": "default",
              "allowed_values": [
                "permissive",
                "default",
                "default-basic",
                "cookie"
              ],
              "strictly_local": true,
              "default_value_true_type": "string"
            },
            {
              "name": "http-auth-cookie",
              "description": "A string providing the name of the cookie for cookie-based authentication; only used when `http-auth-name` is `cookie`",
              "config_group": "HTTP Handler",
              "type": "string",
              "default_value": "qorus_auth_token",
              "strictly_local": true,
              "default_value_true_type": "string"
            },
            {
              "name": "http-auth-redirect",
              "description": "A string providing the URL to redirect unauthenticated requests; only used when `http-auth-name` is `cookie`",
              "config_group": "HTTP Handler",
              "type": "*string",
              "strictly_local": true
            },
            {
              "name": "http-match-content-types",
              "description": "an optional list of string content types that will cause external requests to match this handler",
              "config_group": "HTTP Handler",
              "type": "*list"
            },
            {
              "name": "http-match-headers",
              "description": "an optional list of string header names (in lower case) that will cause external requests with those headers to match this handler",
              "config_group": "HTTP Handler",
              "type": "*list"
            },
            {
              "name": "http-cors-enable",
              "description": "set to `true` to enable CORS",
              "config_group": "HTTP Handler CORS",
              "type": "bool",
              "default_value": false,
              "strictly_local": true
            },
            {
              "name": "http-cors-methods",
              "description": "HTTP methods allowed with CORS; ignored if `http-cors-enable` is `false`",
              "config_group": "HTTP Handler CORS",
              "type": "list",
              "default_value": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS"
              ],
              "strictly_local": true,
              "default_value_true_type": "list"
            },
            {
              "name": "http-cors-max-age",
              "description": "the value for the `Access-Control-Max-Age` header",
              "config_group": "HTTP Handler CORS",
              "type": "int",
              "default_value": 9999999,
              "strictly_local": true,
              "default_value_true_type": "int"
            },
            {
              "name": "http-cors-headers",
              "description": "values for the `Access-Control-Allow-Headers` header",
              "config_group": "HTTP Handler CORS",
              "type": "*list",
              "default_value": [
                "Content-Type",
                "content-type",
                "Content-Language",
                "content-language",
                "Accept",
                "Accept-Language",
                "Authorization"
              ],
              "strictly_local": true,
              "default_value_true_type": "*list"
            },
            {
              "name": "http-cors-credentials",
              "description": "if `true` then the `Access-Control-Allow-Credentials: true` header is sent",
              "config_group": "HTTP Handler CORS",
              "type": "bool",
              "default_value": false,
              "strictly_local": true
            },
            {
              "name": "http-listener-allow-sharing",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_HttpServiceGenericBase",
                "interface-version": "1.0"
              }
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 63"
    },
    {
      "request_id": "DoYVFLytc83Lai8",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 55,
          "type": "class",
          "desc": "## Summary\n\n[MQTT Paho](https://www.eclipse.org/paho/) client for publishing and listening to MQTT messages.\n\nThis class is the base class for the publishing and listening classes.  There are no connectors; it is driven entierly by configuration.",
          "lang": "java",
          "source": "/** Qorus MQTT Paho client building block\n *\n */\n\nimport qore.OMQ.UserApi.UserApi;\n\nimport org.eclipse.paho.client.mqttv3.MqttClient;\nimport org.eclipse.paho.client.mqttv3.MqttConnectOptions;\nimport org.eclipse.paho.client.mqttv3.MqttException;\nimport org.eclipse.paho.client.mqttv3.MqttMessage;\nimport org.eclipse.paho.client.mqttv3.MqttClientPersistence;\nimport org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;\nimport org.eclipse.paho.client.mqttv3.MqttCallback;\nimport org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;\n\nimport java.util.Properties;\nimport java.util.UUID;\n\nimport org.qore.jni.Hash;\nimport org.qore.jni.QoreException;\n\nimport qore.OMQ.Observable;\n\nclass BBM_MqttPahoClient extends MqttClient {\n    protected MqttConnectOptions connOpts;\n\n    protected static Hash connection_options;\n\n    /** Creates the object from configuration in config items\n     */\n    public BBM_MqttPahoClient() throws Throwable {\n        super(getConnectionUri(), getConnectionClientId(), getPersistence());\n        connOpts = getConnectionOptions();\n    }\n\n    public MqttConnectOptions getConnectionOptionsObject() {\n        return connOpts;\n    }\n\n    public Hash getConnectionOptionsHash() {\n        return connection_options;\n    }\n\n    /** Connects to the server\n     */\n    public void connect() throws MqttException {\n        try {\n            UserApi.logInfo(\"Connecting to MQTT server...\");\n        } catch (Throwable t) {\n            throw new RuntimeException(t);\n        }\n        super.connect(connOpts);\n        try {\n            UserApi.logInfo(\"Connected to server: %y\", getCurrentServerURI());\n        } catch (Throwable t) {\n            throw new RuntimeException(t);\n        }\n    }\n\n    /** Disconnects from the server\n     */\n    public void disconnect() throws MqttException {\n        try {\n            UserApi.logInfo(\"Disconnecting from server: %y\", getCurrentServerURI());\n        } catch (Throwable t) {\n            throw new RuntimeException(t);\n        }\n        super.disconnect();\n    }\n\n    public static String getConnectionUri() throws Throwable {\n        // we get an option with a \"getOptions\" method that has to be invoked to get the connection hash\n        Object co = UserApi.getUserConnection(\n            (String)UserApi.getConfigItemValue(\"mqtt-paho-connection-name\")\n        );\n        connection_options = (Hash)co.getClass().getMethod(\"getOptions\").invoke(co);\n        UserApi.logInfo(\"connection_options: %y\", connection_options);\n        String uri = (String)connection_options.get(\"mqtt_uri\");\n        UserApi.logInfo(\"using URI: %y\", uri);\n        return uri;\n    }\n\n    /** Returns the URI for the connection\n     */\n    public static String getConnectionClientId() throws Throwable {\n        String client_id = (String)connection_options.get(\"client-id\");\n        if (client_id == null) {\n            // generate a client ID automatically\n            Hash info = (Hash)UserApi.getUserContextInfo();\n            client_id = String.format(\"%s %s v%s (%d) %s\",\n                (String)info.get(\"type\"),\n                (String)info.get(\"name\"),\n                (String)info.get(\"version\"),\n                (Long)info.get(\"id\"),\n                UUID.randomUUID().toString()\n            );\n        }\n        UserApi.logInfo(\"using client_id: %y\", client_id);\n        return client_id;\n    }\n\n    /** Returns a persistence object for the connection\n     */\n    public static MqttClientPersistence getPersistence() {\n        return new MemoryPersistence();\n    }\n\n    /** Returns an MqttConnectOptions object based on configuration\n     */\n    public static MqttConnectOptions getConnectionOptions() throws Throwable {\n        MqttConnectOptions connOpts = new MqttConnectOptions();\n\n        boolean auto_reconnect = (boolean)connection_options.get(\"auto-reconnect\");\n        connOpts.setAutomaticReconnect(auto_reconnect);\n\n        boolean clean_session = (boolean)connection_options.get(\"clean-session\");\n        connOpts.setCleanSession(clean_session);\n\n        int connection_timeout = (int)(long)(Long)connection_options.get(\"connection-timeout-secs\");\n        connOpts.setConnectionTimeout(connection_timeout);\n\n        int keep_alive_interval = (int)(long)(Long)connection_options.get(\"keep-alive-interval-secs\");\n        connOpts.setKeepAliveInterval(keep_alive_interval);\n\n        int max_in_flight = (int)(long)(Long)connection_options.get(\"max-in-flight\");\n        connOpts.setMaxInflight(max_in_flight);\n\n        String mqtt_version = (String)connection_options.get(\"mqtt-version\");\n        if (mqtt_version.equals(\"MQTT_VERSION_3_1_1\")) {\n            connOpts.setMqttVersion(MqttConnectOptions.MQTT_VERSION_3_1_1);\n        } else if (mqtt_version.equals(\"MQTT_VERSION_3_1\")) {\n            connOpts.setMqttVersion(MqttConnectOptions.MQTT_VERSION_3_1);\n        }\n\n        String username = (String)connection_options.get(\"username\");\n        if (username != null) {\n            connOpts.setUserName(username);\n        }\n\n        String password = (String)connection_options.get(\"password\");\n        if (password != null) {\n            connOpts.setPassword(password.toCharArray());\n        }\n\n        // SSL properties\n        Hash ssl_props = (Hash)connection_options.get(\"ssl-properties\");\n        if (ssl_props != null) {\n            Properties props = new Properties();\n            for (var entry : ssl_props.entrySet()) {\n                String key = getString(entry.getKey(), \"SSL property key\");\n                String value = getString(entry.getValue(), \"SSL property value\");\n                props.setProperty(key, value);\n            }\n            connOpts.setSSLProperties(props);\n        }\n\n        String[] server_uris = (String[])connection_options.get(\"server-uris\");\n        String[] new_server_uris;\n        String mqtt_uri = (String)connection_options.get(\"mqtt-uri\");\n        if (server_uris != null && server_uris.length > 0) {\n            new_server_uris = new String[server_uris.length + 1];\n            new_server_uris[0] = mqtt_uri;\n            System.arraycopy(server_uris, 0, new_server_uris, 1, server_uris.length);\n            connOpts.setServerURIs(new_server_uris);\n        } else {\n            new_server_uris = null;\n        }\n\n        UserApi.logInfo(\"MqttClient connection options: servers: %y username: %y password: %s auto_reconnect: %y \" +\n            \"clean_session: %y connection_timeout: %ds keep_alive_interval: %ds max_in_flight: %d mqtt_version: %y \" +\n            \"ssl_props: %y\", new_server_uris == null ? mqtt_uri : new_server_uris, username,\n            password == null ? \"null\" : \"<masked>\", auto_reconnect, clean_session, connection_timeout,\n            keep_alive_interval, max_in_flight, mqtt_version, ssl_props);\n\n        return connOpts;\n    }\n\n    protected static String getString(Object v, String what) throws Throwable {\n        if (v == null) {\n            throw new QoreException(\"INVALID-PROPERTY-TYPE\", String.format(\"got null in %s\", what));\n        }\n        if (!(v instanceof String)) {\n            throw new QoreException(\"INVALID-PROPERTY-TYPE\", String.format(\"got type %s in %s; expected String\",\n                v.getClass().getName(), what));\n        }\n        return (String)v;\n    }\n}\n",
          "name": "BBM_MqttPahoClient",
          "display_name": "BBM Mqtt Paho Client",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "configItems": [
            {
              "name": "mqtt-paho-connection-name",
              "description": "The name of the MQTT Paho connection to use",
              "config_group": "MQTT Paho Main",
              "type": "connection"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 55"
    },
    {
      "request_id": "SMzi86WcJUvMNWx",
      "tab_token": "none",
      "data": {
        "iface_kind": "class",
        "class": {
          "id": 23,
          "type": "class",
          "desc": "## Summary\n\nThrows an exception\n\n**NOTE**:  This building block's functionality has been superceded by an API (request - response) data provider; it's recommended to use the `util/throw-exception` API data provider in the `qorus-api` factory instead\n\n## Connectors\n\n### Input Connector throwException\n\nThis connector throws an exception according to the configuration.\n\nInput data is available as `$local:input` when resolving config items with this connector.",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BBM_ThrowException {\n    static throwException(auto input) {\n        hash<auto> local_context = {\"input\": input};\n        throw UserApi::getConfigItemValue(\"throw-exception-err\", local_context),\n            UserApi::getConfigItemValue(\"throw-exception-desc\", local_context),\n            UserApi::getConfigItemValue(\"throw-exception-arg\", local_context);\n    }\n}\n",
          "name": "BBM_ThrowException",
          "display_name": "BBM Throw Exception",
          "short_desc": "## Summary",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "class-connectors": [
            {
              "name": "throwException",
              "type": "input",
              "method": "throwException"
            }
          ],
          "configItems": [
            {
              "name": "throw-exception-err",
              "description": "The error code for the exception, by convention in upper-case letters with words separated by dashes",
              "config_group": "Throw Exception Config",
              "type": "string",
              "default_value": "EXCEPTION",
              "strictly_local": true,
              "default_value_true_type": "string"
            },
            {
              "name": "throw-exception-desc",
              "description": "The description of the exception",
              "config_group": "Throw Exception Config",
              "type": "string",
              "strictly_local": true
            },
            {
              "name": "throw-exception-arg",
              "description": "The `arg` value of the exception",
              "config_group": "Throw Exception Config",
              "type": "any",
              "strictly_local": true
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got class 23"
    }
  ],
  "connection": [
    {
      "request_id": "YzkWrascNzXxTDd",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 323,
          "type": "connection",
          "name": "servicenow",
          "display_name": "Servicenow",
          "short_desc": "ServiceNow",
          "desc": "ServiceNow",
          "url": "snrests://dev81239.service-now.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_auth_url": {
              "type": "string",
              "value": "/oauth_auth.do"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_grant_type": {
              "type": "string",
              "value": "authorization_code"
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_token_url": {
              "type": "string",
              "value": "/oauth_token.do"
            },
            "ping_method": {
              "type": "string",
              "value": "GET"
            },
            "ping_path": {
              "type": "string",
              "value": "table/sys_properties?sysparm_exclude_reference_link=true&sysparm_suppress_pagination_header=true&sysparm_fields=value&sysparm_query=name=mid.version"
            },
            "ping_headers": {
              "type": "hash",
              "value": "{Accept: \"application/json\"}\n"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "api": {
              "type": "string",
              "value": "now"
            },
            "token": {
              "type": "string",
              "value": "ZMvMzjNGNBf7JNey-z1A84z0G2GatFndILrpBq9QR7SGU8dxKOmdi9JkMzIbNmTRORXXznF3CX15Og4mu2L7dQ"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 323"
    },
    {
      "request_id": "xkU1faxQcDC6Ucl",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 152,
          "type": "connection",
          "name": "dynamics",
          "display_name": "Dynamics",
          "short_desc": "MS Dynamics 365",
          "desc": "MS Dynamics 365",
          "url": "cdsrests://org16333e39.crm4.dynamics.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "json"
            },
            "oauth2_auth_url": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_grant_type": {
              "type": "string",
              "value": "authorization_code"
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_token_url": {
              "type": "string",
              "value": "auto"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "api": {
              "type": "string",
              "value": "9.2"
            },
            "api_profile": {
              "type": "string",
              "value": "dynamics"
            },
            "client_id": {
              "type": "string",
              "value": "b4865eea-0d21-4d89-ba6a-3470d912b96c"
            },
            "client_secret": {
              "type": "string",
              "value": "xR38Q~xVC0LB~m01jX5e-VRM6nm5ZrBSKqSEYckx"
            },
            "tenant": {
              "type": "string",
              "value": "8befcf3d-9b2b-4168-8279-d80b9ba1ef64"
            },
            "oauth2_scopes": {
              "type": "list",
              "value": "[\"offline_access\", \"https://org16333e39.crm4.dynamics.com/.default\"]\n"
            },
            "ping_method": {
              "type": "string",
              "value": "GET"
            },
            "ping_path": {
              "type": "string",
              "value": "/api/data/v9.2/systemusers?$top=1&$select=identityid"
            },
            "ping_headers": {
              "type": "hash",
              "value": "{Accept: \"application/json\"}\n"
            },
            "token": {
              "type": "string",
              "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjlHbW55RlBraGMzaE91UjIybXZTdmduTG83WSIsImtpZCI6IjlHbW55RlBraGMzaE91UjIybXZTdmduTG83WSJ9.eyJhdWQiOiJodHRwczovL29yZzE2MzMzZTM5LmNybTQuZHluYW1pY3MuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvOGJlZmNmM2QtOWIyYi00MTY4LTgyNzktZDgwYjliYTFlZjY0LyIsImlhdCI6MTY5OTM4MzA3MCwibmJmIjoxNjk5MzgzMDcwLCJleHAiOjE2OTkzODc0NjQsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84VUFBQUEyTGZsc3ZqT0tEVHZXa1NJNEFmWjFQb0dnMzRWUHgwaFRjWkp2N0h4OEgyenU3VksvQmlGMGdFRDlxbTNKbjFkVlZ2K0EzNGRHdFkwTCsycmZtcmhtRE5tY1BJcWgrQlExbVJpU1AvRC82WT0iLCJhbXIiOlsicHdkIiwibWZhIl0sImFwcGlkIjoiYjQ4NjVlZWEtMGQyMS00ZDg5LWJhNmEtMzQ3MGQ5MTJiOTZjIiwiYXBwaWRhY3IiOiIxIiwiZmFtaWx5X25hbWUiOiJOaWNob2xzIiwiZ2l2ZW5fbmFtZSI6IkRhdmlkIiwiaXBhZGRyIjoiODQuNDIuMTQ2LjE0NyIsImxvZ2luX2hpbnQiOiJPLkNpUmhaakZtWmpVNVppMWpZV1UyTFRRM1pEUXRPVGhqTWkwMllqWTBOR1l6WXpCbE5qY1NKRGhpWldaalpqTmtMVGxpTW1JdE5ERTJPQzA0TWpjNUxXUTRNR0k1WW1FeFpXWTJOQm9pWkdGMmFXUXVibWxqYUc5c2MwQnhiM0psZEdWamFHNXZiRzluYVdWekxtTnZiU0RLQVE9PSIsIm5hbWUiOiJEYXZpZCBOaWNob2xzIiwib2lkIjoiYWYxZmY1OWYtY2FlNi00N2Q0LTk4YzItNmI2NDRmM2MwZTY3IiwicHVpZCI6IjEwMDMyMDAwNjIyOUIwRTMiLCJyaCI6IjAuQVI4QVBjX3ZpeXViYUVHQ2VkZ0xtNkh2WkFjQUFBQUFBQUFBd0FBQUFBQUFBQUNGQUdNLiIsInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6IjA1VWJKMzQxeHR5dXpMOS1CaTUxUUVMOXFBbGdBbWFfV0VpWkFBVEZmZDQiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiRVUiLCJ0aWQiOiI4YmVmY2YzZC05YjJiLTQxNjgtODI3OS1kODBiOWJhMWVmNjQiLCJ1bmlxdWVfbmFtZSI6ImRhdmlkLm5pY2hvbHNAcW9yZXRlY2hub2xvZ2llcy5jb20iLCJ1cG4iOiJkYXZpZC5uaWNob2xzQHFvcmV0ZWNobm9sb2dpZXMuY29tIiwidXRpIjoiVkJDMWFvVlZNMEdWakpOTm1lSmxBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjBmNTQ2NjEtMmQ3NC00YzUwLWFmYTMtMWVjODAzZjEyZWZlIiwiNjJlOTAzOTQtNjlmNS00MjM3LTkxOTAtMDEyMTc3MTQ1ZTEwIiwiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sInhtc19jYWUiOiIxIn0.mLkW1H4mVaz9v2175UVMyOeubpKH8uJxDDMT0sWeMz7agvgwYL_1q8lWL1TViC4_M7ryt9w11sOAH57DHQ0R9e1nFTBbtSlu6vkGywXI0QvWgsGaXYPNy5Pp7b5q6NJuXT_pbXmzVc9NiKzRk-_3V_mZo_QXdQnLPcavubVHfMmpi4AnvrV8Ser9HK6ALDgKYhVSUf9ph2NwCmNK0I4BJODkb_84NtXUVAyiBJFqz1xFT3QuuRUZ_UgfqXxZt7JQ6ywHgHR5lQ02qjrPIstc7pAMttvt1uYy4naV1FBdoF9AdufWhZWEqD7qy1He7fCRYlAGct-n5F_x1EdcoZkW5g"
            },
            "oauth2_refresh_token": {
              "type": "string",
              "value": "0.AR8APc_viyubaEGCedgLm6HvZOpehrQhDYlNumo0cNkSuWyFAGM.AgABAAEAAAAtyolDObpQQ5VtlI4uGjEPAgDs_wUA9P_ixD0u4b-6mi7CW76KFZ5Fyzghzsl9gmNPfa6cPEYuMm3a625TNAuuC8QJUl-vQlR2zm2allVq_ypp6h8P6zWdnnojHcyz1KL-vTfc3YIX-dMFqeGkgkxe1Ursa8oUt9bzeWfBD5RcdRnLFRkZOv51uCywVOjejPIz5GG0Jaht3vwx4TqpdzjNDTq73LJ6lJ6kgE8nlytYV74s8PMPftJ78ir55fXYzF6cWE_kxDcFgwSRR17hblgXmxlHOsiYstwygmS0A7R3GXIy0qMOM6w2QEzNOi2Kw0AsZcGNwoIvLy57H6buHxcVo203jlRaj1w51M9uMtdx6CdMqr0YzIvmIRJhHfqwLOPz4lC4NwFAw7EizRv-o4f3MbkFmh31pwZXpD2ZH15GcZooseYDon_FHZgin6XzvgGautEH8ATfUxLHsFCK2QtxIgxfu0e2xa5nvMd0Rj0wGa-BGuxtn7voVLuMgvYllII0dLYHYly7c2FmLHD4J4OkI022zjhjFjFGmiMpJrqqbcEmys7nuAZqJcI5U1PkrA90lNOzZVWDJSLK5ZPhUP0saHZjMIBNdXfD5TLW1e2--PNdU2lQ1-6zwb7OtNbxHK-CmmMgH212QlZKyaCo24N5zSnNsZIwsoHTUHOZ1gtSLIvyu4rxPtvjKDrAFx7lHNpbz4qo3pI9KkZZm0weoxHvNxBoYFhwKP_hMq0z0VGO7mwcbRYmv27TYmIoNDS4y0GFdfquzYDaBSXSmzChdRytNVW2fWAZivQJviGI9PRi3SKWfXckfP_AbnWmVqdBMdZPylc"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 152"
    },
    {
      "request_id": "dSlm3VUUgFwWlsh",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 546,
          "type": "connection",
          "name": "gcal-1",
          "display_name": "Google Calendar 1",
          "short_desc": "Connection to Google Calendar server",
          "desc": "Connection to Google Calendar server",
          "url": "gcal://www.googleapis.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "json"
            },
            "oauth2_auth_args": {
              "type": "hash",
              "value": "{access_type: \"offline\", prompt: \"consent\"}\n"
            },
            "oauth2_auth_url": {
              "type": "string",
              "value": "https://accounts.google.com/o/oauth2/v2/auth"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_grant_type": {
              "type": "string",
              "value": "authorization_code"
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "cloud"
            },
            "oauth2_token_url": {
              "type": "string",
              "value": "https://oauth2.googleapis.com/token"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "api_profile": {
              "type": "string",
              "value": "calendar"
            },
            "oauth2_client_id": {
              "type": "string",
              "value": "1007814644021-funaickqu1eatb6qkf2q45ic9ko6b2im.apps.googleusercontent.com"
            },
            "oauth2_client_secret": {
              "type": "string",
              "value": "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"
            },
            "oauth2_scopes": {
              "type": "list",
              "value": "[\"https://www.googleapis.com/auth/calendar\"]\n"
            },
            "ping_headers": {
              "type": "hash",
              "value": "{Accept: \"application/json\"}\n"
            },
            "ping_method": {
              "type": "string",
              "value": "GET"
            },
            "ping_path": {
              "type": "string",
              "value": "/calendar/v3/users/me/calendarList?maxResults=1"
            },
            "token": {
              "type": "string",
              "value": "ya29.a0Ad52N39sZ-6EIEz_2besGgnaxn0V0TtFgM4uWhkiPo1nfmPamLdKo-6PhM00_KyzX-sr1gRVC8VkLsWm9TH-OQoUi0UuJ1M7WS09QA98dUmj310jffMzA-V8naJGb6mXfyvMRwUOaqBuuFYdTUl6XOfCSU7oikIAdDfjYuEaCgYKAW4SARASFQHGX2MimCNYYtsKRNWqbNJl6pNzZQ0174"
            },
            "oauth2_refresh_token": {
              "type": "string",
              "value": "1//095JDCUlyYL_rCgYIARAAGAkSNwF-L9Ira7h2q3Qc-6pYciIHSpchx5wN1pQDb3B1mQ-vwJJuD1_W2BnBIsny7vHvzSEJPPPJw1s"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 546"
    },
    {
      "request_id": "jk2gekP9CkCZGlm",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 668,
          "type": "connection",
          "name": "haltian-staging",
          "display_name": "Haltian Staging",
          "short_desc": "Haltian staging server",
          "desc": "Haltian staging server",
          "url": "ebrests://staging-api.empathicbuilding.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "auto"
            },
            "ping_method": {
              "type": "string",
              "value": "GET"
            },
            "ping_path": {
              "type": "string",
              "value": "v1/current_time"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "token": {
              "type": "string",
              "value": "7cb48559e3b74167bef7e99d120fde38"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 668"
    },
    {
      "request_id": "s7ErL9fgiQBq89B",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 324,
          "type": "connection",
          "name": "salesforce",
          "display_name": "Salesforce",
          "short_desc": "Salesforce",
          "desc": "Salesforce",
          "url": "sfrests://d2o000000aoygea2-dev-ed.my.salesforce.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "json"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_grant_type": {
              "type": "string",
              "value": "authorization_code"
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_scopes": {
              "type": "list",
              "value": "[\"full\", \"api\", \"id\", \"refresh_token\"]\n"
            },
            "ping_method": {
              "type": "string",
              "value": "GET"
            },
            "ping_path": {
              "type": "string",
              "value": "auto"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "api": {
              "type": "string",
              "value": "auto"
            },
            "oauth_url_auth": {
              "type": "string",
              "value": "https://login.salesforce.com/services/oauth2/authorize"
            },
            "oauth_url_token": {
              "type": "string",
              "value": "https://login.salesforce.com/services/oauth2/token"
            },
            "oauth_url_revoke": {
              "type": "string",
              "value": "https://login.salesforce.com/services/oauth2/revoke"
            },
            "client_id": {
              "type": "string",
              "value": "3MVG9Ve.2wqUVx_ZZLVqAnNNUPtJ24F5E8kNtN7xzPJR4tkOqTC0am5KoA6Ow7Kjtuhxpn91X1q304IhDRJHO"
            },
            "client_secret": {
              "type": "string",
              "value": "292DD4088A78F667442658FD4CCFFAC3DD8FAF942409412E5EF808683BD25694"
            },
            "instance_url": {
              "type": "string",
              "value": "https://d2o000000aoygea2-dev-ed.my.salesforce.com"
            },
            "oauth2_refresh_token": {
              "type": "string",
              "value": "5Aep861y7WRFlc9q99lREpNOyfyjCPbyGTokpep9Fn.6dElLCF9OX_0TVaFF7sJRV6t8nBRFRtxMKbOdeqxb4TC"
            },
            "token": {
              "type": "string",
              "value": "00D2o000000aOYG!AR8AQBdlyHbIYRmW9BnXNu_HEzP_5mBvA9BO392mn5iDjokdxRoaXqqNbI.kyWKW8F1A.vUUyyYtA5QYf.rHhA2CMgH2WSv3"
            },
            "id_service_url": {
              "type": "string",
              "value": "https://login.salesforce.com/id/00D2o000000aOYGEA2/0052o0000095F5uAAE"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 324"
    },
    {
      "request_id": "RfRHPyJSRwkbe9S",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 0,
          "type": "connection",
          "name": "omq",
          "display_name": "Omq",
          "short_desc": "Qorus system database",
          "desc": "Qorus system database",
          "url": "db://pgsql:omq/omq@omq{min=3,max=40}",
          "options": {
            "min": {
              "type": "integer",
              "value": 3
            },
            "max": {
              "type": "integer",
              "value": 40
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 0"
    },
    {
      "request_id": "Pi4BH2CR8B2vNlc",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 550,
          "type": "connection",
          "name": "mews",
          "display_name": "Mews",
          "short_desc": "Mews",
          "desc": "Mews",
          "url": "mewsrest://api.mews-demo.com",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "ping_method": {
              "type": "string",
              "value": "POST"
            },
            "ping_path": {
              "type": "string",
              "value": "configuration/get"
            },
            "ping_headers": {
              "type": "hash",
              "value": "{Accept: \"application/json\"}\n"
            },
            "ping_body": {
              "type": "string",
              "value": "auto"
            },
            "client": {
              "type": "string",
              "value": "Qore 2.0.0"
            },
            "access_token": {
              "type": "string",
              "value": "C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D"
            },
            "client_token": {
              "type": "string",
              "value": "E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 550"
    },
    {
      "request_id": "DjftDqPuseHIG5F",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 5,
          "type": "connection",
          "name": "fs-regression",
          "display_name": "Fs Regression",
          "short_desc": "shared filesystem in mseplftp directory",
          "desc": "shared filesystem in mseplftp directory",
          "url": "file:///tmp",
          "options": {
            "readonly": {
              "type": "bool",
              "value": false
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 5"
    },
    {
      "request_id": "X3xvOZCpOrYDliK",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 1,
          "type": "connection",
          "name": "rest-billing-demo",
          "display_name": "Rest Billing Demo",
          "short_desc": "REST billing demo connection",
          "desc": "REST billing demo connection",
          "url": "rests://192.168.16.11:8011/billing-demo",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "auto"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "auto"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "swagger": {
              "type": "string",
              "value": "resource://telco-billing-rest-api:billing-demo-1.0.yaml"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 1"
    },
    {
      "request_id": "dHqKBLQ8m3P8lt4",
      "tab_token": "none",
      "data": {
        "iface_kind": "connection",
        "connection": {
          "id": 573,
          "type": "connection",
          "name": "gingco-int",
          "display_name": "Gingco Int",
          "short_desc": "Gingco INT API endpoint",
          "desc": "Gingco INT API endpoint",
          "url": "gingco://roomreservation-test.intra.fresenius.com/www/webservice/v2/index.php",
          "options": {
            "connect_timeout": {
              "type": "integer",
              "value": 45000
            },
            "error_passthru": {
              "type": "bool",
              "value": false
            },
            "http_version": {
              "type": "string",
              "value": "1.1"
            },
            "redirect_passthru": {
              "type": "bool",
              "value": false
            },
            "ssl_verify_cert": {
              "type": "bool",
              "value": false
            },
            "timeout": {
              "type": "integer",
              "value": 45000
            },
            "data": {
              "type": "string",
              "value": "json"
            },
            "oauth2_auto_refresh": {
              "type": "bool",
              "value": true
            },
            "oauth2_pkce": {
              "type": "bool",
              "value": false
            },
            "oauth2_redirect_url": {
              "type": "string",
              "value": "auto"
            },
            "token_type": {
              "type": "string",
              "value": "Bearer"
            },
            "username": {
              "type": "string",
              "value": "haltian"
            },
            "password": {
              "type": "string",
              "value": "ejzhK8rEXJAuCRf?"
            },
            "client_name": {
              "type": "string",
              "value": "Haltian_API_User"
            },
            "client_password": {
              "type": "string",
              "value": "8JUCYexfwGSLgMy?"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got connection 573"
    }
  ],
  "event": [
    {
      "request_id": "MJeArlu405S461I",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 6,
          "type": "event",
          "desc": "test event type for the REGRESSION-TEST workflow",
          "name": "regression-test",
          "display_name": "Regression Test",
          "short_desc": "test event type for the REGRESSION-TEST workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 6"
    },
    {
      "request_id": "49hxpTjXz6AXwko",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 7,
          "type": "event",
          "desc": "test event type for the EVENT-TEST workflow",
          "name": "event-test",
          "display_name": "Event Test",
          "short_desc": "test event type for the EVENT-TEST workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 7"
    },
    {
      "request_id": "6D5q10S4JpHZhzM",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 1,
          "type": "event",
          "desc": "issue #3490 test event",
          "name": "issue-3490",
          "display_name": "Issue 3490",
          "short_desc": "issue #3490 test event"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 1"
    },
    {
      "request_id": "sjZyPqP9UFQNbQh",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 8,
          "type": "event",
          "desc": "Class workflow test event type",
          "name": "issue3102event",
          "display_name": "Issue3102event",
          "short_desc": "Class workflow test event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 8"
    },
    {
      "request_id": "Fk2VvKmzKd9Jv7p",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 2,
          "type": "event",
          "desc": "Class workflow test event type",
          "name": "qore-class-event-test",
          "display_name": "Qore Class Event Test",
          "short_desc": "Class workflow test event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 2"
    },
    {
      "request_id": "IGY3TEeFPX2wEnm",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 5,
          "type": "event",
          "desc": "test event type for the FEEDBACK-DETACH-CHILD workflow",
          "name": "feedback-detach-child",
          "display_name": "Feedback Detach Child",
          "short_desc": "test event type for the FEEDBACK-DETACH-CHILD workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 5"
    },
    {
      "request_id": "CJS6ohoHDLP0er9",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 0,
          "type": "event",
          "desc": "default system event type",
          "name": "OMQ-SYSTEM-DEFAULT-EVENT-TYPE",
          "display_name": "OMQ SYSTEM DEFAULT EVENT TYPE",
          "short_desc": "default system event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 0"
    },
    {
      "request_id": "gL4XI7uRu89HXNk",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 4,
          "type": "event",
          "desc": "issue 2495 test event type",
          "name": "issue-2495",
          "display_name": "Issue 2495",
          "short_desc": "issue 2495 test event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 4"
    },
    {
      "request_id": "2m3nWCiKZDATLDP",
      "tab_token": "none",
      "data": {
        "iface_kind": "event",
        "event": {
          "id": 3,
          "type": "event",
          "desc": "Java test event type",
          "name": "java-event-test",
          "display_name": "Java Event Test",
          "short_desc": "Java test event type"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got event 3"
    }
  ],
  "errors": [
    {
      "request_id": "NfzNaQat82yejpI",
      "tab_token": "none",
      "data": {
        "iface_kind": "errors",
        "errors": {
          "id": 11,
          "type": "errors",
          "desc": "Test errors",
          "name": "regression-errors",
          "display_name": "Regression Errors",
          "short_desc": "Test errors",
          "errors": [
            {
              "name": "TEST-ERROR-1",
              "desc": "err",
              "severity": "MAJOR",
              "status": "ERROR",
              "business": false,
              "level": "AUTO"
            },
            {
              "name": "TEST-ERROR-2",
              "desc": "err",
              "severity": "MAJOR",
              "status": "ERROR",
              "business": false,
              "level": "AUTO"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got errors 11"
    }
  ],
  "group": [
    {
      "request_id": "ouJmCaK4SwmQY9n",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 454,
          "type": "group",
          "name": "creator-test-group1-d95103d2-807d-4aa5-89f8-7e3648ae250d",
          "display_name": "Creator Test Group1 D95103d2 807d 4aa5 89f8 7e3648ae250d",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 454"
    },
    {
      "request_id": "RpT1Hpf6WiConMh",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 444,
          "type": "group",
          "name": "creator-test-group1-94a8ad53-47c0-4ceb-8f55-5e703870c54f",
          "display_name": "Creator Test Group1 94a8ad53 47c0 4ceb 8f55 5e703870c54f",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 444"
    },
    {
      "request_id": "SowenHAwibK9kXY",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 310,
          "type": "group",
          "name": "issue-3485-W7fHFB9pZu324lA",
          "display_name": "Issue 3485 W7fHFB9p Zu324lA",
          "short_desc": "test empty group",
          "desc": "test empty group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 310"
    },
    {
      "request_id": "TheIrtVDmsy9QA0",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 70,
          "type": "group",
          "name": "JULIUS-MEINL",
          "display_name": "JULIUS MEINL",
          "short_desc": "**Julius Meinl** config",
          "desc": "**Julius Meinl** config"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 70"
    },
    {
      "request_id": "EjQlIRzyIzQVMkz",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 234,
          "type": "group",
          "name": "creator-test-group1-25becc7e-2bad-48da-9a49-8dd526d3c584",
          "display_name": "Creator Test Group1 25becc7e 2bad 48da 9a49 8dd526d3c584",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 234"
    },
    {
      "request_id": "Ve3L4xfJEJSNObW",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 19,
          "type": "group",
          "name": "extra-test",
          "display_name": "Extra Test",
          "short_desc": "extra test objects",
          "desc": "extra test objects"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 19"
    },
    {
      "request_id": "Tl7usPqY2FBl0M9",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 13,
          "type": "group",
          "name": "QORUS-API",
          "display_name": "QORUS API",
          "short_desc": "Qorus API group",
          "desc": "Qorus API group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 13"
    },
    {
      "request_id": "w5ICzqJEFaRYzHa",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 24,
          "type": "group",
          "name": "TEST",
          "display_name": "TEST",
          "short_desc": "Test group",
          "desc": "Test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 24"
    },
    {
      "request_id": "AaHKrBBkBIG9THW",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 120,
          "type": "group",
          "name": "creator-test-group1-f450a199-479a-4512-9d45-2ba45645130e",
          "display_name": "Creator Test Group1 F450a199 479a 4512 9d45 2ba45645130e",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 120"
    },
    {
      "request_id": "QWsk9VS2qqVrpMu",
      "tab_token": "none",
      "data": {
        "iface_kind": "group",
        "group": {
          "id": 225,
          "type": "group",
          "name": "creator-test-group1-a8b3aa54-2491-4729-935f-120e514a9b0c",
          "display_name": "Creator Test Group1 A8b3aa54 2491 4729 935f 120e514a9b0c",
          "short_desc": "creator test group",
          "desc": "creator test group"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got group 225"
    }
  ],
  "job": [
    {
      "request_id": "ZXjWGwLUPmYNne5",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 34,
          "type": "job",
          "desc": "Test for issue #3974 - message states",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3974 inherits QorusJob {\n    run() {\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3974",
          "schedule": "0 0 1 1 *",
          "name": "issue-3974",
          "display_name": "Issue 3974",
          "short_desc": "Test for issue #3974 - message states",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test", "regression"],
          "fsm": [
            {
              "name": "issue-3974",
              "triggers": [
                {
                  "method": "run"
                }
              ]
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 34"
    },
    {
      "request_id": "vLCKJOW8iIjWO8J",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 16,
          "type": "job",
          "desc": "low code test 2",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass LowcodeTest2 inherits QorusJob, QoreTest {\n    run() {\n        hash<auto> h = {\n            \"a\": 1,\n            \"b\": 2,\n            \"c\": 3,\n        };\n        auto rv = executeFsm(\"lowcode-test-2\", h);\n        logInfo(\"map output: %y\", rv);\n        assertEq({\"d\": \"1\", \"e\": \"2\", \"f\": \"3\"}, rv);\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "LowcodeTest2",
          "schedule": "0 0 1 1 *",
          "name": "lowcode-test-2",
          "display_name": "Lowcode Test 2",
          "short_desc": "low code test 2",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["regression", "test"],
          "classes": [
            {
              "id": 1,
              "name": "QoreTest"
            }
          ],
          "fsm": [
            {
              "name": "lowcode-test-2",
              "triggers": []
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 16"
    },
    {
      "request_id": "BRN9abz78wgAPXQ",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 113,
          "type": "job",
          "desc": "tests the BBM_DataProviderCreate building block",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BbmDataProviderCreateTest inherits QorusJob {\n    private {\n        ####### GENERATED SECTION! DON'T EDIT! ########\n        ClassConnections_BbmDataProviderCreateTest class_connections();\n        ############ GENERATED SECTION END ############\n    }\n\n    ####### GENERATED SECTION! DON'T EDIT! ########\n    run() {\n        class_connections.Connection_1();\n    }\n    ############ GENERATED SECTION END ############\n}\n\n####### GENERATED SECTION! DON'T EDIT! ########\nclass ClassConnections_BbmDataProviderCreateTest {\n    private {\n        # map of prefixed class names to class instances\n        hash<auto> class_map;\n    }\n\n    constructor() {\n        class_map = {\n            \"BBM_DataProviderRecordCreate\": new BBM_DataProviderRecordCreate(),\n        };\n    }\n\n    auto callClassWithPrefixMethod(string prefixed_class, string method) {\n        UserApi::logDebug(\"ClassConnections_BbmDataProviderCreateTest: callClassWithPrefixMethod: method: %s class: %y\", method, prefixed_class);\n        return call_object_method_args(class_map{prefixed_class}, method, argv);\n    }\n\n    auto Connection_1(auto params) {\n        UserApi::logDebug(\"Connection_1 called with data: %y\", params);\n\n        UserApi::logDebug(\"calling DataProvider Record Create: %y\", params);\n        return callClassWithPrefixMethod(\"BBM_DataProviderRecordCreate\", \"makeDataProviderRecord\", params);\n    }\n}\n############ GENERATED SECTION END ############\n",
          "base-class-name": "QorusJob",
          "class-name": "BbmDataProviderCreateTest",
          "schedule": "0 0 1 1 *",
          "name": "bbm-data-provider-create-test",
          "display_name": "Bbm Data Provider Create Test",
          "short_desc": "tests the BBM_DataProviderCreate building block",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "classes": [
            {
              "id": 1,
              "name": "BBM_DataProviderRecordCreateBase"
            },
            {
              "id": 2,
              "name": "BBM_DataProviderRecordCreate"
            }
          ],
          "config-items": [
            {
              "name": "dataprovider-create-provider-path",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_DataProviderRecordCreate",
                "interface-version": "1.0"
              }
            },
            {
              "name": "dataprovider-create-input",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_DataProviderRecordCreate",
                "interface-version": "1.0"
              }
            },
            {
              "name": "dataprovider-create-mapper",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_DataProviderRecordCreate",
                "interface-version": "1.0"
              }
            },
            {
              "name": "dataprovider-create-options",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_DataProviderRecordCreate",
                "interface-version": "1.0"
              }
            },
            {
              "name": "dataprovider-create-duplicate-handling",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_DataProviderRecordCreate",
                "interface-version": "1.0"
              }
            },
            {
              "name": "dataprovider-create-output-data",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_DataProviderRecordCreate",
                "interface-version": "1.0"
              }
            },
            {
              "name": "dataprovider-create-upsert",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_DataProviderRecordCreate",
                "interface-version": "1.0"
              }
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 113"
    },
    {
      "request_id": "FZueUUBcx9brsKi",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 27,
          "type": "job",
          "desc": "test for issue #3858: single record search FSM states",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3858 inherits QorusJob {\n    run() {\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3858",
          "schedule": "0 0 * * *",
          "name": "issue-3858",
          "display_name": "Issue 3858",
          "short_desc": "test for issue #3858: single record search FSM states",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "fsm": [
            {
              "name": "issue-3858-1",
              "triggers": [
                {
                  "method": "run"
                }
              ]
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 27"
    },
    {
      "request_id": "OhRAAVM2Qv9K9jr",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 55,
          "type": "job",
          "desc": "test job - long running",
          "lang": "qore",
          "source": "\nsub run() {\n    UserApi::logInfo(\"START test longrun job\");\n\n    omqsleep(300);\n\n    UserApi::logInfo(\"END\");\n}\n\n",
          "schedule": "    ",
          "name": "test-longrun",
          "display_name": "Test Longrun",
          "short_desc": "test job - long running",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, sro"],
          "groups": ["test", "extra-test"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 55"
    },
    {
      "request_id": "D7DzcWZHzDwVwns",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 24,
          "type": "job",
          "desc": "test issue 3810",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3810 inherits QorusJob {\n    run() {\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3810",
          "schedule": "0 0 1 1 *",
          "name": "issue-3810",
          "display_name": "Issue 3810",
          "short_desc": "test issue 3810",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "fsm": [
            {
              "name": "issue-3810",
              "triggers": [
                {
                  "method": "run"
                }
              ]
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 24"
    },
    {
      "request_id": "LHMVpAeMKs5RVUl",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 39,
          "type": "job",
          "desc": "Test for issue #4004: verify that the Qore Datasource* classes can be used from native Java with jdbc connections",
          "lang": "java",
          "source": "import qore.OMQ.*;\nimport qore.OMQ.UserApi.*;\nimport qore.OMQ.UserApi.Job.*;\n\nimport qore.Qore.SQL.DatasourcePool;\n\nimport qore.QoreTest;\n\nclass Issue4004 extends QorusJob {\n    // constructor requires explicit exception declaration due to imported base Qorus class\n    Issue4004() throws Throwable {\n        super();\n    }\n\n    public void run() throws Throwable {\n        String err;\n        try {\n            DatasourcePool ds = new DatasourcePool(\"jdbc:/@\" +\n                \"sqlserver://no-server;port=1433;loginTimeout=1\" +\n                \"{classpath=$OMQ_DIR/user/jar/mssql-jdbc-12.4.0.jre11.jar\" +\n            \"}\");\n            err = \"\";\n        } catch (Throwable e) {\n            err = e.toString();\n            logInfo(err);\n        }\n        QoreTest.assertTrue(err.contains(\"The TCP/IP connection to the host\"));\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue4004",
          "schedule": "0 0 1 1 *",
          "name": "issue-4004",
          "display_name": "Issue 4004",
          "short_desc": "Test for issue #4004: verify that the Qore Datasource* classes can be used from native Java with jdbc connections",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["regression", "test"],
          "classes": [
            {
              "id": 1,
              "name": "QoreTest"
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 39"
    },
    {
      "request_id": "gnR7HmfgLMC5Fp4",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 881,
          "type": "job",
          "desc": "Test for the `trunc` attribute in mappers with DB output columns",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue4046 inherits QorusJob {\n    run() {\n        Mapper m = getMapper(\"issue-4046\");\n        m.mapData({\n            \"num\": 100,\n            \"string\": \"this is a very long string, loger than the column can take\",\n        });\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue4046",
          "schedule": "0 0 * * *",
          "name": "issue-4046",
          "display_name": "Issue 4046",
          "short_desc": "Test for the 'trunc' attribute in mappers with DB output columns",
          "version": "1.0",
          "active": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["regression", "test"],
          "mappers": ["issue-4046"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 881"
    },
    {
      "request_id": "mJw3YKQedI6QYCQ",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 111,
          "type": "job",
          "desc": "test for the Excel read base building block",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BbExcelReadBaseJob inherits QorusJob {\n    run() {\n        BBM_ExcelReadDataProvider excel();\n        saveInfo({\"excel\": map $1, excel.searchRecords()});\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "BbExcelReadBaseJob",
          "schedule": "0 0 1 1 *",
          "name": "bb-excel-read-base-job",
          "display_name": "Bb Excel Read Base Job",
          "short_desc": "test for the Excel read base building block",
          "version": "1.0",
          "active": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["bb-test"],
          "classes": [
            {
              "id": 1,
              "name": "BBM_ExcelReadDataProvider"
            }
          ],
          "config-items": [
            {
              "name": "excel-read-data-cells",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-header-cells",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-header-names",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-headers",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-path",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-stream",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-timezone",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-tolwr",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-worksheet",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-search-where",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            },
            {
              "name": "excel-read-search-options",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_ExcelReadDataProvider",
                "interface-version": "1.0"
              }
            }
          ]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": false,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 111"
    },
    {
      "request_id": "jsDVuxTJlxFCMR5",
      "tab_token": "none",
      "data": {
        "iface_kind": "job",
        "job": {
          "id": 71,
          "type": "job",
          "desc": "example job with configuration items",
          "lang": "qore",
          "source": "\n%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3166JobNeg6 inherits QorusJob {\n    run() {\n    }\n\n    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {\n        return {\n            \"issue-3166-job-config-1\": <ConfigItemInfo>{\n                \"type\": \"*string\",\n                \"default_value\": NOTHING,\n                \"description\": \"This is an example configuration item of type int\",\n                \"strictly_local\": True,\n                \"allowed_values\": (NOTHING, \"ASD\", \"sad\", NOTHING, \"test\")\n            },\n        };\n    }\n}\n",
          "base-class-name": "QorusJob",
          "class-name": "Issue3166JobNeg6",
          "schedule": "* * * * *",
          "name": "issue-3166neg6-job",
          "display_name": "Issue 3166neg6 Job",
          "short_desc": "example job with configuration items",
          "version": "1.0",
          "active": true,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test", "regression"]
        },
        "supports_enable": true,
        "supports_active": true,
        "active": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got job 71"
    }
  ],
  "mapper": [
    {
      "request_id": "1NcSukQK3ZLWFmA",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 44,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "workflow_unique_key": {
              "context": "$qore-expr:{{\"filename\": \"$local:input.name\"}}"
            },
            "staticdata": {
              "use_input_record": true
            }
          },
          "options": {
            "mapper-input": {
              "type": "type",
              "name": "qoretechnologies",
              "path": "/building-blocks/ftp/event",
              "custom-fields": {}
            },
            "mapper-output": {
              "type": "type",
              "name": "qoretechnologies",
              "path": "/qorus-api/workflows/create-order",
              "subtype": "request",
              "custom-fields": {}
            }
          },
          "name": "bb-test-ftp-job",
          "display_name": "Bb Test Ftp Job",
          "short_desc": "maps FTP file events to workflow order data",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 44"
    },
    {
      "request_id": "KHE9Y5dQTLWCOPV",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 30,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "output-1": "{\"sequence\": \"test_sequence_2\"}",
            "output-2": "{\"constant\": get_value(\"testdata2\")}",
            "output-3": "\"test.test2\"",
            "output-4": "{\"code\": string sub(any ignored, hash rec) { return rec.test123 + \"_\" + rec.test2; } }"
          },
          "options": {
            "input": "{\n    \"test\": {\"desc\": \"hash data\"},\n}",
            "output": "{\n    \"output-1\": {},\n    \"output-2\": {},\n    \"output-3\": {\n        \"mand\": True\n    },\n    \"output-4\": {},\n}",
            "runtime": "(\n    \"output-5\": now(),\n)"
          },
          "name": "issue3102mapper3",
          "display_name": "Issue3102mapper3",
          "short_desc": "mapper old syntax test",
          "version": "1.0",
          "author": ["Qore Technologies"],
          "groups": ["test"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 30"
    },
    {
      "request_id": "z3LZpej0jyqUzZl",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 46,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "code": {
              "name": "Code"
            },
            "accounting_category": {
              "name": "Accounting category"
            },
            "ledger_account_code": {
              "name": "Ledger account code"
            },
            "type": {
              "name": "Type"
            },
            "service": {
              "name": "Service"
            },
            "item": {
              "name": "Item",
              "trunc": true
            },
            "creator": {
              "name": "Creator"
            },
            "closed": {
              "name": "Closed"
            },
            "bill": {
              "name": "Bill"
            },
            "assignee": {
              "name": "Assignee"
            },
            "status": {
              "name": "Status"
            },
            "customer": {
              "name": "Customer"
            },
            "vat_rate": {
              "name": "VAT rate"
            },
            "amount": {
              "name": "Amount"
            },
            "qorus_jiid": {
              "context": "$local:job_instanceid"
            }
          },
          "options": {
            "mapper-input": {
              "type": "type",
              "name": "julius-meinl",
              "descriptions": ["Qore data type \"hash<auto>\""],
              "path": "/mews/accounting-export",
              "custom-fields": {}
            },
            "mapper-output": {
              "type": "datasource",
              "name": "omquser",
              "transaction_management": true,
              "path": "/mews_accounting",
              "descriptions": [
                "Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries",
                "Record-based data provider for db table `public.mews_accounting`; supports create, read/search, update, delete, upsert, and bulk operations"
              ],
              "supports_read": true,
              "supports_update": true,
              "supports_create": true,
              "supports_delete": true,
              "supports_messages": "NONE",
              "custom-fields": {}
            }
          },
          "name": "julius-meinl-mews-netsuite-import",
          "display_name": "Julius Meinl Mews Netsuite Import",
          "short_desc": "Imports XLSX exports from MEWS into NetSuite",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 46"
    },
    {
      "request_id": "TpyjyHstzixKzrG",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 1,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "body.BillCycle": {
              "context": "$static:{bill-cycle}"
            },
            "body.Name": {
              "code": "TelcoCreateBillingAccount::getName"
            },
            "body.PaymentInfo.Address": {
              "context": "$sensitive-alias:{payment-1.value.billing-address}"
            },
            "body.PaymentInfo.CVV2": {
              "context": "$sensitive-alias:{payment-1.value.CVV2}"
            },
            "body.PaymentInfo.Expiration": {
              "context": "$sensitive-alias:{payment-1.value.card-expiration-date}"
            },
            "body.PaymentInfo.Id": {
              "context": "$sensitive-alias:{payment-1.svalue}"
            },
            "body.PaymentInfo.Name": {
              "context": "$sensitive-alias:{payment-1.value.name}"
            },
            "body.PaymentInfo.Type": {
              "context": "$sensitive-alias:{payment-1.value.type}"
            },
            "body.RequestId": {
              "context": "$local:workflow_instanceid"
            },
            "body.TaxId": {
              "context": "$sensitive-alias:{party-1.svalue}"
            },
            "body.Type": {
              "context": "$static:type"
            }
          },
          "options": {
            "mapper-input": {
              "type": "type",
              "name": "qore",
              "path": "/hash",
              "custom-fields": {}
            },
            "mapper-output": {
              "type": "connection",
              "name": "rest-billing-demo",
              "path": "/accounts/POST/",
              "subtype": "request",
              "custom-fields": {}
            },
            "output_provider_passive": true
          },
          "name": "telco-create-billing-account",
          "display_name": "Telco Create Billing Account",
          "short_desc": "telco billing account mapper",
          "version": "1.0"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 1"
    },
    {
      "request_id": "AIdUolM3nppoNDF",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 13,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "date1": {
              "context": "$timestamp:{YYYY-MM-DD HH:mm:SS.xx}"
            },
            "date2": {
              "context": "$timestamp:{YYYY-MM-DD HH:mm:SS.xx}",
              "template": true
            },
            "qexp": {
              "context": "$qore-expr:{(\"$info:type\" + \".\" + \"$info:name\" + \" v\" + \"$info:version\")}"
            }
          },
          "options": {
            "mapper-input": {
              "can_manage_fields": true,
              "custom-fields": {},
              "name": "qore",
              "path": "/hash",
              "type": "type"
            },
            "mapper-output": {
              "can_manage_fields": true,
              "custom-fields": {
                "date1": {
                  "canBeNull": false,
                  "desc": "date test",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "date1",
                  "parentPath": false,
                  "path": "date1",
                  "type": {
                    "base_type": "string",
                    "can_manage_fields": false,
                    "fields": {},
                    "mandatory": true,
                    "name": "softstring",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      },
                      "string.encoding": {
                        "desc": "the output encoding when writing to the type",
                        "type": "string"
                      },
                      "string.max_size_chars": {
                        "desc": "the maximum length of the string in characters",
                        "type": "integer"
                      }
                    },
                    "typename": "string",
                    "types_accepted": [
                      "string",
                      "bool",
                      "float",
                      "int",
                      "integer",
                      "date",
                      "number"
                    ],
                    "types_returned": ["string"]
                  }
                },
                "date2": {
                  "canBeNull": false,
                  "desc": "date test",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "date2",
                  "parentPath": false,
                  "path": "date2",
                  "type": {
                    "base_type": "string",
                    "can_manage_fields": false,
                    "fields": {},
                    "mandatory": true,
                    "name": "softstring",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      },
                      "string.encoding": {
                        "desc": "the output encoding when writing to the type",
                        "type": "string"
                      },
                      "string.max_size_chars": {
                        "desc": "the maximum length of the string in characters",
                        "type": "integer"
                      }
                    },
                    "typename": "string",
                    "types_accepted": [
                      "string",
                      "bool",
                      "float",
                      "int",
                      "integer",
                      "date",
                      "number"
                    ],
                    "types_returned": ["string"]
                  }
                },
                "qexp": {
                  "canBeNull": false,
                  "desc": "qore expression template test",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "qexp",
                  "parentPath": false,
                  "path": "qexp",
                  "type": {
                    "base_type": "string",
                    "can_manage_fields": false,
                    "fields": {},
                    "mandatory": true,
                    "name": "softstring",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      },
                      "string.encoding": {
                        "desc": "the output encoding when writing to the type",
                        "type": "string"
                      },
                      "string.max_size_chars": {
                        "desc": "the maximum length of the string in characters",
                        "type": "integer"
                      }
                    },
                    "typename": "string",
                    "types_accepted": [
                      "string",
                      "bool",
                      "float",
                      "int",
                      "integer",
                      "date",
                      "number"
                    ],
                    "types_returned": ["string"]
                  }
                }
              },
              "name": "qore",
              "path": "/hash",
              "type": "type"
            }
          },
          "name": "mapper-test-4",
          "display_name": "Mapper Test 4",
          "short_desc": "mapper test",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 13"
    },
    {
      "request_id": "uQwwliTtTk6uRkK",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 41,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "remote_id": {
              "name": "id"
            },
            "remote_batch_id": {
              "name": "batch_id"
            },
            "qorus_wfiid": {
              "constant": 1
            }
          },
          "options": {
            "mapper-input": {
              "type": "type",
              "name": "qore",
              "can_manage_fields": true,
              "path": "/hash",
              "custom-fields": {
                "id": {
                  "name": "id",
                  "desc": "id",
                  "type": {
                    "typename": "string",
                    "name": "string",
                    "supported_options": {
                      "qore.no_null": {
                        "type": "bool",
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                      },
                      "string.encoding": {
                        "type": "string",
                        "desc": "the output encoding when writing to the type"
                      },
                      "string.max_size_chars": {
                        "type": "integer",
                        "desc": "the maximum length of the string in characters"
                      }
                    },
                    "options": {
                      "qore.no_null": true
                    },
                    "base_type": "string",
                    "mandatory": true,
                    "types_accepted": ["string"],
                    "types_returned": ["string"],
                    "fields": {},
                    "can_manage_fields": false
                  },
                  "isCustom": true,
                  "canBeNull": false,
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "level": 0,
                  "path": "id",
                  "parentPath": false
                },
                "batch_id": {
                  "name": "batch_id",
                  "desc": "batch_id",
                  "type": {
                    "typename": "string",
                    "name": "string",
                    "supported_options": {
                      "qore.no_null": {
                        "type": "bool",
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                      },
                      "string.encoding": {
                        "type": "string",
                        "desc": "the output encoding when writing to the type"
                      },
                      "string.max_size_chars": {
                        "type": "integer",
                        "desc": "the maximum length of the string in characters"
                      }
                    },
                    "options": {
                      "qore.no_null": true
                    },
                    "base_type": "string",
                    "mandatory": true,
                    "types_accepted": ["string"],
                    "types_returned": ["string"],
                    "fields": {},
                    "can_manage_fields": false
                  },
                  "isCustom": true,
                  "canBeNull": false,
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "level": 0,
                  "path": "batch_id",
                  "parentPath": false
                }
              }
            },
            "mapper-output": {
              "type": "datasource",
              "name": "omquser",
              "path": "/bb_local",
              "custom-fields": {}
            }
          },
          "name": "bbm-data-provider-search-record-iterator",
          "display_name": "Bbm Data Provider Search Record Iterator",
          "short_desc": "test mapper",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 41"
    },
    {
      "request_id": "pFGRnFrRe9feZnp",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 99,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "$local:input": {
              "constant": "$jinfo:output"
            }
          },
          "options": {
            "mapper-input": {
              "type": "type",
              "name": "qore",
              "path": "/hash",
              "can_manage_fields": true,
              "custom-fields": {}
            },
            "mapper-output": {
              "type": "type",
              "name": "qore",
              "can_manage_fields": true,
              "path": "/hash",
              "custom-fields": {
                "$local:input": {
                  "name": "$local:input",
                  "desc": "test",
                  "type": {
                    "typename": "string",
                    "name": "softstring",
                    "supported_options": {
                      "qore.no_null": {
                        "type": "bool",
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                      },
                      "string.encoding": {
                        "type": "string",
                        "desc": "the output encoding when writing to the type"
                      },
                      "string.max_size_chars": {
                        "type": "integer",
                        "desc": "the maximum length of the string in characters"
                      }
                    },
                    "options": {
                      "qore.no_null": true
                    },
                    "base_type": "string",
                    "mandatory": true,
                    "types_accepted": [
                      "string",
                      "bool",
                      "float",
                      "int",
                      "integer",
                      "date",
                      "number"
                    ],
                    "types_returned": ["string"],
                    "fields": {},
                    "can_manage_fields": false,
                    "tags": null
                  },
                  "isCustom": true,
                  "canBeNull": false,
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "level": 0,
                  "path": "$local:input",
                  "parentPath": false
                }
              }
            }
          },
          "name": "issue-3816-update-output-args",
          "display_name": "Issue 3816 Update Output Args",
          "short_desc": "test issue#3816",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 99"
    },
    {
      "request_id": "lrA4a3PLodKttwL",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 47,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "PostDate": {
              "name": "closed"
            },
            "IssueDate": {
              "name": "closed"
            },
            "DateTS": {
              "name": "closed"
            },
            "Fxrate": {
              "constant": 1
            },
            "Cur\\.": {
              "constant": "CZK"
            },
            "InvLineMemo": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getInvLineMemo"
            },
            "Region": {
              "constant": "CZ : SEN3"
            },
            "NScustID2": {
              "constant": 1521
            },
            "InvNumber": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getInvNumber"
            },
            "InvMemo": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getInvMemo"
            },
            "GrossAmt": {
              "name": "amount"
            },
            "TransID": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getTransID"
            },
            "ItemID": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getItemID"
            },
            "VATcode": {
              "value_lookup": "VatCodes.$local:{input.vat_rate}",
              "default": "VAT:UNDEF-CZ"
            },
            "VATonSales": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getVATonSales"
            },
            "Dept": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getDept"
            },
            "Class": {
              "code": "JuliusMeinlMewsNetsuiteTransform::getClass"
            }
          },
          "options": {
            "mapper-input": {
              "type": "datasource",
              "name": "omquser",
              "transaction_management": true,
              "path": "/mews_accounting",
              "descriptions": [
                "Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries",
                "Record-based data provider for db table `public.mews_accounting`; supports create, read/search, update, delete, upsert, and bulk operations"
              ],
              "supports_read": true,
              "supports_update": true,
              "supports_create": true,
              "supports_delete": true,
              "supports_messages": "NONE",
              "custom-fields": {}
            },
            "mapper-output": {
              "type": "type",
              "name": "julius-meinl",
              "descriptions": ["Qore data type \"hash<auto>\""],
              "path": "/netsuite/accounting-import",
              "custom-fields": {}
            }
          },
          "name": "julius-meinl-mews-netsuite-transform",
          "display_name": "Julius Meinl Mews Netsuite Transform",
          "short_desc": "Produce output data to import MEWS accounting data in NetSuite",
          "version": "1.0"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 47"
    },
    {
      "request_id": "as4IAXbXrMJ4hAS",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 22,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "TransferId": "\"id\"",
            "Store": "\"store_code\"",
            "Status": "(\"constant\": \"InTransit\")",
            "ProductCode": "\"product_code\"",
            "QuantityOrdered": "\"ordered\"",
            "QuantityAvailable": "\"available\"",
            "CostEur": "\"cost\""
          },
          "options": {
            "input": "{\n    \"store_code\": {},\n    \"product_desc\": {},\n    \"ordered\": {},\n    \"total\": {},\n    \"filename\": {},\n    \"cost\": {},\n    \"in_transit\": {},\n    \"available\": {},\n    \"id\": {},\n    \"qorus_wfiid\": {},\n    \"product_code\": {},\n    \"uuid\": {},\n}",
            "output": "{\n    \"TransferId\": {},\n    \"Store\": {},\n    \"ProductCode\": {},\n    \"QuantityOrdered\": {},\n    \"QuantityAvailable\": {},\n    \"CostEur\": {},\n    \"Status\": {},\n}"
          },
          "name": "java-test-mapper",
          "display_name": "Java Test Mapper",
          "short_desc": "Java test mapper",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."],
          "groups": ["test"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 22"
    },
    {
      "request_id": "awToLfFDQ6pAJRU",
      "tab_token": "none",
      "data": {
        "iface_kind": "mapper",
        "mapper": {
          "id": 9,
          "type": "mapper",
          "mappertype": "Mapper",
          "fields": {
            "id": {
              "name": "id"
            },
            "string": {
              "name": "rec.key"
            }
          },
          "options": {
            "mapper-input": {
              "can_manage_fields": true,
              "custom-fields": {
                "id": {
                  "canBeNull": false,
                  "desc": "id",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "id",
                  "parentPath": false,
                  "path": "id",
                  "type": {
                    "base_type": "int",
                    "can_manage_fields": false,
                    "fields": {},
                    "mandatory": true,
                    "name": "int",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      }
                    },
                    "typename": "int",
                    "types_accepted": ["int"],
                    "types_returned": ["int"]
                  }
                },
                "rec": {
                  "canBeNull": false,
                  "desc": "rec",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "rec",
                  "parentPath": false,
                  "path": "rec",
                  "type": {
                    "base_type": "hash<auto>",
                    "can_manage_fields": true,
                    "fields": {
                      "key": {
                        "canBeNull": false,
                        "desc": "key",
                        "isCustom": true,
                        "name": "key",
                        "type": {
                          "base_type": "string",
                          "can_manage_fields": false,
                          "fields": {},
                          "mandatory": true,
                          "name": "string",
                          "options": {
                            "qore.no_null": true
                          },
                          "supported_options": {
                            "qore.no_null": {
                              "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                              "type": "bool"
                            },
                            "string.encoding": {
                              "desc": "the output encoding when writing to the type",
                              "type": "string"
                            },
                            "string.max_size_chars": {
                              "desc": "the maximum length of the string in characters",
                              "type": "integer"
                            }
                          },
                          "typename": "string",
                          "types_accepted": ["string"],
                          "types_returned": ["string"]
                        }
                      },
                      "subrec": {
                        "canBeNull": false,
                        "desc": "subrec",
                        "isCustom": true,
                        "name": "subrec",
                        "type": {
                          "base_type": "auto",
                          "can_manage_fields": true,
                          "fields": {
                            "value": {
                              "canBeNull": false,
                              "desc": "value",
                              "isCustom": true,
                              "name": "value",
                              "type": {
                                "base_type": "string",
                                "can_manage_fields": false,
                                "fields": {},
                                "mandatory": true,
                                "name": "string",
                                "options": {
                                  "qore.no_null": true
                                },
                                "supported_options": {
                                  "qore.no_null": {
                                    "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                                    "type": "bool"
                                  },
                                  "string.encoding": {
                                    "desc": "the output encoding when writing to the type",
                                    "type": "string"
                                  },
                                  "string.max_size_chars": {
                                    "desc": "the maximum length of the string in characters",
                                    "type": "integer"
                                  }
                                },
                                "typename": "string",
                                "types_accepted": ["string"],
                                "types_returned": ["string"]
                              }
                            }
                          },
                          "mandatory": false,
                          "name": "auto",
                          "options": null,
                          "supported_options": null,
                          "typename": "any",
                          "types_accepted": ["any"],
                          "types_returned": ["any"]
                        }
                      }
                    },
                    "mandatory": true,
                    "name": "hash<auto>",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      }
                    },
                    "typename": "hash",
                    "types_accepted": ["hash<auto>"],
                    "types_returned": ["hash<auto>"]
                  }
                },
                "string": {
                  "canBeNull": false,
                  "desc": "string",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "string",
                  "parentPath": false,
                  "path": "string",
                  "type": {
                    "base_type": "string",
                    "can_manage_fields": false,
                    "fields": {},
                    "mandatory": true,
                    "name": "string",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      },
                      "string.encoding": {
                        "desc": "the output encoding when writing to the type",
                        "type": "string"
                      },
                      "string.max_size_chars": {
                        "desc": "the maximum length of the string in characters",
                        "type": "integer"
                      }
                    },
                    "typename": "string",
                    "types_accepted": ["string"],
                    "types_returned": ["string"]
                  }
                }
              },
              "name": "qore",
              "path": "/hash",
              "type": "type"
            },
            "mapper-output": {
              "can_manage_fields": true,
              "custom-fields": {
                "id": {
                  "canBeNull": false,
                  "desc": "id",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "id",
                  "parentPath": false,
                  "path": "id",
                  "type": {
                    "base_type": "int",
                    "can_manage_fields": false,
                    "fields": {},
                    "mandatory": true,
                    "name": "int",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      }
                    },
                    "typename": "int",
                    "types_accepted": ["int"],
                    "types_returned": ["int"]
                  }
                },
                "rec": {
                  "canBeNull": false,
                  "desc": "rec",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "rec",
                  "parentPath": false,
                  "path": "rec",
                  "type": {
                    "base_type": "hash<auto>",
                    "can_manage_fields": true,
                    "fields": {
                      "key": {
                        "canBeNull": false,
                        "desc": "key",
                        "isCustom": true,
                        "name": "key",
                        "type": {
                          "base_type": "string",
                          "can_manage_fields": false,
                          "fields": {},
                          "mandatory": true,
                          "name": "string",
                          "options": {
                            "qore.no_null": true
                          },
                          "supported_options": {
                            "qore.no_null": {
                              "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                              "type": "bool"
                            },
                            "string.encoding": {
                              "desc": "the output encoding when writing to the type",
                              "type": "string"
                            },
                            "string.max_size_chars": {
                              "desc": "the maximum length of the string in characters",
                              "type": "integer"
                            }
                          },
                          "typename": "string",
                          "types_accepted": ["string"],
                          "types_returned": ["string"]
                        }
                      },
                      "subrec": {
                        "canBeNull": false,
                        "desc": "subrec",
                        "isCustom": true,
                        "name": "subrec",
                        "type": {
                          "base_type": "auto",
                          "can_manage_fields": true,
                          "fields": {
                            "value": {
                              "canBeNull": false,
                              "desc": "value",
                              "isCustom": true,
                              "name": "value",
                              "type": {
                                "base_type": "string",
                                "can_manage_fields": false,
                                "fields": {},
                                "mandatory": true,
                                "name": "string",
                                "options": {
                                  "qore.no_null": true
                                },
                                "supported_options": {
                                  "qore.no_null": {
                                    "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                                    "type": "bool"
                                  },
                                  "string.encoding": {
                                    "desc": "the output encoding when writing to the type",
                                    "type": "string"
                                  },
                                  "string.max_size_chars": {
                                    "desc": "the maximum length of the string in characters",
                                    "type": "integer"
                                  }
                                },
                                "typename": "string",
                                "types_accepted": ["string"],
                                "types_returned": ["string"]
                              }
                            }
                          },
                          "mandatory": false,
                          "name": "auto",
                          "options": null,
                          "supported_options": null,
                          "typename": "any",
                          "types_accepted": ["any"],
                          "types_returned": ["any"]
                        }
                      }
                    },
                    "mandatory": true,
                    "name": "hash<auto>",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      }
                    },
                    "typename": "hash",
                    "types_accepted": ["hash<auto>"],
                    "types_returned": ["hash<auto>"]
                  }
                },
                "string": {
                  "canBeNull": false,
                  "desc": "string",
                  "firstCustomInHierarchy": true,
                  "isChild": false,
                  "isCustom": true,
                  "level": 0,
                  "name": "string",
                  "parentPath": false,
                  "path": "string",
                  "type": {
                    "base_type": "string",
                    "can_manage_fields": false,
                    "fields": {},
                    "mandatory": true,
                    "name": "string",
                    "options": {
                      "qore.no_null": true
                    },
                    "supported_options": {
                      "qore.no_null": {
                        "desc": "if True then NULL is not supported on input if NOTHING is also not accepted",
                        "type": "bool"
                      },
                      "string.encoding": {
                        "desc": "the output encoding when writing to the type",
                        "type": "string"
                      },
                      "string.max_size_chars": {
                        "desc": "the maximum length of the string in characters",
                        "type": "integer"
                      }
                    },
                    "typename": "string",
                    "types_accepted": ["string"],
                    "types_returned": ["string"]
                  }
                }
              },
              "name": "qore",
              "path": "/hash",
              "type": "type"
            }
          },
          "name": "issue-3444",
          "display_name": "Issue 3444",
          "short_desc": "test for https://git",
          "version": "1.0",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got mapper 9"
    }
  ],
  "pipeline": [
    {
      "request_id": "665FZKc2vVY2bOl",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 113,
          "type": "pipeline",
          "desc": "pipeline 5",
          "name": "pipeline5",
          "display_name": "Pipeline5",
          "short_desc": "pipeline 5",
          "children": [
            {
              "name": "Issue3485PythonProcessor1",
              "type": "processor",
              "pid": "id1",
              "children": [
                {
                  "name": "Issue3485PythonProcessor2",
                  "type": "processor",
                  "pid": "id2"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 113"
    },
    {
      "request_id": "QPYqEIhtREl7JAm",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 26,
          "type": "pipeline",
          "desc": "test",
          "name": "issue-3563-pipeline",
          "display_name": "Issue 3563 Pipeline",
          "short_desc": "test",
          "children": [
            {
              "type": "processor",
              "name": "issue3563CreateProcessor",
              "pid": "KmxHv3Z4t",
              "children": [
                {
                  "type": "queue",
                  "children": [
                    {
                      "type": "processor",
                      "name": "issue3563LeftProcessor",
                      "pid": "15YUM9r_3"
                    }
                  ]
                },
                {
                  "type": "queue",
                  "children": [
                    {
                      "type": "processor",
                      "name": "issue3563RightProcessor",
                      "pid": "-jov0iO0-"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 26"
    },
    {
      "request_id": "jjq765AkHgbHwTI",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 18,
          "type": "pipeline",
          "desc": "Read DB data and create CSV file",
          "name": "julius-meinl-mews-netsuite-transform",
          "display_name": "Julius Meinl Mews Netsuite Transform",
          "short_desc": "Read DB data and create CSV file",
          "children": [
            {
              "type": "mapper",
              "name": "julius-meinl-mews-netsuite-transform:1.0",
              "children": [
                {
                  "type": "processor",
                  "name": "BBM_DataProviderRecordCreateProcessor",
                  "pid": "9rOhHL7TlQ1I"
                }
              ]
            }
          ],
          "input-provider": {
            "type": "datasource",
            "name": "omquser",
            "transaction_management": true,
            "path": "/mews_accounting",
            "descriptions": [
              "Data provider for database `pgsql:omquser@omquser`; use the search API with the `sql` and `args` arguments to execute record-based queries",
              "Record-based data provider for db table `public.mews_accounting`; supports create, read/search, update, delete, upsert, and bulk operations"
            ],
            "supports_read": true,
            "supports_update": true,
            "supports_create": true,
            "supports_delete": true,
            "supports_messages": "NONE"
          },
          "input-provider-options": {
            "input_provider_search": {
              "type": "hash",
              "value": "{qorus_jiid: \"$local:service_method_args[0]\"}\n"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 18"
    },
    {
      "request_id": "X71lGpY4VYlGotN",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 112,
          "type": "pipeline",
          "desc": "pipeline 4",
          "name": "pipeline4",
          "display_name": "Pipeline4",
          "short_desc": "pipeline 4",
          "children": [
            {
              "pid": "id1",
              "name": "Issue3485JavaProcessor1",
              "type": "processor",
              "children": [
                {
                  "pid": "id2",
                  "name": "Issue3485JavaProcessor2",
                  "type": "processor"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 112"
    },
    {
      "request_id": "aXQU0ovVxiU6XSj",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 109,
          "type": "pipeline",
          "desc": "pipeline 1",
          "name": "pipeline1",
          "display_name": "Pipeline1",
          "short_desc": "pipeline 1",
          "children": [
            {
              "type": "queue",
              "children": [
                {
                  "pid": "id1",
                  "name": "Issue3485Processor1",
                  "type": "processor",
                  "children": [
                    {
                      "pid": "id2",
                      "name": "Issue3485Processor2",
                      "type": "processor"
                    }
                  ]
                }
              ]
            },
            {
              "type": "queue",
              "children": [
                {
                  "pid": "id3",
                  "name": "Issue3485Processor1",
                  "type": "processor",
                  "children": [
                    {
                      "pid": "id4",
                      "name": "Issue3485Processor2",
                      "type": "processor"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 109"
    },
    {
      "request_id": "EOPt2HPztW7E4Mu",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 17,
          "type": "pipeline",
          "desc": "test for the BBM_DataProviderRecordCreateProcessor building block",
          "name": "bbm-data-provider-create-processor-test",
          "display_name": "Bbm Data Provider Create Processor Test",
          "short_desc": "test for the BBM_DataProviderRecordCreateProcessor building block",
          "children": [
            {
              "type": "processor",
              "name": "BBM_GetPipelineData",
              "pid": "U3eP3jeIV",
              "children": [
                {
                  "type": "processor",
                  "name": "BBM_DataProviderRecordCreateProcessor",
                  "pid": "T1w5s6wjx"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 17"
    },
    {
      "request_id": "Jd6ziZp8kUdAmsx",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 29,
          "type": "pipeline",
          "desc": "Import XLSX exports from MEWS in NetSuite",
          "name": "julius-meinl-mews-netsuite-import",
          "display_name": "Julius Meinl Mews Netsuite Import",
          "short_desc": "Import XLSX exports from MEWS in NetSuite",
          "children": [
            {
              "type": "mapper",
              "name": "julius-meinl-mews-netsuite-import:1.0"
            }
          ],
          "input-provider": {
            "type": "factory",
            "name": "excelread",
            "path": "",
            "descriptions": [null, "no description available"],
            "options": {
              "path": {
                "type": "string",
                "value": "$xconfig:{import-path}"
              },
              "header_cells": {
                "type": "softstring",
                "value": "a1:x1"
              },
              "worksheet": {
                "type": "string",
                "value": "Items"
              }
            },
            "supports_read": true,
            "supports_messages": "NONE"
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 29"
    },
    {
      "request_id": "YTlSw7HNvgKrvja",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 111,
          "type": "pipeline",
          "desc": "pipeline 3",
          "name": "pipeline3",
          "display_name": "Pipeline3",
          "short_desc": "pipeline 3",
          "children": [
            {
              "pid": "id1",
              "name": "Issue3485Processor2",
              "type": "processor",
              "children": [
                {
                  "pid": "id2",
                  "name": "Issue3485Processor1",
                  "type": "processor"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 111"
    },
    {
      "request_id": "w3zNwJuNV9dLhu8",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 130,
          "type": "pipeline",
          "desc": "pipeline 6",
          "name": "pipeline6",
          "display_name": "Pipeline6",
          "short_desc": "pipeline 6",
          "children": [
            {
              "type": "processor",
              "name": "Issue3485Processor1",
              "pid": "id1",
              "children": [
                {
                  "type": "processor",
                  "name": "Issue3485Processor2",
                  "pid": "id2",
                  "children": [
                    {
                      "type": "processor",
                      "name": "Issue3485Processor3",
                      "pid": "id3"
                    }
                  ]
                }
              ]
            }
          ],
          "input-provider": {
            "name": "omquser",
            "path": "/pipe_table_1",
            "type": "datasource"
          },
          "input-provider-options": {
            "input_provider_search": {
              "type": "hash",
              "value": "{col_1: 2}\n"
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 130"
    },
    {
      "request_id": "lZfdMK9lpDlJGNo",
      "tab_token": "none",
      "data": {
        "iface_kind": "pipeline",
        "pipeline": {
          "id": 19,
          "type": "pipeline",
          "desc": "test",
          "name": "bbm-simple-filter-pipeline-data-test-2",
          "display_name": "Bbm Simple Filter Pipeline Data Test 2",
          "short_desc": "test",
          "children": [
            {
              "type": "processor",
              "name": "BBM_GetPipelineData",
              "pid": "gc_wFTIjY",
              "children": [
                {
                  "type": "processor",
                  "name": "BBM_SimpleFilterPipelineData",
                  "pid": "NEF3L8hSZ",
                  "children": [
                    {
                      "type": "mapper",
                      "name": "bbm-simple-filter-pipeline-data-test-2:1.0",
                      "children": [
                        {
                          "type": "processor",
                          "name": "PipelineElementSaveDataInJob",
                          "pid": "8heYLpGMm"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got pipeline 19"
    }
  ],
  "queue": [
    {
      "request_id": "tUnJKeM8SKNeAnW",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 10,
          "type": "queue",
          "desc": "asynchronous test queue for the ERRORTEST workflow",
          "name": "errortest-async",
          "display_name": "Errortest Async",
          "short_desc": "asynchronous test queue for the ERRORTEST workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 10"
    },
    {
      "request_id": "1cceP1enT5Hmg8N",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 6,
          "type": "queue",
          "desc": "Java user interaction test asynchronous test queue",
          "name": "java-user-interaction-test-1",
          "display_name": "Java User Interaction Test 1",
          "short_desc": "Java user interaction test asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 6"
    },
    {
      "request_id": "6Pl3gcZopDCu2ss",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 5,
          "type": "queue",
          "desc": "asynchronous test queue",
          "name": "async-test",
          "display_name": "Async Test",
          "short_desc": "asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 5"
    },
    {
      "request_id": "MwHpU6gduKhqPyI",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 8,
          "type": "queue",
          "desc": "asynchronous test queue for REF-TEST workflow",
          "name": "ref-test",
          "display_name": "Ref Test",
          "short_desc": "asynchronous test queue for REF-TEST workflow"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 8"
    },
    {
      "request_id": "xZslELYZTYukfK3",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 7,
          "type": "queue",
          "desc": "User interaction test asynchronous test queue",
          "name": "user-interaction-test-1",
          "display_name": "User Interaction Test 1",
          "short_desc": "User interaction test asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 7"
    },
    {
      "request_id": "WM2uAk758dajHXG",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 11,
          "type": "queue",
          "desc": "wf-api asynchronous test queue 1",
          "name": "async_queue_1",
          "display_name": "Async Queue 1",
          "short_desc": "wf-api asynchronous test queue 1"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 11"
    },
    {
      "request_id": "jMG9QXaa9B6oeg0",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 3,
          "type": "queue",
          "desc": "Class workflow asynchronous test queue",
          "name": "qore-class-test",
          "display_name": "Qore Class Test",
          "short_desc": "Class workflow asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 3"
    },
    {
      "request_id": "l3gW8BePOiIkdBl",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 1,
          "type": "queue",
          "desc": "asynchronous demo queue",
          "name": "demo-queue",
          "display_name": "Demo Queue",
          "short_desc": "asynchronous demo queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 1"
    },
    {
      "request_id": "HhX1bBCUEnC6dGN",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 9,
          "type": "queue",
          "desc": "issue 2495 asynchronous test queue",
          "name": "issue-2495-test",
          "display_name": "Issue 2495 Test",
          "short_desc": "issue 2495 asynchronous test queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 9"
    },
    {
      "request_id": "yzR7AjgkRnRMJp4",
      "tab_token": "none",
      "data": {
        "iface_kind": "queue",
        "queue": {
          "id": 2,
          "type": "queue",
          "desc": "example queue",
          "name": "example-step-1",
          "display_name": "Example Step 1",
          "short_desc": "example queue"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got queue 2"
    }
  ],
  "service": [
    {
      "request_id": "MhOIRIPiBoBw8Ks",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 23,
          "type": "service",
          "desc": "issue 3390 Java test",
          "lang": "java",
          "source": "import qore.OMQ.*;\nimport qore.OMQ.UserApi.*;\nimport qore.OMQ.UserApi.Service.*;\n\nimport com.qoretechnologies.qorus.test.regression.JavaTest;\nimport org.qore.lang.reflection.Type;\n\nclass Issue3390JavaTest extends QorusService {\n    public Issue3390JavaTest() throws Throwable {}\n\n    @SuppressWarnings(\"deprecation\")\n    public String test() throws Throwable {\n        try {\n            UserApi.stopCapturingObjectsFromJava();\n            UserApi.clearObjectCache();\n            Type type0 = new Type(\"string\");\n            JavaTest.assertEq(0L, UserApi.getObjectCacheSize());\n            JavaTest.assertEq(true, UserApi.checkObjectCache(type0.getQoreObject()) == null);\n            UserApi.startCapturingObjectsFromJava();\n            Type type1 = new Type(\"string\");\n            JavaTest.assertEq(1L, UserApi.getObjectCacheSize());\n            JavaTest.assertEq(true, UserApi.checkObjectCache(type1.getQoreObject()) != null);\n            return \"OK\";\n        } finally {\n            UserApi.stopCapturingObjectsFromJava();\n        }\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "Issue3390JavaTest",
          "servicetype": "USER",
          "name": "Issue3390JavaTest",
          "display_name": "Issue3390 Java Test",
          "short_desc": "issue 3390 Java test",
          "version": "1.0",
          "autostart": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "test",
              "author": "Qore Technologies, s.r.o."
            }
          ],
          "groups": ["regression", "test"],
          "classes": [
            {
              "id": 1,
              "name": "JavaTest"
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 23"
    },
    {
      "request_id": "usEM1H9M1dS0lvA",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 83,
          "type": "service",
          "desc": "qhtml test",
          "lang": "qore",
          "source": "\n%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\nclass MyHttpHandler inherits AbstractServiceHttpHandler {\n    public {\n    }\n\n    constructor(string url) : AbstractServiceHttpHandler(url, MimeTypeHtml, NOTHING, NOTHING, False) {\n        # set the default resource as the main template\n        setDefaultResource(\"index.qhtml\");\n    }\n} # class\n\nclass Issue3250 inherits QorusService {\n    # name: init\n    # desc: init method\n    init() {\n        # get default root URI path\n        string uri_root = getConfigItemValue(\"uri_root\");\n        # create custom request handler\n        MyHttpHandler lh(uri_root);\n        # add index information for UI\n        lh.setUserIndexInfo(\"Test\", \"Issue 3250 Test Page\", uri_root);\n        # set handler on global listeners\n        bindHttp(lh);\n    }\n\n    # name: getTextResource\n    # desc: resource test\n    string getTextResource(string loc) {\n        return getTextFileFromLocation(loc);\n    }\n\n    # name: getBinaryResource\n    # desc: resource test\n    binary getBinaryResource(string loc) {\n        return getBinaryFileFromLocation(loc);\n    }\n\n    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {\n        return {\n            \"uri_root\": <ConfigItemInfo>{\n                \"default_value\": \"issue3250\",\n                \"description\": \"root URI path for this test\",\n            },\n        };\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "Issue3250",
          "servicetype": "USER",
          "name": "issue-3250",
          "display_name": "Issue 3250",
          "short_desc": "qhtml test",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "getTextResource",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "getBinaryResource",
              "author": "Qore Technologies, s.r.o."
            }
          ],
          "groups": ["test", "regression"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 83"
    },
    {
      "request_id": "hfdijal9jnkGlfB",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 107,
          "type": "service",
          "desc": "generates events for the EVENT-TEST workflow",
          "lang": "qore",
          "servicetype": "USER",
          "name": "eventhelper",
          "display_name": "Eventhelper",
          "short_desc": "generates events for the EVENT-TEST workflow",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, sro"],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "stop",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "get",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "info",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "startPosting",
              "author": "Qore Technologies, sro"
            },
            {
              "name": "stopPosting",
              "author": "Qore Technologies, sro"
            }
          ],
          "groups": ["test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 107"
    },
    {
      "request_id": "bGfFK9dHNSPBn3S",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 685,
          "type": "service",
          "desc": "Dynamic types test service",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass DynamicTypesTestService inherits QorusService {\n    string test(bool skip_types = False) {\n        list Types = (\n            \"qore/hash\",\n            \"qore/ftp/event\",\n            \"qore/sftp/event\",\n            \"qoretechnologies/qorus-api/workflows/create-order/request\",\n            \"qoretechnologies/qorus-api/workflows/create-order/response\",\n        );\n        if ((ENV.MACHTYPE ?? \"\").find(\"alpine\") == -1) {\n            push Types, \"qore/fsevents/event\";\n        }\n\n        # ensure that builtin types are locked\n        map QoreTest::assertTrue(callRestApi(\"GET\", \"dataprovider/types/\" + $1).locked, $1), Types;\n        map QoreTest::assertTrue(callRestApi(\"GET\", \"dataprovider/types/\" + $1 + \"?action=type\").locked, $1), Types;\n        # ensure that builtin types cannot be overwritten\n        map QoreTest::assertEq(403, getResponseCode(\"POST\", \"dataprovider/types\", {\n            \"path\": $1,\n            \"type\": {\n                \"name\": \"string\",\n            },\n        })), Types;\n        # ensure that builtin types cannot be deleted\n        map QoreTest::assertEq(403, getResponseCode(\"DELETE\", \"dataprovider/types/\" + $1), $1), Types;\n\n        QoreTest::assertEq(400, getResponseCode(\"DELETE\", \"dataprovider/types/qore\"));\n\n        logInfo(\"%y\\n\", callRestApi(\"GET\", \"system/metadata/types\"));\n\n        hash<auto> h;\n        if (!skip_types) {\n            h = callRestApi(\"GET\", \"dataprovider/types/test/type-a\");\n            QoreTest::assertEq(\"type-a\", h.name);\n            QoreTest::assertEq(\"/test/type-a\", h.path);\n            QoreTest::assertTrue(h.has_type);\n            QoreTest::assertEq((\"a\",), h.children);\n\n            h = callRestApi(\"GET\", \"dataprovider/types/test/type-a/type\");\n            QoreTest::assertEq(\"/test/type-a\", h.typename);\n            QoreTest::assertEq(\"string\", h.fields.a.type.name);\n            QoreTest::assertTrue(h.fields.a.type.mandatory);\n            QoreTest::assertFalse(h.can_manage_fields);\n\n            h = callRestApi(\"GET\", \"dataprovider/types/test/type-b\");\n            QoreTest::assertEq(\"type-b\", h.name);\n            QoreTest::assertEq(\"/test/type-b\", h.path);\n            QoreTest::assertTrue(h.has_type);\n            QoreTest::assertNothing(h.children);\n\n            h = callRestApi(\"GET\", \"dataprovider/types/test/type-b/type\");\n            QoreTest::assertEq(\"/test/type-b\", h.typename);\n            QoreTest::assertEq(\"string\", h.name);\n            QoreTest::assertFalse(h.or_nothing_type);\n            QoreTest::assertFalse(h.can_manage_fields);\n        }\n\n        return \"OK\";\n    }\n\n    private int getResponseCode(string meth, string path, *hash<auto> args) {\n        try {\n            callRestApi(meth, path, args);\n            QoreTest::assertTrue(False);\n        } catch (hash<ExceptionInfo> ex) {\n            return ex.arg.ex.arg ?? ex.arg ?? -1;\n        }\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "DynamicTypesTestService",
          "servicetype": "USER",
          "name": "dynamic-types-test",
          "display_name": "Dynamic Types Test",
          "short_desc": "Dynamic types test service",
          "version": "1.0",
          "autostart": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "test"
            }
          ],
          "classes": [
            {
              "id": 1,
              "name": "QoreTest"
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 685"
    },
    {
      "request_id": "5CQ7zWHdU9YWtjb",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 64,
          "type": "service",
          "desc": "test for the FTP server",
          "lang": "qore",
          "servicetype": "USER",
          "name": "ftp-test",
          "display_name": "Ftp Test",
          "short_desc": "test for the FTP server",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "get_port",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "port",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "info",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "init",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "stop",
              "author": "Qore Technologies, s.r.o."
            }
          ],
          "groups": ["test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 64"
    },
    {
      "request_id": "1B70SvEHHJ4D2TX",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 148,
          "type": "service",
          "desc": "test for the BBM_FsEventBase class",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass BBM_FsEventBaseTest inherits QorusService {\n    private {\n        ####### GENERATED SECTION! DON'T EDIT! ########\n        ClassConnections_BBM_FsEventBaseTest class_connections();\n        ############ GENERATED SECTION END ############\n    }\n\n    ####### GENERATED SECTION! DON'T EDIT! ########\n    stop() {\n        class_connections.Stop();\n    }\n\n    auto get(auto params) {\n        return class_connections.Get(params);\n    }\n\n    auto clear(auto params) {\n        return class_connections.Clear(params);\n    }\n    ############ GENERATED SECTION END ############\n}\n\n####### GENERATED SECTION! DON'T EDIT! ########\nclass ClassConnections_BBM_FsEventBaseTest inherits Observer {\n    # has to inherit Observer because there is an event-based connector\n    private {\n        # map of prefixed class names to class instances\n        hash<auto> class_map;\n    }\n\n    constructor() {\n        class_map = {\n            \"BBM_FsEventBase\": new BBM_FsEventBase(),\n            \"TestHashStore\": new TestHashStore(),\n        };\n\n        # register observers\n        callClassWithPrefixMethod(\"BBM_FsEventBase\", \"registerObserver\", self);\n    }\n\n    auto callClassWithPrefixMethod(string prefixed_class, string method) {\n        UserApi::logDebug(\"ClassConnections_BBM_FsEventBaseTest: callClassWithPrefixMethod: method: %s class: %y\", method, prefixed_class);\n        return call_object_method_args(class_map{prefixed_class}, method, argv);\n    }\n\n    # @override Observer's update()\n    update(string id, hash<auto> params) {\n        if (id == \"BBM_FsEventBase::fileEvent\") {\n            Event(params);\n        }\n    }\n\n    auto Event(auto params) {\n        UserApi::logDebug(\"Event called with data: %y\", params);\n\n        UserApi::logDebug(\"calling store: %y\", params);\n        return callClassWithPrefixMethod(\"TestHashStore\", \"store\", params);\n    }\n\n    auto Stop(auto params) {\n        UserApi::logDebug(\"Stop called with data: %y\", params);\n\n        UserApi::logDebug(\"calling stop: %y\", params);\n        return callClassWithPrefixMethod(\"BBM_FsEventBase\", \"stop\", params);\n    }\n\n    auto Get(auto params) {\n        UserApi::logDebug(\"Get called with data: %y\", params);\n\n        UserApi::logDebug(\"calling get: %y\", params);\n        return callClassWithPrefixMethod(\"TestHashStore\", \"get\", params);\n    }\n\n    auto Clear(auto params) {\n        UserApi::logDebug(\"Clear called with data: %y\", params);\n\n        UserApi::logDebug(\"calling clear: %y\", params);\n        return callClassWithPrefixMethod(\"TestHashStore\", \"clear\", params);\n    }\n}\n############ GENERATED SECTION END ############\n",
          "base-class-name": "QorusService",
          "class-name": "BBM_FsEventBaseTest",
          "servicetype": "USER",
          "name": "BBM_FsEventBaseTest",
          "display_name": "BBM Fs Event Base Test",
          "short_desc": "test for the BBM_FsEventBase class",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "methods": [
            {
              "name": "get"
            },
            {
              "name": "stop"
            },
            {
              "name": "clear"
            }
          ],
          "classes": [
            {
              "id": 1,
              "name": "BBM_RegularExpressions"
            },
            {
              "id": 2,
              "name": "BBM_FsEventBase"
            },
            {
              "id": 3,
              "name": "TestHashStore"
            }
          ],
          "config-items": [
            {
              "name": "fsevent-root-path",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_FsEventBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "fsevent-mask-type",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_FsEventBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "fsevent-mask",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_FsEventBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "fsevent-min-age-secs",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_FsEventBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "fsevent-recursive",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_FsEventBase",
                "interface-version": "1.0"
              }
            },
            {
              "name": "fsevent-regex-opts",
              "parent": {
                "interface-type": "class",
                "interface-name": "BBM_FsEventBase",
                "interface-version": "1.0"
              }
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 148"
    },
    {
      "request_id": "MMGlsKyOReTLrjb",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 44,
          "type": "service",
          "desc": "test a Java service using a Python connector",
          "lang": "java",
          "source": "import com.qoretechnologies.qorus.*;\nimport com.qoretechnologies.qorus.service.*;\nimport org.qore.jni.QoreObject;\nimport java.util.Map;\nimport org.qore.jni.Hash;\nimport java.lang.reflect.Method;\nimport org.qore.jni.QoreJavaApi;\n\nclass JavaPythonTest extends QorusService {\n    // ==== GENERATED SECTION! DON'T EDIT! ==== //\n    ClassConnections_JavaPythonTest classConnections;\n    // ======== GENERATED SECTION END ========= //\n\n    JavaPythonTest() throws Throwable {\n        // ==== GENERATED SECTION! DON'T EDIT! ==== //\n        classConnections = new ClassConnections_JavaPythonTest();\n        // ======== GENERATED SECTION END ========= //\n    }\n\n    // ==== GENERATED SECTION! DON'T EDIT! ==== //\n    public Object test(Object params) throws Throwable {\n        return classConnections.Connection_1(params);\n    }\n    // ======== GENERATED SECTION END ========= //\n}\n\n// ==== GENERATED SECTION! DON'T EDIT! ==== //\nclass ClassConnections_JavaPythonTest {\n    // map of prefixed class names to class instances\n    private final Hash classMap;\n\n    ClassConnections_JavaPythonTest() throws Throwable {\n        classMap = new Hash();\n        UserApi.startCapturingObjects();\n        try {\n            classMap.put(\"PythonConnectorTest\", QoreJavaApi.newObjectSave(\"PythonConnectorTest\"));\n        } finally {\n            UserApi.stopCapturingObjects();\n        }\n    }\n\n    Object callClassWithPrefixMethod(final String prefixedClass, final String methodName,\n                                     Object params) throws Throwable {\n        UserApi.logDebug(\"ClassConnections_JavaPythonTest: callClassWithPrefixMethod: method: %s, class: %y\", methodName, prefixedClass);\n        final Object object = classMap.get(prefixedClass);\n\n        if (object instanceof QoreObject) {\n            QoreObject qoreObject = (QoreObject)object;\n            return qoreObject.callMethod(methodName, params);\n        } else {\n            final Method method = object.getClass().getMethod(methodName, Object.class);\n            return method.invoke(object, params);\n        }\n    }\n\n    public Object Connection_1(Object params) throws Throwable {\n        UserApi.logDebug(\"Connection_1 called with data: %y\", params);\n\n        UserApi.logDebug(\"calling test: %y\", params);\n        return callClassWithPrefixMethod(\"PythonConnectorTest\", \"test\", params);\n    }\n}\n// ======== GENERATED SECTION END ========= //\n",
          "base-class-name": "QorusService",
          "class-name": "JavaPythonTest",
          "servicetype": "USER",
          "name": "java-python-test",
          "display_name": "Java Python Test",
          "short_desc": "test a Java service using a Python connector",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "test",
              "author": "Qore Technologies, s.r.o."
            }
          ],
          "groups": ["regression", "test"],
          "classes": [
            {
              "id": 1,
              "name": "PythonConnectorTest"
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 44"
    },
    {
      "request_id": "dVSqRhuZ9eikMQW",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 17,
          "type": "service",
          "desc": "test of stateless services",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass StatelessSoapTest inherits QorusService {\n    public {\n        binary logo;\n    }\n\n    init() {\n        logo = getResourceData(\"qore-logo.gif\");\n        registerSoapHandler({\"wsdl_resource\": \"simple.wsdl\"});\n    }\n\n    string test() {\n        return sprintf(\"%s:%d\", gethostname(), getpid());\n    }\n\n    hash<auto> getCompanyInfo(hash<auto> msg) {\n        UserApi::logInfo(\"getCompanyInfo(%y)\", msg);\n\n        return {\n            \"body\": {\n                \"result\": 99.9,\n            },\n            \"docs\": \"<head>testing</head><body>hi there</body>\",\n            \"logo\": logo,\n        };\n    }\n\n    hash<auto> setCompanyLogo(hash<auto> msg) {\n        UserApi::logInfo(\"setCompanyLogo(%y)\", msg);\n\n        # return format for multipart message\n        return {\"body\": \"OK\"};\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "StatelessSoapTest",
          "servicetype": "USER",
          "name": "stateless-soap-test",
          "display_name": "Stateless Soap Test",
          "short_desc": "test of stateless services",
          "version": "1.0",
          "autostart": true,
          "remote": true,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "init",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "test",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "getCompanyInfo",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "setCompanyLogo",
              "author": "Qore Technologies, s.r.o."
            }
          ],
          "groups": ["regression", "test"]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 17"
    },
    {
      "request_id": "9mIkZg47ICVnkS5",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 6,
          "type": "service",
          "desc": "DEPRECATED: API for accessing system properties/parameters",
          "lang": "qore",
          "source": "# Qorus System Service Definitions\n\n/*\n  Copyright (C) 2003 - 2020 Qore Technologies, s.r.o., all rights reserved\n\n  **** NOTICE ****\n    All information contained herein is, and remains the property of Qore\n    Technologies, s.r.o. and its suppliers, if any.  The intellectual and\n    technical concepts contained herein are proprietary to Qore Technologies,\n    s.r.o. and its suppliers and may be covered by Czech, European, U.S. and\n    Foreign Patents, patents in process, and are protected by trade secret or\n    copyright law.  Dissemination of this information or reproduction of this\n    material is strictly forbidden unless prior written permission is obtained\n    from Qore Technologies, s.r.o.\n*/\n\n/** @see @ref ::QorusSystemPropService for method information\n\n    @deprecated This service is now deprecated and only included for backwards compatibility; use prop_get() and prop_update() in internal code (or in the Qorus client) or the REST API to read, set, import, and export properties externally.\n\n    System properties are used for many settings in system services and can be used for user services and workflow settings as well (for example, to set usernames, passwords, hostnames, IP addresses, etc).  System properties are stored in the \\c \\c SYSTEM_PROPERTIES table.\n\n    References to new, non-deprecated functionality are provided in the documentation below; however the following table provides a mapping:\n\n    <b>Prop Method to Prop API Mapping</b>\n    |!Method|!Function or API\n    |get()|@ref prop_get()\n    |export()|@ref rest_api_GET_latest_system_props_export\n    |import()|@ref rest_api_PUT_latest_system_props_import\n    |reload()|@ref rest_api_PUT_latest_system_props_reload\n    |update(), updateMany()|@ref prop_update(), REST API calls:\\n @ref rest_api_PUT_latest_system_props__domain__updateMany \\n @ref rest_api_PUT_latest_system_props__domain___key__set\n\n    Note that all values are stored serialized in YAML format in order to preserve type information.  Serialized values up to 4000 bytes (after YAML serialization, which incurs a small overhead of at least 4 bytes) may be stored; trying to store a larger value will cause a \\c PROP-ERROR exception to be raised.  Domain and key lengths are limited to 240 bytes.\n\n    @see\n    - @ref oprop \"oprop\": a command-line program for reading and setting system properties\n*/\n\n%new-style\n%require-types\n%strict-args\n%enable-all-warnings\n\n#! main prop service class\nclass QorusSystemPropService inherits QorusSystemService {\n    # name: reload\n    #! DEPRECATED: reloads all parameters from database\n    /** @return the number of domains loaded\n\n        @deprecated use REST API call @ref rest_api_PUT_latest_system_props_reload instead\n    */\n    static int reload() {\n        return Qorus.props.reload();\n    }\n\n    # name: get\n    #! DEPRECATED: retrieves the value of a parameter, params: optional: domain, optional: key\n    /** @deprecated use @ref prop_get() or @ref rest_api_GET_latest_system_props instead\n    */\n    static hash get() {\n        return Qorus.props.get();\n    }\n\n    #! DEPRECATED: retrieves all values in the given domain\n    /** @param domain if the domain name is not sent, then a hash of all system properties is returned\n\n        @deprecated use @ref prop_get() or @ref rest_api_GET_latest_system_props__domain_ instead\n    */\n    static *hash get(string domain) {\n        return Qorus.props.get(domain);\n    }\n\n    #! DEPRECATED: retrieves the given value for the given domain and key, if any\n    /** @param domain if the domain name is not sent, then a hash of all system properties is returned\n        @param key if the key is not sent, then a hash of all properties in the domain is returned\n\n        @deprecated use @ref prop_get() @ref rest_api_GET_latest_system_props__domain___key_ instead\n    */\n    static auto get(string domain, softstring key) {\n        return Qorus.props.get(domain, key);\n    }\n\n    # name: update\n    #! DEPRECATED: changes the value of a single parameter, params: domain, key, value\n    /** Updates the value of the property in the domain passed.  If the property does not exist then it is created.\n        If the value is \\c NOTHING (i.e. if no value is supplied) then the property will be deleted.\n        Changes are committed to the database and the internal cache before the method call returns.\n        No changes may be made in the system \\c \"omq\" domain.\n\n        @param domain the domain of the property to set\n        @param key the key to set\n        @param value the value to set in the property\n\n        @return the action code, \\c \"INSERT\", \\c \"UPDATE\", \\c \"DELETE\", \\c \"IGNORED\" (if a non-existent key should be deleted)\n\n        @throw PARAMETER-ERROR if the domain or key arguments are empty strings\n        @throw PROP-ERROR serialized value exceeds 4000 bytes (column limit)\n        @throw UPDATE-ERROR changes attempted in the \\c \"omq\" domain\n\n        @deprecated use @ref prop_update() or @ref rest_api_PUT_latest_system_props__domain___key__set instead\n    */\n    static string update(string domain, softstring key, auto value) {\n        return Qorus.props.update(domain, key, value);\n    }\n\n    # name: updateMany\n    #! DEPRECATED: changes the value of one or more parameters\n    /** Updates the values of the properties in the domain corresponding to the top level keys of the hash passed and the keys corresponding to the second-level keys in the hash according to the rules for the prop.update() method.\n\n        The method returns a hash with \\c \"INSERT\", \\c \"UPDATE\", \\c \"DELETE\" and \\c \"IGNORED\" keys having integer values corresponding to the number of operations performed (deleting a non-existent key or domain causes a \\c \"IGNORED\" value to be returned).\n\n        All changes are made atomically in a single transaction.\n\n        @param hash in the format \\c domain.key.value for updating, inserting, or deleting\n\n        @return a hash of action codes as keys, with the values of each key being the number of actions of that type executed\n\n        @throw PROP-ERROR serialized value exceeds 4000 bytes (column limit)\n        @throw UPDATE-ERROR changes attempted in the \\c \"omq\" domain\n\n        @deprecated use @ref prop_update() or @ref rest_api_PUT_latest_system_props__domain__updateMany instead\n    */\n    static hash updateMany(hash hash) {\n        return Qorus.props.updateMany(hash);\n    }\n\n    # name: export\n    #! DEPRECATED: export system properties to an XML or YAML string\n    /** Exports properties as an XML or YAML string (not a file).  Attributes in the \\c \"qorus_properties\"\n        tag are only informational and are not used with prop.import().\n        The system domain \\c \"omq\" is not exported.\n\n        Example XML output:\n        @verbatim\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <qorus_properties instance=\"quark-1\" schema-version=\"3.1.0\" schema-compatibility=\"3.1.0\" schema-load-compatibility=\"3.1.0\">\n    <domain1>\n        <key1>value</key1>\n        <key2>value</key2>\n    </domain1>\n    </qorus_properties>\n        @endverbatim\n\n        Example YAML output:\n        @verbatim\n    {qorus_properties: {domain1: {key1: \"value\", key2: \"value\"},\n    ^attributes^: {instance: \"quark-1\", schema-version: \"3.1.0\",\n    schema-compatibility: \"3.1.0\", schema-load-compatibility: \"3.1.0\"}}}\n        @endverbatim\n\n        @param domains if this value is set, then only the domains listed are exported\n        @param yaml export as YAML instead of XML if this parameter is \\c True\n\n        @note - type information is only preserved when exporting as a YAML string\n\n        @deprecated use REST API call @ref rest_api_GET_latest_system_props_export instead\n    */\n    static string export(*softlist domains, softbool yaml = False) {\n        return Qorus.props.export(domains, yaml);\n    }\n\n    # name: import\n    #! DEPRECATED: import properties; if there are set domains in the list, only enumerated domains are imported\n    /** @param data the XML or YAML string to import\n        @param domains an optional list of domains to import\n\n        @deprecated use REST API call @ref rest_api_PUT_latest_system_props_import instead\n    */\n    static nothing import(string data, *softlist domains) {\n        Qorus.props.import(data, domains);\n    }\n}\n",
          "base-class-name": "QorusSystemService",
          "class-name": "QorusSystemPropService",
          "servicetype": "SYSTEM",
          "name": "prop",
          "display_name": "Prop",
          "short_desc": "DEPRECATED: API for accessing system properties/parameters",
          "version": "5.1",
          "autostart": false,
          "remote": false,
          "author": ["Qore Technologies, s.r.o."],
          "methods": [
            {
              "name": "reload",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "get",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "update",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "updateMany",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "export",
              "author": "Qore Technologies, s.r.o."
            },
            {
              "name": "import",
              "author": "Qore Technologies, s.r.o."
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 6"
    },
    {
      "request_id": "o29IKAaL50YNEQA",
      "tab_token": "none",
      "data": {
        "iface_kind": "service",
        "service": {
          "id": 54,
          "type": "service",
          "desc": "test of a Java service with YAML metadata",
          "lang": "java",
          "source": "import com.qoretechnologies.qorus.*;\nimport com.qoretechnologies.qorus.service.*;\n\nclass JavaMetadataTest extends QorusService {\n    public int test() {\n        return 1;\n    }\n\n    public String get() throws Throwable {\n        return (String)getConfigItemValue(\"test-string\");\n    }\n}\n",
          "base-class-name": "QorusService",
          "class-name": "JavaMetadataTest",
          "servicetype": "USER",
          "name": "JavaMetadataTest",
          "display_name": "Java Metadata Test",
          "short_desc": "test of a Java service with YAML metadata",
          "version": "1.0",
          "autostart": false,
          "remote": true,
          "methods": [
            {
              "name": "test"
            },
            {
              "name": "get"
            }
          ],
          "config-items": [
            {
              "name": "test-string",
              "description": "test string",
              "config_group": "Test",
              "type": "string",
              "default_value": ""
            }
          ]
        },
        "supports_enable": true,
        "enabled": true
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got service 54"
    }
  ],
  "step": [
    {
      "request_id": "WNz4hNDEqbGImoX",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 76,
          "type": "step",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass Issue3593Step inherits QorusNormalStep {\n    primary() {\n    }\n}\n",
          "name": "Issue3593Step",
          "display_name": "Issue3593 Step",
          "short_desc": "empty step for #3593: https://git",
          "desc": "empty step for #3593: https://git.qoretechnologies.com/qorus/issues/-/issues/3593",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."],
          "class-name": "Issue3593Step",
          "base-class-name": "QorusNormalStep"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 76"
    },
    {
      "request_id": "5b2ckOvfZWYXHKP",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 116,
          "type": "step",
          "lang": "qore",
          "name": "qore-step-8",
          "display_name": "Qore Step 8",
          "desc": "Qore test step class",
          "version": "1.0",
          "steptype": "EVENT",
          "arraytype": "SERIES"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 116"
    },
    {
      "request_id": "QxhOMXKJmSXy1JC",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 147,
          "type": "step",
          "lang": "qore",
          "name": "delayed_step",
          "display_name": "Delayed Step",
          "desc": "step function with a delay",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 147"
    },
    {
      "request_id": "wBwYFrwTFNcQJG3",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 191,
          "type": "step",
          "lang": "qore",
          "name": "dummy_1",
          "display_name": "Dummy 1",
          "desc": "dummy test function",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 191"
    },
    {
      "request_id": "Ua2t3BTAO7Mnipl",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 152,
          "type": "step",
          "lang": "qore",
          "name": "async_test_1",
          "display_name": "Async Test 1",
          "desc": "array test function",
          "version": "1.0",
          "steptype": "ASYNC",
          "arraytype": "NONE",
          "author": ["Qore Technologies, sro"],
          "queue": "async-test"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 152"
    },
    {
      "request_id": "r6jmB4NtU462RAq",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 120,
          "type": "step",
          "lang": "qore",
          "name": "java-step-4",
          "display_name": "Java Step 4",
          "desc": "Java test step class",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "SERIES"
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 120"
    },
    {
      "request_id": "cf3YEE9KspqWW59",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 45,
          "type": "step",
          "lang": "qore",
          "name": "telco_suspend_billing_account",
          "display_name": "Telco Suspend Billing Account",
          "short_desc": "suspend the billing account",
          "desc": "suspend the billing account",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 45"
    },
    {
      "request_id": "f2PLBTYZn8UrWU7",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 50,
          "type": "step",
          "lang": "qore",
          "name": "telco_update_crm_suspend_customer",
          "display_name": "Telco Update Crm Suspend Customer",
          "short_desc": "update the CRM system on the status of the customer suspension action",
          "desc": "update the CRM system on the status of the customer suspension action",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 50"
    },
    {
      "request_id": "dbgPHCaR9NcSFfJ",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 69,
          "type": "step",
          "lang": "qore",
          "source": "%new-style\n%strict-args\n%require-types\n%enable-all-warnings\n\nclass FsmRetryTestStep inherits QorusNormalStep {\n    primary() {\n        *hash<auto> dd = getDynamicData();\n        if (!dd.run) {\n            updateDynamicData({\"run\": True});\n            stepError(\"RETRY-ERROR\", \"retry\", 1ms);\n            return;\n        }\n        logInfo(\"error already thrown\");\n    }\n}\n",
          "name": "FsmRetryTestStep",
          "display_name": "Fsm Retry Test Step",
          "short_desc": "FSM Retry Test Step",
          "desc": "FSM Retry Test Step",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, s.r.o."],
          "class-name": "FsmRetryTestStep",
          "base-class-name": "QorusNormalStep",
          "fsm": [
            {
              "name": "fsm-retry-test",
              "triggers": [
                {
                  "method": "validation"
                }
              ]
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 69"
    },
    {
      "request_id": "S6vIJkKFYUNS4kt",
      "tab_token": "none",
      "data": {
        "iface_kind": "step",
        "step": {
          "id": 153,
          "type": "step",
          "lang": "qore",
          "name": "attach_error_1",
          "display_name": "Attach Error 1",
          "desc": "attach-error dummy step function",
          "version": "1.0",
          "steptype": "NORMAL",
          "arraytype": "NONE",
          "author": ["Qore Technologies, sro"]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got step 153"
    }
  ],
  "type": [
    {
      "request_id": "yz7CHRWz5NBCPdS",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 33,
          "type": "type",
          "path": "/julius-meinl/netsuite/accounting-import",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "PostDate": {
                "name": "PostDate",
                "desc": "",
                "type": {
                  "typename": "date",
                  "name": "date",
                  "display_name": "Date",
                  "short_desc": "Qore data type \"date\"",
                  "desc": "Qore data type \"date\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "date",
                  "mandatory": true,
                  "types_accepted": ["date"],
                  "types_returned": ["date"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "IssueDate": {
                "name": "IssueDate",
                "desc": "",
                "type": {
                  "typename": "date",
                  "name": "date",
                  "display_name": "Date",
                  "short_desc": "Qore data type \"date\"",
                  "desc": "Qore data type \"date\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "date",
                  "mandatory": true,
                  "types_accepted": ["date"],
                  "types_returned": ["date"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "DateTS": {
                "name": "DateTS",
                "desc": "",
                "type": {
                  "typename": "date",
                  "name": "date",
                  "display_name": "Date",
                  "short_desc": "Qore data type \"date\"",
                  "desc": "Qore data type \"date\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "date",
                  "mandatory": true,
                  "types_accepted": ["date"],
                  "types_returned": ["date"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "InvNumber": {
                "name": "InvNumber",
                "desc": "",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "NScustID2": {
                "name": "NScustID2",
                "desc": "",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "ItemID": {
                "name": "ItemID",
                "desc": "",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "GrossAmt": {
                "name": "GrossAmt",
                "desc": "",
                "type": {
                  "typename": "float",
                  "name": "float",
                  "display_name": "Float",
                  "short_desc": "Qore data type \"float\"",
                  "desc": "Qore data type \"float\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "float",
                  "mandatory": true,
                  "types_accepted": ["float", "int", "integer"],
                  "types_returned": ["float"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "Cur.": {
                "name": "Cur.",
                "desc": "",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "Fxrate": {
                "name": "Fxrate",
                "desc": "",
                "type": {
                  "typename": "float",
                  "name": "float",
                  "display_name": "Float",
                  "short_desc": "Qore data type \"float\"",
                  "desc": "Qore data type \"float\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "float",
                  "mandatory": true,
                  "types_accepted": ["float", "int", "integer"],
                  "types_returned": ["float"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "VATcode": {
                "name": "VATcode",
                "desc": "",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "VATonSales": {
                "name": "VATonSales",
                "desc": "",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "Dept": {
                "name": "Dept",
                "desc": "",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "Class": {
                "name": "Class",
                "desc": "",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "Region": {
                "name": "Region",
                "desc": "",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "InvMemo": {
                "name": "InvMemo",
                "desc": "",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "InvLineMemo": {
                "name": "InvLineMemo",
                "desc": "",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "TransID": {
                "name": "TransID",
                "desc": "",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 33"
    },
    {
      "request_id": "Da7NScK7NQuhRwV",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 1,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/data-provider-search/input",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "search_criteria": {
                "name": "search_criteria",
                "desc": "the search criteria keyed by field name",
                "type": {
                  "typename": "*hash<auto>",
                  "name": "*hash<auto>",
                  "display_name": "*hash<auto>",
                  "short_desc": "Qore data type \"*hash<auto>\"",
                  "desc": "Qore data type \"*hash<auto>\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "hash",
                  "mandatory": false,
                  "types_accepted": ["hash<auto>", "nothing", "null"],
                  "types_returned": ["hash<auto>", "nothing"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "default_field_type_info": {
                    "name": "auto",
                    "display_name": "Auto",
                    "short_desc": "Qore data type \"auto\"",
                    "desc": "Qore data type \"auto\"",
                    "supported_options": null,
                    "options": null,
                    "base_type": "auto",
                    "mandatory": false,
                    "types_accepted": ["any"],
                    "types_returned": ["any"],
                    "fields": {},
                    "can_manage_fields": true,
                    "tags": null
                  },
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "search_options": {
                "name": "search_options",
                "desc": "any search options supported by the data provider",
                "type": {
                  "typename": "*hash<auto>",
                  "name": "*hash<auto>",
                  "display_name": "*hash<auto>",
                  "short_desc": "Qore data type \"*hash<auto>\"",
                  "desc": "Qore data type \"*hash<auto>\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "hash",
                  "mandatory": false,
                  "types_accepted": ["hash<auto>", "nothing", "null"],
                  "types_returned": ["hash<auto>", "nothing"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "default_field_type_info": {
                    "name": "auto",
                    "display_name": "Auto",
                    "short_desc": "Qore data type \"auto\"",
                    "desc": "Qore data type \"auto\"",
                    "supported_options": null,
                    "options": null,
                    "base_type": "auto",
                    "mandatory": false,
                    "types_accepted": ["any"],
                    "types_returned": ["any"],
                    "fields": {},
                    "can_manage_fields": true,
                    "tags": null
                  },
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 1"
    },
    {
      "request_id": "YDOykFqt6F8HBqd",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 22,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/kafka/send-message",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "topic": {
                "name": "topic",
                "desc": "The topic for the message",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "partition": {
                "name": "partition",
                "desc": "The partition for the message",
                "type": {
                  "typename": "*int",
                  "name": "*int",
                  "display_name": "*int",
                  "short_desc": "Qore data type \"*int\"",
                  "desc": "Qore data type \"*int\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "int",
                  "mandatory": false,
                  "types_accepted": ["int", "integer", "nothing", "null"],
                  "types_returned": ["int", "integer", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "key": {
                "name": "key",
                "desc": "The message key",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "value": {
                "name": "value",
                "desc": "The message value",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 22"
    },
    {
      "request_id": "1pJM6hL2ckOJnSn",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 14,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/aws/sns/notification",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "Type": {
                "name": "Type",
                "desc": "always `Notification`",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "MessageId": {
                "name": "MessageId",
                "desc": "The AWS message ID (ex: `dc1e94d9-56c5-5e96-808d-cc7f68faa162`)",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "TopicArn": {
                "name": "TopicArn",
                "desc": "The AWS topic ARN (ex: `arn:aws:sns:us-east-2:111122223333:ExampleTopic1`)",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "Subject": {
                "name": "Subject",
                "desc": "The message subject (ex: `TestSubject`)",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "Message": {
                "name": "Message",
                "desc": "The message body",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "Timestamp": {
                "name": "Timestamp",
                "desc": "The date/time of the message",
                "type": {
                  "typename": "date",
                  "name": "date",
                  "display_name": "Date",
                  "short_desc": "Qore data type \"date\"",
                  "desc": "Qore data type \"date\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "date",
                  "mandatory": true,
                  "types_accepted": ["date"],
                  "types_returned": ["date"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "SignatureVersion": {
                "name": "SignatureVersion",
                "desc": "The signation version (ex: `1`)",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "Signature": {
                "name": "Signature",
                "desc": "The message signature (ex: `FMG5tlZhJNHLHUXvZgtZzlk24FzVa7oX0T4P03neeXw8ZEXZx6z35j2FOTuNYShn2h0bKNC/zLTnMyIxEzmi2X1shOBWsJHkrW2xkR58ABZF+4uWHEE73yDVR4SyYAikP9jstZzDRm+bcVs8+T0yaLiEGLrIIIL4esi1llhIkgErCuy5btPcWXBdio2fpCRD5x9oR6gmE/rd5O7lX1c1uvnv4r1Lkk4pqP2/iUfxFZva1xLSRvgyfm6D9hNklVyPfy+7TalMD0lzmJuOrExtnSIbZew3foxgx8GT+lbZkLd0ZdtdRJlIyPRP44eyq78sU0Eo/LsDr0Iak4ZDpg8dXg==`)",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "SigningCertURL": {
                "name": "SigningCertURL",
                "desc": "The signing certificate URL (ex: `https://sns.us-east-2.amazonaws.com/SimpleNotificationService-010a507c1833636cd94bdb98bd93083a.pem`)",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "UnsubscribeURL": {
                "name": "UnsubscribeURL",
                "desc": "The unsubscribe URL (ex: `https://sns.us-east-2.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-2:111122223333:ExampleTopic1:e1039402-24e7-40a3-a0d4-797da162b297`)",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 14"
    },
    {
      "request_id": "vaORW0ZVQLLrHY4",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 11,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/rest-action/request",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "body": {
                "name": "body",
                "desc": "the request body for the REST call",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "hdr": {
                "name": "hdr",
                "desc": "any HTTP headers to add to the request",
                "type": {
                  "typename": "*hash<auto>",
                  "name": "*hash<auto>",
                  "display_name": "*hash<auto>",
                  "short_desc": "Qore data type \"*hash<auto>\"",
                  "desc": "Qore data type \"*hash<auto>\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "hash",
                  "mandatory": false,
                  "types_accepted": ["hash<auto>", "nothing", "null"],
                  "types_returned": ["hash<auto>", "nothing"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "default_field_type_info": {
                    "name": "auto",
                    "display_name": "Auto",
                    "short_desc": "Qore data type \"auto\"",
                    "desc": "Qore data type \"auto\"",
                    "supported_options": null,
                    "options": null,
                    "base_type": "auto",
                    "mandatory": false,
                    "types_accepted": ["any"],
                    "types_returned": ["any"],
                    "fields": {},
                    "can_manage_fields": true,
                    "tags": null
                  },
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "uri_path": {
                "name": "uri_path",
                "desc": "any string to add to the URI path configured for the REST action building block",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 11"
    },
    {
      "request_id": "tYIbahDmzxXD4IS",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 13,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/mqtt-paho/connectionLost",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "class_name": {
                "name": "class_name",
                "desc": "the full exception class name",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "message": {
                "name": "message",
                "desc": "the exception message",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "cause": {
                "name": "cause",
                "desc": "the Java exception object itself",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 13"
    },
    {
      "request_id": "VxXCtfEKBnH2Rse",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 15,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/websockets/send-event",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "cid": {
                "name": "cid",
                "desc": "The connection ID to use to send the message",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "msg": {
                "name": "msg",
                "desc": "The message to send; must be either a `string` or a `binary` type",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 15"
    },
    {
      "request_id": "3lguhYOknEn1PMl",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 30,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/websockets/send-data-event",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "cid": {
                "name": "cid",
                "desc": "The connection ID to use to send the message",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "msg": {
                "name": "msg",
                "desc": "The message to send; can be of any type that can be serialized",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 30"
    },
    {
      "request_id": "8Nc7wufBpLGxyzr",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 2,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/exec-sync-workflow/response",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "description": {
                "name": "description",
                "desc": "An optional description for the last error added to the order, if any",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "duplicate": {
                "name": "duplicate",
                "desc": "a flag that indicates of the workflow order had already been created in the past\"",
                "type": {
                  "typename": "bool",
                  "name": "bool",
                  "display_name": "Bool",
                  "short_desc": "Qore data type \"bool\"",
                  "desc": "Qore data type \"bool\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "bool",
                  "mandatory": true,
                  "types_accepted": ["bool"],
                  "types_returned": ["bool"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "dynamicdata": {
                "name": "dynamicdata",
                "desc": "Any dynamic data hash for the order after synchronous execution",
                "type": {
                  "typename": "*hash<auto>",
                  "name": "*hash<auto>",
                  "display_name": "*hash<auto>",
                  "short_desc": "Qore data type \"*hash<auto>\"",
                  "desc": "Qore data type \"*hash<auto>\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "hash",
                  "mandatory": false,
                  "types_accepted": ["hash<auto>", "nothing", "null"],
                  "types_returned": ["hash<auto>", "nothing"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "default_field_type_info": {
                    "name": "auto",
                    "display_name": "Auto",
                    "short_desc": "Qore data type \"auto\"",
                    "desc": "Qore data type \"auto\"",
                    "supported_options": null,
                    "options": null,
                    "base_type": "auto",
                    "mandatory": false,
                    "types_accepted": ["any"],
                    "types_returned": ["any"],
                    "fields": {},
                    "can_manage_fields": true,
                    "tags": null
                  },
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "error": {
                "name": "error",
                "desc": "the last error code added to the order",
                "type": {
                  "typename": "*string",
                  "name": "*string",
                  "display_name": "*string",
                  "short_desc": "Qore data type \"*string\"",
                  "desc": "Qore data type \"*string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    },
                    "string.empty_to_nothing": {
                      "type": "bool",
                      "desc": "if an empty string should be converted to no value"
                    }
                  },
                  "options": null,
                  "base_type": "string",
                  "mandatory": false,
                  "types_accepted": ["string", "nothing", "null"],
                  "types_returned": ["string", "nothing"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "info": {
                "name": "info",
                "desc": "Additional information for the last error added to the order, if any",
                "type": {
                  "typename": "*hash<auto>",
                  "name": "*hash<auto>",
                  "display_name": "*hash<auto>",
                  "short_desc": "Qore data type \"*hash<auto>\"",
                  "desc": "Qore data type \"*hash<auto>\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "hash",
                  "mandatory": false,
                  "types_accepted": ["hash<auto>", "nothing", "null"],
                  "types_returned": ["hash<auto>", "nothing"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "default_field_type_info": {
                    "name": "auto",
                    "display_name": "Auto",
                    "short_desc": "Qore data type \"auto\"",
                    "desc": "Qore data type \"auto\"",
                    "supported_options": null,
                    "options": null,
                    "base_type": "auto",
                    "mandatory": false,
                    "types_accepted": ["any"],
                    "types_returned": ["any"],
                    "fields": {},
                    "can_manage_fields": true,
                    "tags": null
                  },
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "status": {
                "name": "status",
                "desc": "the workflow order's status after execution",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "workflow_instanceid": {
                "name": "workflow_instanceid",
                "desc": "the `workflow_instanceid` of the order created",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 2"
    },
    {
      "request_id": "V1gzQGtOXya9lWx",
      "tab_token": "none",
      "data": {
        "iface_kind": "type",
        "type": {
          "id": 29,
          "type": "type",
          "path": "/qoretechnologies/building-blocks/websockets/recv-data-event",
          "display_name": "Hash<auto>",
          "short_desc": "Qore data type \"hash<auto>\"",
          "desc": "Qore data type \"hash<auto>\"",
          "typeinfo": {
            "base_type": "hash",
            "name": "hash<auto>",
            "can_manage_fields": true,
            "fields": {
              "event_id": {
                "name": "event_id",
                "desc": "the unique event ID",
                "type": {
                  "typename": "int",
                  "name": "int",
                  "display_name": "Int",
                  "short_desc": "Qore data type \"int\"",
                  "desc": "Qore data type \"int\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "int",
                  "mandatory": true,
                  "types_accepted": ["int", "integer"],
                  "types_returned": ["int", "integer"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "cx": {
                "name": "cx",
                "desc": "the connection context hash",
                "type": {
                  "typename": "hash<auto>",
                  "name": "hash<auto>",
                  "display_name": "Hash<auto>",
                  "short_desc": "Qore data type \"hash<auto>\"",
                  "desc": "Qore data type \"hash<auto>\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "hash",
                  "mandatory": true,
                  "types_accepted": ["hash<auto>"],
                  "types_returned": ["hash<auto>"],
                  "fields": {
                    "socket": {
                      "name": "socket",
                      "desc": "the bind address used to bind the listener in `qorus-core`",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "string",
                        "display_name": "String",
                        "short_desc": "Qore data type \"string\"",
                        "desc": "Qore data type \"string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": true,
                        "types_accepted": ["string"],
                        "types_returned": ["string"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "socket-info": {
                      "name": "socket-info",
                      "desc": "a hash of socket information for the listening socket (as returned by `Qore::Socket::getSocketInfo()`)\n",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "hash<auto>",
                        "display_name": "Hash<auto>",
                        "short_desc": "Qore data type \"hash<auto>\"",
                        "desc": "Qore data type \"hash<auto>\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "hash",
                        "mandatory": true,
                        "types_accepted": ["hash<auto>"],
                        "types_returned": ["hash<auto>"],
                        "fields": {},
                        "can_manage_fields": true,
                        "tags": null,
                        "default_field_type_info": {
                          "name": "auto",
                          "display_name": "Auto",
                          "short_desc": "Qore data type \"auto\"",
                          "desc": "Qore data type \"auto\"",
                          "supported_options": null,
                          "options": null,
                          "base_type": "auto",
                          "mandatory": false,
                          "types_accepted": ["any"],
                          "types_returned": ["any"],
                          "fields": {},
                          "can_manage_fields": true,
                          "tags": null
                        }
                      }
                    },
                    "peer-info": {
                      "name": "peer-info",
                      "desc": "a hash of socket information for the remote socket (as returned by `Qore::Socket::getPeerInfo()`)",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "hash<auto>",
                        "display_name": "Hash<auto>",
                        "short_desc": "Qore data type \"hash<auto>\"",
                        "desc": "Qore data type \"hash<auto>\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "hash",
                        "mandatory": true,
                        "types_accepted": ["hash<auto>"],
                        "types_returned": ["hash<auto>"],
                        "fields": {},
                        "can_manage_fields": true,
                        "tags": null,
                        "default_field_type_info": {
                          "name": "auto",
                          "display_name": "Auto",
                          "short_desc": "Qore data type \"auto\"",
                          "desc": "Qore data type \"auto\"",
                          "supported_options": null,
                          "options": null,
                          "base_type": "auto",
                          "mandatory": false,
                          "types_accepted": ["any"],
                          "types_returned": ["any"],
                          "fields": {},
                          "can_manage_fields": true,
                          "tags": null
                        }
                      }
                    },
                    "url": {
                      "name": "url",
                      "desc": "a hash of broken-down URL information (as returned from `parse_url()`)",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "hash<auto>",
                        "display_name": "Hash<auto>",
                        "short_desc": "Qore data type \"hash<auto>\"",
                        "desc": "Qore data type \"hash<auto>\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "hash",
                        "mandatory": true,
                        "types_accepted": ["hash<auto>"],
                        "types_returned": ["hash<auto>"],
                        "fields": {},
                        "can_manage_fields": true,
                        "tags": null,
                        "default_field_type_info": {
                          "name": "auto",
                          "display_name": "Auto",
                          "short_desc": "Qore data type \"auto\"",
                          "desc": "Qore data type \"auto\"",
                          "supported_options": null,
                          "options": null,
                          "base_type": "auto",
                          "mandatory": false,
                          "types_accepted": ["any"],
                          "types_returned": ["any"],
                          "fields": {},
                          "can_manage_fields": true,
                          "tags": null
                        }
                      }
                    },
                    "id": {
                      "name": "id",
                      "desc": "The unique connection ID assigned by the HTTP server",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "int",
                        "display_name": "Int",
                        "short_desc": "Qore data type \"int\"",
                        "desc": "Qore data type \"int\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "int",
                        "mandatory": true,
                        "types_accepted": ["int", "integer"],
                        "types_returned": ["int", "integer"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "listener-id": {
                      "name": "listener-id",
                      "desc": "the HTTP server listener ID (see `HttpServer::HttpServer::getListenerInfo()`)",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "string",
                        "display_name": "String",
                        "short_desc": "Qore data type \"string\"",
                        "desc": "Qore data type \"string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          }
                        },
                        "options": {
                          "qore.no_null": true
                        },
                        "base_type": "string",
                        "mandatory": true,
                        "types_accepted": ["string"],
                        "types_returned": ["string"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    },
                    "user": {
                      "name": "user",
                      "desc": "The Qorus username for the connection user, if any",
                      "default_value": null,
                      "allowed_values": null,
                      "type": {
                        "name": "*string",
                        "display_name": "*string",
                        "short_desc": "Qore data type \"*string\"",
                        "desc": "Qore data type \"*string\"",
                        "supported_options": {
                          "qore.no_null": {
                            "type": "bool",
                            "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                          },
                          "qore.external_name": {
                            "type": "string",
                            "desc": "A note giving the external name for the type"
                          },
                          "string.encoding": {
                            "type": "string",
                            "desc": "the output encoding when writing to the type"
                          },
                          "string.max_size_chars": {
                            "type": "integer",
                            "desc": "the maximum length of the string in characters"
                          },
                          "string.empty_to_nothing": {
                            "type": "bool",
                            "desc": "if an empty string should be converted to no value"
                          }
                        },
                        "options": null,
                        "base_type": "string",
                        "mandatory": false,
                        "types_accepted": ["string", "nothing", "null"],
                        "types_returned": ["string", "nothing"],
                        "fields": {},
                        "can_manage_fields": false,
                        "tags": null
                      }
                    }
                  },
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "type": {
                "name": "type",
                "desc": "the original message payload type:\n- `STRING`\n- `BINARY`",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              },
              "msg": {
                "name": "msg",
                "desc": "The actual message from the remote WebSocket client - any type that can be deserialized",
                "type": {
                  "typename": "auto",
                  "name": "auto",
                  "display_name": "Auto",
                  "short_desc": "Qore data type \"auto\"",
                  "desc": "Qore data type \"auto\"",
                  "supported_options": null,
                  "options": null,
                  "base_type": "auto",
                  "mandatory": false,
                  "types_accepted": ["any"],
                  "types_returned": ["any"],
                  "fields": {},
                  "can_manage_fields": true,
                  "tags": null,
                  "or_nothing_type": true,
                  "locked": false
                }
              },
              "cid": {
                "name": "cid",
                "desc": "the string connection ID; this ID must be used to send messages to the same connection",
                "type": {
                  "typename": "string",
                  "name": "string",
                  "display_name": "String",
                  "short_desc": "Qore data type \"string\"",
                  "desc": "Qore data type \"string\"",
                  "supported_options": {
                    "qore.no_null": {
                      "type": "bool",
                      "desc": "if True then NULL is not supported on input if NOTHING is also not accepted"
                    },
                    "qore.external_name": {
                      "type": "string",
                      "desc": "A note giving the external name for the type"
                    },
                    "string.encoding": {
                      "type": "string",
                      "desc": "the output encoding when writing to the type"
                    },
                    "string.max_size_chars": {
                      "type": "integer",
                      "desc": "the maximum length of the string in characters"
                    }
                  },
                  "options": {
                    "qore.no_null": true
                  },
                  "base_type": "string",
                  "mandatory": true,
                  "types_accepted": ["string"],
                  "types_returned": ["string"],
                  "fields": {},
                  "can_manage_fields": false,
                  "tags": null,
                  "or_nothing_type": false,
                  "locked": false
                }
              }
            }
          }
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got type 29"
    }
  ],
  "value-map": [
    {
      "request_id": "e31XxsRfihuKvPp",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 17,
          "type": "value-map",
          "name": "SegmentMap",
          "display_name": "Segment Map",
          "short_desc": "Maps MEWS segments to NetSuite segments",
          "desc": "Maps MEWS segments to NetSuite segments; default when no match: `HO : RR : RRT`",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "string",
          "dateformat": "YYYY-MM-DD",
          "exception": false,
          "groups": ["JULIUS-MEINL"],
          "value-maps": [
            {
              "id": 1,
              "key": "10-Retail",
              "value": "HO : RR : RRT : RETL"
            },
            {
              "id": 2,
              "key": "12-Negotiated",
              "value": "HO : RR : RRT : NEGT"
            },
            {
              "id": 3,
              "key": "11-Discount",
              "value": "HO : RR : RRT : DISC"
            },
            {
              "id": 4,
              "key": "22-Government Group",
              "value": "HO : RR : RRG : GOVT"
            },
            {
              "id": 5,
              "key": "20-Corporate Group",
              "value": "HO : RR : RRG : CRPX"
            },
            {
              "id": 6,
              "key": "23-Tour / Wholesalers Group",
              "value": "HO : RR : RRG : TOUR"
            },
            {
              "id": 7,
              "key": "24-SMERF Group",
              "value": "HO : RR : RRG : SMRF"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 17"
    },
    {
      "request_id": "psXL9ysT2mtjr8F",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 7,
          "type": "value-map",
          "name": "issue3102vmap",
          "display_name": "Issue3102vmap",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "int",
          "dateformat": "YYYY-MM-DD",
          "exception": true,
          "groups": ["issue3102group"],
          "value-maps": [
            {
              "id": 1,
              "key": "key1",
              "value": 1
            },
            {
              "id": 2,
              "key": "key2",
              "value": 2
            },
            {
              "id": 3,
              "key": "key3",
              "value": 3
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 7"
    },
    {
      "request_id": "cMtCDN356HkBJNo",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 2,
          "type": "value-map",
          "name": "regression2",
          "display_name": "Regression2",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "string",
          "dateformat": "DD.MM.YYYY",
          "exception": false,
          "groups": ["test"],
          "value-maps": [
            {
              "id": 1,
              "key": "key1",
              "value": "foo"
            },
            {
              "id": 2,
              "key": "key2",
              "value": "bar"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 2"
    },
    {
      "request_id": "8k5N0AT6v8fQxsV",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 113,
          "type": "value-map",
          "name": "value-map-test-int",
          "desc": "Value map test",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "int",
          "dateformat": "YYYY-MM-DD",
          "exception": false,
          "value-maps": [
            {
              "id": 1,
              "key": "a",
              "value": 1
            },
            {
              "id": 2,
              "key": "b",
              "value": 2
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 113"
    },
    {
      "request_id": "wrc3fJTZOdOs57l",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 6,
          "type": "value-map",
          "name": "issue3102regression3",
          "display_name": "Issue3102regression3",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "int",
          "dateformat": "DD.MM.YYYY",
          "exception": true,
          "groups": ["test"],
          "value-maps": [
            {
              "id": 1,
              "key": "key1",
              "value": 1
            },
            {
              "id": 2,
              "key": "key2",
              "value": 2
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 6"
    },
    {
      "request_id": "crbETFfe21bZov0",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 3,
          "type": "value-map",
          "name": "regression3",
          "display_name": "Regression3",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "int",
          "dateformat": "DD.MM.YYYY",
          "exception": true,
          "groups": ["test"],
          "value-maps": [
            {
              "id": 1,
              "key": "key1",
              "value": 1
            },
            {
              "id": 2,
              "key": "key2",
              "value": 2
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 3"
    },
    {
      "request_id": "va1kx34AHXB7hd0",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 115,
          "type": "value-map",
          "name": "value-map-test-string",
          "desc": "Value map test",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "string",
          "dateformat": "YYYY-MM-DD",
          "exception": false,
          "value-maps": [
            {
              "id": 1,
              "key": "a",
              "value": "1"
            },
            {
              "id": 2,
              "key": "b",
              "value": "two"
            },
            {
              "id": 3,
              "key": "c",
              "value": "3.0"
            },
            {
              "id": 4,
              "key": "d",
              "value": "2024-04-02"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 115"
    },
    {
      "request_id": "xCQNFxF2I04XsFx",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 1,
          "type": "value-map",
          "name": "regression1",
          "display_name": "Regression1",
          "short_desc": "test value map",
          "desc": "test value map",
          "author": ["Petr Vanek (Qore Technologies, sro)"],
          "valuetype": "string",
          "dateformat": "DD.MM.YYYY",
          "exception": true,
          "groups": ["test"],
          "value-maps": [
            {
              "id": 1,
              "key": "key1",
              "value": "foo"
            },
            {
              "id": 2,
              "key": "key2",
              "value": "bar"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 1"
    },
    {
      "request_id": "zsPC3PB9GuiR9L9",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 18,
          "type": "value-map",
          "name": "VatCodes",
          "display_name": "Vat Codes",
          "short_desc": "Maps from MEWS VAT rates to NetSuite VAT codes",
          "desc": "Maps from MEWS VAT rates to NetSuite VAT codes; default when no mapping exists: `VAT:UNDEF-CZ`",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "string",
          "dateformat": "YYYY-MM-DD",
          "exception": false,
          "groups": ["JULIUS-MEINL"],
          "value-maps": [
            {
              "id": 1,
              "key": "0",
              "value": "N/A:Mews"
            },
            {
              "id": 2,
              "key": "0.1",
              "value": "VAT:SR-CZ"
            },
            {
              "id": 3,
              "key": "0.15",
              "value": "VAT:R-CZ"
            },
            {
              "id": 4,
              "key": "0.21",
              "value": "VAT:S-CZ"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 18"
    },
    {
      "request_id": "tJDG2ZGMHQJvbCz",
      "tab_token": "none",
      "data": {
        "iface_kind": "value-map",
        "value-map": {
          "id": 114,
          "type": "value-map",
          "name": "value-map-test-date",
          "desc": "Value map test",
          "author": ["Qore Technologies, s.r.o."],
          "valuetype": "date",
          "dateformat": "YYYY-MM-DD HH:mm:SS",
          "exception": false,
          "value-maps": [
            {
              "id": 1,
              "key": "a",
              "value": "2024-04-02T13:30:00.000000+02:00"
            },
            {
              "id": 2,
              "key": "b",
              "value": "2024-04-02T16:00:00.000000+02:00"
            }
          ]
        }
      },
      "action": "return-interface-data-complete",
      "ok": true,
      "message": "got value-map 114"
    }
  ]
}
